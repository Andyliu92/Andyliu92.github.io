[{"content":"序言 在经历许许多多的学习、配置、折腾之后，终于在今天配置好了自己的个人博客。\n在朋友圈、微博盛行的当下，个人博客的风头已过，好像已经是上一个时代的产物了。那么究竟又是什么让我在建站的过程中即使遇到了层层困难，也坚定不移地搭起来这个博客呢？\n第一方面，感觉自己还是需要一个记录与对外表达的窗口。朋友圈等等社交网络固然可以，但是于我来讲似乎显得喧闹了些。我期待的表达，不是浮于表面的事件记录与短暂的情感宣泄。静下心来记录自己成长变化、各阶段真实想法与所思所得才是我我之所需。而这些想法，有时又期待能随时随地回顾，或是与志同道合之人分享。因此介于朋友圈、微博等社交平台与传统纸笔日记之间的个人博客似乎是个不错的选择。从半年前看到王凯师兄的博客便觉心动，到现在终于有了属于自己的一方空间。\n此外，也是最近在学习计算机网络的相关课程。从之前分不清HTTP、URL、TCP等等名词之间的关系的状态一步步地了解了网络的各个方面，而因为课程设计原因深感实践不足。云服务器的配置、连接、博客的搭建与部署、域名的申请与域名解析配置等等正好为动手实践课程内容提供了一个极佳的机会。在搭建服务器、部署博客的过程中也确实不断地将课本中抽象的知识落到实处。\n最后，可能也是最近受龄的影响，觉得自己不能再一天天想着GPA就惶惶不可终日。成天担心对成绩的影响而束手束脚，投入了过多不必要的时间在课业的细枝末节上，生怕漏掉一小点就会有多么大的影响。现在我觉得比较好的态度是：应该投入的时间，我保证投入。除此之外，偶然性是必然有的，考试中等等可能出现的意外情况、偏门的微末之处，实在无必要，也无意义为了它们投入大量的时间。投入了，也不能保证最后的结果。与其如此，正如闫锋老师说的，不如让自己真正做点实在的事出来，在实践中学习，在实践中收获，在主动地做事情的过程当中发挥自己心灵的能动性，让自己过得由己、恣肆、多彩一些。\n因此，也希望这个博客在记录我个人所思所想以外，能够带动我走出一天天为了成绩而焦虑的状态之中，真正地敢于放手去做自己喜欢的事，也才真正能做成自己喜欢的事。\n建站小记  21.11.05 购买腾讯云服务器、购买域名comfluter.life，熟悉linux服务器操作与hugo工具基本使用 21.11.13 在询问完王凯师兄hugo博客部署方法以后，学习hugo模板使用与博客搭建、github使用、github actions + 云服务器自动部署。但是卡在了最后一步Nginx服务器配置，使得服务器端页面一直显示404。 21.11.15 由于Nginx服务器的问题，以及之前摸索阶段各种误操作，决定直接重置腾讯云服务器，将服务器端的功能重新搭建。完成服务器基本设置后激活root账户并配置ssh登录信息，重写了github pages，安装Nginx，以root账户运行，配置Nginx。 21.11.19 由于使用主题时采用了git submodule的方式，而github同步时不同步submodule导致各种错误，重新使用git clone方式引入了主题，重新搭建了博客与github repo，并配置github actions。 21.11.19 解决github actions css无法加载问题，使用git submodule直接推送到github pages，但发现问题仍然存在。最终确定问题在baseURL上，改好后部署。 21.11.19 写下这篇hello world文档。  动手去做一个项目确实是学习的高效方法。通过搭建博客，至少熟悉了以下内容：\n 云服务器 Linux命令行 git命令行操作 git submodule github全流程 github pages github actions hugo使用 域名配置与域名解析 防火墙配置 Nginx服务器搭建  其中许多是以前多次觉得应该去做，而没多久又半途而废的。放弃的理由大概是陷入极多的知识内容而毫无方向，也就失去了学习的意义，但为了一个目标去做，许多事情就顺理成章了。\n希望以后能以更多项目为依托，让自己不断学习、进步。\n","date":"9999-12-31T00:00:00Z","image":"https://comfluter.life/p/hello-world/cover_hu8fe24aed48b4970acc8d4892530f8a6f_213999_120x120_fill_q75_box_smart1.jpg","permalink":"https://comfluter.life/p/hello-world/","title":"Hello, World!"},{"content":"唐宋以前，中国思想笼罩在荀子的思想之下。注重礼（外在表现），唐宋以后才转为仁。\n荀子学生：\n 李斯 韩非 浮丘伯  申培    荀子的礼学讲得很好。\n刘毓璜《先秦诸子初探》：个性极强、作为革命者试图沟通马克思主义与先秦诸子。七十有余在南大讲课时\n参考书目 王先谦《荀子集解》\n荀子的生平  《史記·孟子荀卿列傳》: 荀卿，趙人。年五十始來游學於齊。騶衍之術迂大而閎辯；奭也文具難施【按，騶奭者，齊諸騶子，亦頗采騶衍之術以紀文】；淳于髡久與處，時有得善言。故齊人頌曰：「談天衍，雕龍奭，炙轂過髡。」田駢之屬皆已死齊襄王時，而荀卿最為老師。齊尚修列大夫之缺，而荀卿三為祭酒焉。\n  齊人或讒荀卿，荀卿乃適楚，而春申君以為蘭陵令。春申君死而荀卿廢，因家蘭陵。李斯嘗為弟子，已而相秦。\n  荀卿嫉濁世之政，亡國亂君相屬，不遂大道而營於巫祝，信禨祥，鄙儒小拘，如莊周等又猾稽亂俗，於是推儒、墨、道德之行事興壞，序列著數萬言而卒。因葬蘭陵。\n 战国时期赵人，传说曾在赵王前论军事。为数不多的到过秦国的先秦诸子。《韩非子·初见秦》一般认为是荀子文章。年50游学于齐。稷下学宫学者文集：《管子》。荀子多被选为稷下学宫祭酒。\n老师：老：纯粹，师：有师法\n关于荀子生平的考证 若荀子生平考证可靠，则其生活的下限接近秦始皇统一天下。\n 《盐铁论》：李斯相秦，荀卿为之不食。\n 一般认为荀子逝世接近秦朝建立之时。\n荀子生活在戰國晚期，得見儒、墨、道（道德、莊周）諸家學說。荀子的學術本身受時代影響，帶有綜合的傾向。回应当时时代的大思潮。\n 荀子文本第一篇：劝学。荀子对着庄子的马蹄篇讲的。 性恶：对着孟子的性善论讲的。  荀子的文本  《漢書•藝文志》 诸子略儒家类，著錄《孫卿子》三十三篇。今存三十二篇。 又詩賦，亦列荀子。  荀子的人性论 3种人性论：\n 积极人性论：认为人性是美好光明的。代表：儒家孟子性善论、王阳明心善论。 消极人性论：代表：法家韩非子、道家庄子  一般人理解人性的恶：人性由欲望所驱动。（韩非子） 庄子理解人性的黑暗：来自于人的主观、来自人的自作聪明、来自于人的这种自私。《齐物论》中讲人生下来就尝试用自己的感官理解这个世界。人类社会的黑暗在于依据自己的经验判断赋予这个社会以价值意义。  圣人设计的制度，才与不才均不可幸免。人在社会中越是挣扎，越是用小聪明试图改变社会，越是容易引来更大的灾难。     自然人性论：人的本质是空的，白纸。受后世经验影响很大。  武老师个人感受：中国人和人关系在近三十年来变得大不相同。人与人之间的原则以交易为本。交易以欲往为本。人与人之间的“获得”充斥着消极人性论。中国传统文化中应当为非常积极的人性论氛围。\n对人性无信心，人与动物有什么区别？\n对自然的看法 与儒家大不相同。孔子：给信仰的东西保留领地，同时不利用这份领地。“敬鬼神而远之”\n 天行有常，不为尧存，不为纣亡。应之以治则吉，应之以乱则凶\n 道德与自然无关系。\n 《非相》：相形不如论心，论心不如择术。\n 战国迷信风尚、神异主义色彩浓厚。人们对自己命运所向毫无把握。\n但荀子认为人的一生最终在于自己选择的结果。不相信天命、宿命的决定论，不相信道德的最后依据在于天。\n性 荀子所谓的人性就是所有人都具备的动物性：\n 《荣辱》：凡人有所一同。饑而欲食，寒而欲暖，勞而欲息，好利而惡害。是人之所生而有也，是無待而然者也，是禹桀之所同也。\n 此判断与孟子的判断有错位。\n   孟子 荀子     动物 动物：人性，论证其恶   精神：人性，论证其善，与身俱来的。 精神：后天可塑、习得的    荀子不是典型的性恶论者。\n 目辨白黑美惡，耳辨音聲清濁，口辨酸鹹甘苦，鼻辨芬芳腥臊，骨體膚理辨寒暑疾養。是又人之所生而有也，是無待而然者也，是禹桀之所同也。可以為堯禹，可以為桀，可以為工匠，可以為農賈，在執注錯習俗之所積耳。湯武存則天下從而治，桀紂存則天下從而亂，如是者豈非人之情固可與如此，可與如彼也哉？\n  **材性知能，君子小人一也。**好榮惡辱，好利惡害，是君子小人之所同也。人之生固小人，無師無法則唯利之見耳。堯禹者，非生而具者也，夫起于變故，成乎修為，待盡而後備者也。\n 荀子认为一个人精神层面的内容是后天可塑、后天习得的。\n后天可塑：**变故修为。**改变过去的习惯，修行自己的行为。\n 《正名》：“性者，天之就也；情者，性之質也；欲者，情之應也。”\n  《正名》：“天生之所以然謂之性。生之和所生，精合感應，不事而自然，謂之性。性之好惡喜怒哀樂，謂之情。情然，而心為之擇，謂之慮。心慮而能為之動，謂之偽。”\n 性与伪的关系  《禮論》：“性者本始材樸也，偽者文理隆盛也，無性，則偽之無所加，無偽，則性不能自美。”\n 所有本始材朴（天然）都是不美的。所有美都是经过后天加工的。例证：《劝学》第一段。\n 《儒效》“不聞不若聞之，聞之不若見之，見之不若知之，知之不若行之。學至於行之而止矣。行之，明也。明之為聖人。聖人也者，本仁義，當是非，齊言行，不失毫釐，無它道焉，已乎行之矣。故聞之而不見，雖博必謬；見之而不知，雖識必妄；知之而不行，雖敦必困。不聞不見，則雖當，非仁也，其道百舉而百陷也。\n  礼伪结构 \n荀子的礼乐论 礼的本源：  《说文解字》“礼，履也。所以事神致福也，从示从丰。”\n 先秦：礼乐的文化属性为主，制度属性为次。\n但荀子之礼就是制度\n荀子的礼的起源说 欲分说：\n “礼起于何也？曰：人生而有欲，欲而不得，则不能无求，求而无度量分界，则不能不争。争则乱，乱则穷。**先王恶其乱也，故制礼义以分之，以养人之欲，给人之求。**使欲必不穷乎物，物必不屈于欲，两者相持而长，是礼之所起也。”\n 礼的起源在于限定而满足人的欲望。完全制度性的产物。荀子对于礼的定义与法家对于法的定义相通。法：权利与义务的具体归属。\n礼满足人的需求的途径：养说：\n “故礼者养也。刍豢稻粱，五味调香，所以养口也；椒兰芬苾，所以养鼻也 ；雕琢刻镂黼黻文章，所以养目也；钟鼓管磬琴瑟竽笙，所以养耳也；疏房檖貌越席床笫几筵，所以养体也。”\n 荀子的人性论对于礼论的影响  《性恶》：“今人之性，生而有好利焉，顺是，故争夺生而辞让亡焉；生而有疾恶焉，顺是，故残贼生而忠信亡焉；生而有耳目之欲、有好声色焉，顺是，故淫乱生而礼义文理亡焉。然则从人之性，顺人之情，必出于争夺，合于犯分乱理而归于暴。”\n 欲向伪：礼；向性：暴。礼乐是为了矫正人性的。\n与法家想法接近。\n礼的形成：教与学  《荀子•劝学》：干越夷貉之子，生而同声，长而异俗，教使之然也。\n  《荀子•劝学》：青，取之于蓝，而青于蓝；冰，水为之，而寒于水。……积土成山，风雨兴焉；积水成渊，蛟龙生焉；积善成德，而神明自得，圣心备焉”。 ……故学数有终，若其义则不可须臾舍也。为之，人也；舍之，禽兽也 。\n 人之所以成人在于学习、读书。\n问题：经不起宋明理学、心学的诘问：\n 尧舜读什么书？ 礼应当有谁来制定？  荀子：礼应当由圣王而制定。但若如此，人世间的规则在于早生之聪明人编出来的。\n荀子的政治思想 独特。\n传统法家意义上的官僚制度理想 体现先王制定的法度\n 以等级组织，将所有人编排起来。等级没有世袭，其获得取决于个人的能力，以及国家根据个人的能力给予的安排。  这一点上与商鞅无区别   按照新的等级组织，分配社会资源。 以赏罚制度，维护等级制度的权威。   《荀子·王制》：请问为政？曰：贤能不待次而举，罢不能不待须而废，元恶不待教而诛，中庸不待政而化。分未定也，则有昭缪。\u0026hellip;故奸言、奸说、奸事、奸能、遁逃。反侧之民，职而教之，须而待之；勉之以庆赏，惩之以刑罚，安职则畜，不安职则弃。五疾，上收而养之，材而事之，官施而衣食之，**兼覆无遗。才行反时者，死无赦。**夫是之谓天德，是王者之政也。\n 兼覆无遗：荀子新创。理想社会：“覆盂”。中国古代社会：无限责任权利义务关系。\n荀子儒学观念下的政治构想  主张国家制度安排一切，编排所有人。但集权下的等级安排，一部分应来自于民间习俗和伦理关系。 “隆礼进士，尚贤使能”。在编排社会等级的时候，*着重考虑德性、学问、超越功利的技术能力。*德性的来源是诗书文献，旧的传统。是国家权力之外的依据。 集权和制度设计，其操控者是谁？荀子期待设想中的圣王出现。圣王：尽伦尽制  圣王：\n 道德上：尽伦。可以为师。极致：圣 行为上：尽制。可以为君。极致：王  尽伦尽制、君师合一、既圣且王\n有这样的人才能行这样的事。这样的人比孔子还伟大。\n以礼义“壹民”（《议兵》）  臣所闻古之道，凡用兵攻战之本，在乎壹民。……故善附民者，是乃善用兵者也。故兵要在乎善附民而已。\n  秦人其生民陿阸，其使民也酷烈，劫之以埶，隐之以阨，忸之以庆赏，酋之以刑罚，使天下之民所以要利于上者，非斗无由也。阨而用之，得而后功之，功赏相长也，五甲首而隶五家，是最为众强长久，多地以正，故四世有胜，非幸也，数也。\n  礼者，治辨之极也，强固之本也，威行之道也，功名之总也。王公由之，所以得天下也，不由，所以陨社稷也。故坚甲利兵不足以为胜，高城深池不足以为固，严令繁刑不足以为威。由其道则行，不由其道则废。\n 一：中国古代文法专治。\n大一统的期待 “器与名不可以假人。”\n儒家的大一统，子思、孟子、荀子都谈，是理念上的。秦汉之际法家也在谈，是技术上如何做到的问题。\n荀子既有理念，又有技术。\n背景：\n 既有礼乐文化下对于周初的回归和憧憬。 战国时代军事联盟政治的现实考量。 多数人眼中，是解决战争灾难的最好方案。  春秋霸政崩溃后，和平共处的解决方案不再可行。    总结 虽然有许多与法家相近的内容，但是认为最终还是在于人。\n十二字箴言：\n 有治人，无治法。有乱君，无乱国。\n 强调人、君。并不认为制度是最重要的。好的国家、制度最终还在于培养出君子。\n考核：课本中任选一组、一篇文章写读书笔记。不少于3000字。期限在放假后一周左右。\n读书笔记写法参考：《学术训练与学术规范：中国古代史研究入门》\n","date":"2021-12-08T00:00:00Z","permalink":"https://comfluter.life/p/%E5%8C%96%E6%80%A7%E8%B5%B7%E4%BC%AA%E8%8D%80%E5%AD%90%E7%9A%84%E7%A4%BC%E5%AD%A6%E6%80%9D%E6%83%B3/","title":"化性起伪——荀子的礼学思想"},{"content":"Circuit Prototype  \nThe gain is $V=\\frac{kT}{q}=25.4$ mV per e-fold intensity change.\nDeficient in 2 respects:\n High signal offset Slow response  Advanced circuit  \n left side: source follower lowpass feedback internal adaptive learning model to predict the input signal. output: the comparison of the input signal and prediction.  Right side: Comparison model\n $Q_n, Q_{cas}, Q_{p}$ consist a inverting amplifier for feedback. $V_b$: determines the cutoff frequency for receptor, by setting the bias current. $Q_{cas}$: cascode which nullifies the Miller capacitance feedback loop: adaptive element and capacitor $C_1$ and $C_2$  Circuit Performance Steady-state closed-loop gain: $$ \\frac{\\frac{v_o}{V_T}}{\\frac{i}{l_{bg}}} = \\frac{1}{\\kappa} $$\nTransient closed-loop gain: $$ A_{cl} \\equiv \\frac{\\frac{v_o}{V_T}}{\\frac{i}{l_{bg}}} = \\frac{1}{\\kappa} \\frac{C_1+C_2}{C_2} $$\nTime constant of the receptor:(baseline speed) $$ \\tau_{in} = \\frac{C}{g} = \\frac{C V_T}{I_{bg}} $$\nThe speedup obtained by using the active feedback to clamp the input node is given by: $$ A_{loop} = \\frac{A_{amp}}{A_{cl}} $$\nThe total receptor noise in dimensionlessinput-referred units is given by: $$ \\frac{\\Delta i^2}{I_{bg}^{2}} = \\frac{q}{C_{eff}V_T} $$ where $C_{eff}$ is the effective input capacitance including the effect of total loop gain\nThe spectral density of the noise within the passband is given by a simple computa- tion involving the first-order low-pass filter at the input:(noise spectral density) $$ S = \\frac{4q}{I_{bg}} $$\nSecond-order temporal effects:\nA second-order time-domain analysis reveals that in order for the receptor to be a first-order system (i.e. produce a non-ringing response to a step input), the output-node time constant of the feedback amplifier must be faster than the input node time constant by a factor of $A_{loop}$. However, since the maximum Q of the circuit only scales as $\\sqrt{A_{loop}}$, a large bias current may not be essential. We usually tolerate some resonance in return for filtering out flicker from artificial lighting and reducing noise at high intensities.\nDynamic Range:\nThe usable bandwidth of the receptor is proportional to the intensity. The receptor has a bandwidth of at least 60Hz (like human photopic vision) down to an irradiance of about 1 mW/m^2. This irradiance corresponds to an illuminance of about 1 lux for 555 nm (yellow) photons.\nReceptor Characteristics  The amplitude of the response to the small contrast variation is almost invariant to the absolute intensity, owing to the logarithmic response property. The adaptation makes the receptor have high gain for rapidly varying intensities and low gain for slowly varying intensities. A careful examination shows that the receptor adapts very rapidly in response to the decade changes in intensity. This rapid adaptation is due to the use of an adaptive element with an expansive nonlinearity. Adaptation occurs when charge is transferred through the adaptive element onto or off the storage capacitor.The adaptive element acts like a pair of diodes, in parallel, with opposite polarity. The current increases exponentially with voltage for either sign of voltage, and there is an extremely high-resistance region around the origin, as shown in Figure 4. The I-V relationship of the expansive element means that the effective resistance of the element is huge for small signals and small for large signals. Hence, the adaptation is slow for small signals and fast for large signals.    This behavior is useful, because it means that the receptor can adapt quickly to a large change in conditions-say, moving from shadow into sunlight-while maintaining high sensitivity to small and slowly varying signals    Source DOI: 10.1109/iscas.1994.409266 Ref: DELBRUCK, T. \u0026amp; MEAD, C. A. Adaptive photoreceptor with wide dynamic range. IEEE.\n","date":"2021-12-07T00:00:00Z","image":"https://comfluter.life/p/adaptive-photoreceptor-with-wide-dynamic-range/2_hu45083fbefb3cfc2ab04ea1474729dfa9_70951_120x120_fill_q75_box_smart1.jpg","permalink":"https://comfluter.life/p/adaptive-photoreceptor-with-wide-dynamic-range/","title":"Adaptive Photoreceptor with Wide Dynamic Range"},{"content":"Reading and Saving Images 函数 cv2.imwrite()用于将图像保存到指定的文件\n retval = cv2.imwrite(filename, img [, paras])\n  cv2.imwrite() 将 OpenCV 图像保存到指定的文件。 cv2.imwrite() 基于保存文件的扩展名选择保存图像的格式。 cv2.imwrite() 只能保存 BGR 3通道图像，或 8 位单通道图像、或 PNG/JPEG/TIFF 16位无符号单通道图像。  Arguments  filename：要保存的文件的路径和名称，包括文件扩展名 img：要保存的 OpenCV 图像，nparray 多维数组 paras：不同编码格式的参数，可选项  cv2.CV_IMWRITE_JPEG_QUALITY：设置 .jpeg/.jpg 格式的图片质量，取值为 0-100（默认值 95），数值越大则图片质量越高； cv2.CV_IMWRITE_WEBP_QUALITY：设置 .webp 格式的图片质量，取值为 0-100； cv2.CV_IMWRITE_PNG_COMPRESSION：设置 .png 格式图片的压缩比，取值为 0-9（默认值 3），数值越大则压缩比越大。   retval：返回值，保存成功返回 True，否则返回 False。  Notice  cv2.imwrite() 保存的是 OpenCV 图像（多维数组），不是 cv2.imread() 读取的图像文件，所保存的文件格式是由 filename 的扩展名决定的，与读取的图像文件的格式无关。 对 4 通道 BGRA 图像，可以使用 Alpha 通道保存为 PNG 图像。 cv2.imwrite() 指定图片的存储路径和文件名，在 python3 中不支持中文和空格（但并不会报错）。必须使用中文时，可以使用 cv2.imencode() 处理，参见扩展例程。  Examples # 1.4 图像的保存 imgFile = \u0026#34;../images/logoCV.png\u0026#34; # 读取文件的路径 img3 = cv2.imread(imgFile, flags=1) # flags=1 读取彩色图像(BGR) saveFile = \u0026#34;../images/imgSave.png\u0026#34; # 保存文件的路径 # cv2.imwrite(saveFile, img3, [int(cv2.IMWRITE_PNG_COMPRESSION), 8]) # 保存图像文件, 设置压缩比为 8 cv2.imwrite(saveFile, img3) # 保存图像文件 # 1.5 保存中文路径的图像 imgFile = \u0026#34;../images/logoCV.png\u0026#34; # 读取文件的路径 img3 = cv2.imread(imgFile, flags=1) # flags=1 读取彩色图像(BGR) saveFile = \u0026#34;../images/测试图02.jpg\u0026#34; # 带有中文的保存文件路径 # cv2.imwrite(saveFile, img3) # imwrite 不支持中文路径和文件名，读取失败，但不会报错! img_write = cv2.imencode(\u0026#34;.jpg\u0026#34;, img3)[1].tofile(saveFile) Debug  OpenCv error: (-2) could not find a writer for the specified extension in function cv::imwrite_\n Didn\u0026rsquo;t specify the extension name for the image to be saved so that OpenCv cannot tell which encoder to use.\n","date":"2021-12-07T00:00:00Z","permalink":"https://comfluter.life/p/opencv-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/","title":"OpenCV 学习随记"},{"content":"任务  断点调试：解决training时参数错误的TypeError  使用vscode中launch.json加入args参数    问题  ToD-BERT模型适用性？ 数据搬运是否是性能瓶颈？  ","date":"2021-12-06T00:00:00Z","permalink":"https://comfluter.life/p/%E5%A4%A7%E5%88%9B%E5%AF%B9%E8%AF%9D%E7%B3%BB%E7%BB%9F21.12.06%E7%BB%84%E4%BC%9A/","title":"大创对话系统21.12.06组会"},{"content":"《逍遥游》  而后乃今培风\n  清末胡林翼：办大事，以集才集气集势为要。   蜩与学鸠笑之曰：“我决起而飞，抢榆枋而止，时则不至，而控于地而已矣，奚以之九万里而南为？”\n  日本福永光司说：“蜩与学鸠，总是嘲笑一切伟大者，他们到底只是些‘侏儒之群’而已。”   之二虫有何知？\n  明陈深：“教人把胸襟识见，扩充一步，不得以所知所历者而自足也。”   有鸟焉，其名为鹏，背若泰山，翼若垂天之云；抟扶摇羊角而上者九万里，绝云气，负青天，然后图南，且适南冥也。斥鷃笑之曰：‘彼且奚适也？我腾跃而上，不过数仞而下，翱翔蓬蒿之间，此亦飞之至也。而彼且奚适也？’”此小大之辩也。\n  王博说：“在鲲鹏的语言中，关键的问题不在于知识，而是眼界，或者人们习惯说的境界。”   故夫知效一官、行比一乡、德合一君、而征一国者，其自视也，亦若此矣。\n  福永光司说：“这些人就是那些枪上榆枋又投回地面的学鸠，就是那在习惯与惰性之中频频鼓着翅膀的蜩。”他们安住在常识层面的价值与规范之世界，将这一角世界当做世界之全，而埋没其中。他们毕竟与自己原系何种存在，人之“应然”为何，人之根源的真实生涯是何物这等问题全不相及。   彼于致福者，未数数然也。此虽免乎行，犹有所待者也。若夫乘天地之正，而御六气之辩，以游无穷者，彼且恶乎待哉？故曰：至人无己，神人无功，圣人无名。\n  有所待：有所依待。即有所拘束，致精神不得自主，心灵不得安放。 徐复观先生说：“人生之所以受压迫，不自由，乃由于自己不能支配自己，而须受外力的牵连。受外力的牵连，即会受到外力的限制甚至支配。这种牵连，称之为‘待’。” 徐复观先生说：“乘天地之正，郭象以为‘即是顺万物之性’\u0026hellip;\u0026hellip;然之所以不能顺万物之性，主要是来自物我之对立。在物我对立中，人情总是以自己作为衡量万物的标准，因而发生是非好恶之情，给万物以有形无形的干扰，自己也会同时感到处处受到外物的牵挂，凝滞。” 恶乎待哉：方东美先生说：“一个人要真正获得精神自由，必须‘无待’！那么怎样可以无待呢？就是从事这个生活的人自己要有一个使命，要在自己的生命宇宙里面，自作主宰。” 无己：指没有偏执的我见，即去除自我中心，亦即扬弃为功名束缚的小我，而臻至与天地精神往来的境界。徐复观先生说：“庄子的‘无己’，与慎到的‘去己’，是有分别的。总说一句，慎到的‘去己’，是一去百去，而庄子的‘无己’，让自己的精神，从形骸中突破出来，而上升到自己与万物相通的根源之地。” 方东美先生说：“庄子同一般世俗的英雄不同，他所谓的‘真人’、‘至人’、‘神人’，并没有这种精神的优越感，也没有这种小我的观点，也就是说他并没有划一道鸿沟，把自己和宇宙隔离开来，把自己和一般人隔离开来！这就说所谓的‘至人无己，神人无功，圣人无名。’。”   瞽者无以与乎文章之观，聋者无以与乎钟鼓之声。岂唯形骸有聋盲哉？夫知亦有之！\n  之人也，之德也，将旁礴万物以为一，世蕲乎乱，孰弊弊焉以天下为事！之人也，物莫之伤：大浸稽天而不溺，大旱金石流，土山焦而不热。是其尘垢秕糠将犹陶铸尧舜者也，孰肯以物为事？\n  世蕲乎乱，意指世人争功求名，纷纷扰扰，党派倾轧，勾心斗角，所以说求乱不已。   尧治天下之民，平海内之政，往见四子藐姑射之山，汾水之阳，窅然丧其天下焉。\n ","date":"2021-12-04T00:00:00Z","permalink":"https://comfluter.life/p/%E5%BA%84%E5%AD%90%E6%91%98%E5%BD%95/","title":"《庄子》摘录"},{"content":"大学之道，在明明德，在亲民，在止于至善。知止而后能定，定而后能静，静而后能安，安而后能虑，虑而后能得。物有本末，事有始终，知所先后，则近道矣。古之欲明明德于天下者，先治其国；欲治其国者，先齐其家；欲齐其家者，先修其身；欲修其身者，先正其心；欲正其心者，先诚其意；欲诚其意者，先致其知；致知在格物。物格而后知至，知至而后意诚，意诚而后心正，心正而后身修，身修而后家齐，家齐而后国治，国治而后天下平。自天子以至于庶人，壹是皆以修身为本。其本乱而末治者，否矣。其所厚者薄，而其所薄者厚，未之有也。此谓知本，此谓知之至也。\n康诰曰：“克明德”。\u0026hellip;帝典曰：“克明俊德”\u0026hellip;\n汤之盤铭曰：“苟日新，日日新，又日新。”康诰曰：“作新民。”诗曰：“周虽旧邦，其命惟新。”是故君子无所不用其极。\n君子贤其贤而亲其亲，小人乐其乐而利其利，此以没世不忘也。\n所谓诚其意者，毋自欺也。如恶恶臭，如好好色，此之谓自谦，故君子必慎其独也！小人闲居为不善，无所不至，见君子而后厌然，掩其不善，而著其善。人之视己，如见其肺肝然，则何益矣。此谓诚于中，形于外，故君子必慎其独也。曾子曰：“十目所视，十手所指，其严乎！”富润屋，德润身，心广体胖，故君子必诚其意。\n《康诰》曰：“如保赤子。”心诚求之，虽不中，不远矣。\u0026hellip;是故君子有诸己而后求诸人，无诸己而后非诸人。\n《诗》云：“乐只君子，民之父母。”民之所好好之，民之所恶恶之，此之谓民之父母。\n德者本也，财者末也。\n是故君子有大道，必忠信以得之，骄泰以失之。\n","date":"2021-12-03T00:00:00Z","permalink":"https://comfluter.life/p/%E5%A4%A7%E5%AD%A6%E6%91%98%E5%BD%95/","title":"《大学》摘录"},{"content":"《中庸》 天命谓之性，率性谓之道，修道谓之教。道也者，不可须臾离也，可离非道也。是故君子戒慎乎其所不睹，恐惧乎其所不闻。莫现乎隐，莫显乎微，故君子慎其独也。喜怒哀乐之未发，谓之中；发而皆中节，谓之和。中也者，天下之大本也；和也者，天下之达道也。致中和，天地位焉，万物育焉。\n仲尼曰：“君子中庸，小人反中庸。”君子之中庸也，君子而时中；小人之中庸也，小人而无忌惮也。\n子曰：“舜其大知也与！舜好问而好察迩言，隐恶而扬善，执其两端，用其中于民，其斯以为舜乎！”\n子曰：“天下国家可均也，爵禄可以辞也，白刃可以蹈也，中庸不可能也。”\n子路问强。子曰：“\u0026hellip;故君子和而不流，强哉矫！中立而不倚，强哉矫！国有道，不变塞焉，强哉矫！国无道，至死不变，强哉矫！”\n子曰：“素隐行怪，后世有述焉，吾弗为之矣。君子遵道而行，半途而废，吾弗能已矣。君子依乎中庸，遁世不见知而不悔，唯圣者能之。”\n君子之道费而隐\u0026hellip;天地之大也，人尤有所憾。故君子语大，天下莫能载焉；语小，天下莫能破焉。诗云：“鸢飞戾天，鱼跃于渊。”其言上下察也。君子之道，造端乎夫妇，及其至也，察乎天地。\n子曰：“道不远人。人之为道而远人，不可以为道。”诗云：“伐柯伐柯，其则不远。”执柯以伐柯，睨而视之，犹以为远。故君子治人以人，改而止。\n庸德之行，庸言之谨，有所不足，不敢不勉，有余不敢尽，言顾行，行顾言，君子乎不慥慥尔！\n君子素位而行，不愿乎其外。素富贵，行乎富贵；素贫贱，行乎贫贱；素夷狄，行乎夷狄；素患难，行乎患难，君子无入而不自得焉。在上位不陵下，在下位不援上，正己而不求于人则无怨。上不怨天，下不尤人。故君子居易以俟命，小人行险以侥幸。子曰：“射有似乎君子，失诸正鹄，反求诸其身。”\n君子之道，譬如行远必自迩，譬如登高必自卑。\n","date":"2021-12-03T00:00:00Z","permalink":"https://comfluter.life/p/%E5%AD%90%E6%80%9D%E5%AD%90%E6%91%98%E5%BD%95/","title":"《子思子》摘录"},{"content":"Vscode extensions for web development  ESLint  Integrates ESLint JavaScript into VS Code.   Prettier  JS code formatter   JavaScript (ES6) code snippets  Tools  Node.JS  (NodeJS安装-菜鸟教程)[https://www.runoob.com/nodejs/nodejs-install-setup.html]    ","date":"2021-11-30T00:00:00Z","permalink":"https://comfluter.life/p/1-introduction-to-programming-languages-and-tools-of-the-trade/","title":"1 Introduction to Programming Languages and Tools of the Trade"},{"content":"基本命令  创建虚拟环境：conda create -n \u0026lt;env_name\u0026gt; python=X.X 激活虚拟环境：conda activate \u0026lt;env_name\u0026gt;  Minutiae  unable auto activate base: conda config --set auto_activate_base false  ","date":"2021-11-30T00:00:00Z","permalink":"https://comfluter.life/p/2-introduction-to-github/","title":"2 Introduction to GitHub"},{"content":"基本命令  创建虚拟环境：conda create -n \u0026lt;env_name\u0026gt; python=X.X 激活虚拟环境：conda activate \u0026lt;env_name\u0026gt;  Minutiae  unable auto activate base: conda config --set auto_activate_base false  ","date":"2021-11-30T00:00:00Z","permalink":"https://comfluter.life/p/anaconda%E4%BD%BF%E7%94%A8%E9%9A%8F%E8%AE%B0/","title":"Anaconda使用随记"},{"content":"添加域名解析 到腾讯云服务器控制台，添加需要解析的子域名，如下图。图中第一个参数“主机记录”即为子域名名称。\n \n配置Nginx server { # 端口设置 listen 80; # 二级域名设置 server_name ling.comfluter.life; # 301重定向设置 return 301 http://47.102.150.182/; } 增加一项二级域名设置即可。\n","date":"2021-11-28T00:00:00Z","permalink":"https://comfluter.life/p/nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%AD%90%E5%9F%9F%E5%90%8D/","title":"Nginx 服务器配置子域名"},{"content":"挂载NTFS格式磁盘 貌似树莓派OS能够自动挂载NTFS磁盘到/media/pi下。不用额外操作。\n使用SAMBA协议提供校园网内文件服务 安装SAMBA 安装SAMBA：sudo apt-get update \u0026amp;\u0026amp; sudo apt-get install -y samba\n查看SAMBA版本：\nroot@raspberrypi:/media/pi/4T存储# samba --version Version 4.13.13-Debian ","date":"2021-11-28T00:00:00Z","permalink":"https://comfluter.life/p/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AEnas/","title":"树莓派配置NAS"},{"content":"今天，借着网络课提供的机会，有幸走进华为南研所，切身感受企业研究部门的气氛，也看看自己在课上的所学是如何落到实处的。\n企业气氛确实是今天感觉到比较奇特的一个方面。随处可见使人奋进、催人奋斗的标语。除此以外，园区里还有许多战斗标语，例如“没有退路就是胜利之路”，美国的打压看起来也确实落到了实处。\n","date":"2021-11-27T00:00:00Z","permalink":"https://comfluter.life/p/%E5%8F%82%E8%A7%82%E5%8D%8E%E4%B8%BA%E5%8D%97%E4%BA%AC%E7%A0%94%E7%A9%B6%E6%89%80/","title":"参观华为南京研究所"},{"content":"  include packages for code block and coloring\n \\usepackage{listings} \\usepackage{xcolor}    insert following codes for defining verilog code coloring tactic. It should be inserted at the head field of the latex file (before \\begin{document}).\n% for verilog code coloring \\definecolor{vgreen}{RGB}{104,180,104} \\definecolor{vblue}{RGB}{49,49,255} \\definecolor{vorange}{RGB}{255,143,102} \\lstdefinestyle{verilog-style} { language=Verilog, basicstyle=\\small\\ttfamily, keywordstyle=\\color{vblue}, identifierstyle=\\color{black}, commentstyle=\\color{vgreen}, numbers=left, numberstyle=\\tiny\\color{black}, numbersep=10pt, tabsize=8, moredelim=*[s][\\colorIndex]{[}{]}, literate=*{:}{:}1 } \\makeatletter \\newcommand*\\@lbracket{[} \\newcommand*\\@rbracket{]} \\newcommand*\\@colon{:} \\newcommand*\\colorIndex{%  \\edef\\@temp{\\the\\lst@token}%  \\ifx\\@temp\\@lbracket \\color{black}%  \\else\\ifx\\@temp\\@rbracket \\color{black}%  \\else\\ifx\\@temp\\@colon \\color{black}%  \\else \\color{vorange}%  \\fi\\fi\\fi } \\makeatother \\usepackage{trace}   Insert your verilog code block using following codes:\n\\begin{lstlisting}[style={verilog-style}] \u0026lt;your code\u0026gt; \\end{lstlisting}   ","date":"2021-11-26T00:00:00Z","permalink":"https://comfluter.life/p/including-verilog-code-block-in-latex/","title":"Including Verilog Code Block in Latex"},{"content":"References  PySpice: 使用ngspice进行电路仿真分析-1：安装 PySpice: 使用ngspice进行电路仿真分析-2：ngspice简要介绍-输入文件格式1  ","date":"2021-11-26T00:00:00Z","permalink":"https://comfluter.life/p/pyspice-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/","title":"Pyspice 学习随记"},{"content":"开启root账户并配置SSH登录  修改root密码 sudo passwd root 修改SSH配置 sudo vi /etc/ssh/sshd_config 找到选项PermitRootLogin，将其前面的#去掉，即可使用SSH登录。若将后面的prohibit-password改为yes则可使用密码登录。 如果不选择密码登录，还需要通过其他账户登录，将authorized_keys复制到root账户的.ssh文件夹/root/.ssh下  Minutiae  使用taskset命令限定Linux下CPU逻辑核的使用对象及个数 linux下如何查看多核负载情况 LINUX下查看CPU使用率的命令  ","date":"2021-11-25T00:00:00Z","permalink":"https://comfluter.life/p/linux-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/","title":"Linux 学习随记"},{"content":"在王凯师兄的推荐下，使用gitalk搭建博客评论功能。\nGithub上申请OAuth application  登录github 在Settings页面选择Developer settings选项。 在Developer settings选择OAuth Apps,然后会在页面右边有一个New OAuth App按钮，点击这个按钮就进入到新建OAuth application页面 填写新建OAuth application相关信息：  Application name：新建应用的名称 Homepage URL：The full URL to your application homepage. eg.https://comfluter.life/ Application description：对新建应用的描述 Authorization callback URL：回调链接，与Homepage URL保持一致即可。 注：这些参数可以在以后修改   点击注册应用，就可以看到Client ID，可以新建一个Client Secret  Hugo 配置 使用stack主题，在配置文件config.yaml中已经预留了相关字段。\n 复制填写刚生成的Client ID，Client Secret。 repo: 类型：字符串，必填，github上的仓库名字，用于存放Gitalk评论 owner: 类型：字符串，必填，github仓库的所有者的名字 admin: 类型：数组(元素是字符串)，必填，github仓库的所有者和合作者 (对这个 repository 有写权限的用户)。如果仓库有多个人可以操作，那么在这里以数组形式写出：['someone']  Debugging Error: Not Found. 尝试了修改Homepage URL为github pages页面，发现并没有用。\n解决：存放评论的repo不能为private属性. 应该是一个public的代码库才可以使用Gitalk！\nReferences Gitalk评论插件使用教程\n","date":"2021-11-25T00:00:00Z","permalink":"https://comfluter.life/p/%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E6%90%AD%E5%BB%BA/","title":"博客评论功能搭建"},{"content":"linting using vscode extension Verilog-HDL/SystemVerilog/Bluespec SystemVerilog.\nusing iverilog\ngo to extension settings and set verilog \u0026gt; linting : linter = iverilog\nthen the linting function should work for verilog files.\nNotice:\n the dir to verilog file should not contain chinese characters and spaces. if you imported module from other file without include command, iverilog willl report an error. As it is always the case when using vivado, add -i to extention setting Verilog › Linting › Iverilog: Arguments to ignore this error.  References 用VSCode编辑verilog代码、iverilog编译、自动例化、自动补全、自动格式化等常用插件\n","date":"2021-11-24T00:00:00Z","permalink":"https://comfluter.life/p/verilog-with-vscode/","title":"Verilog with vscode"},{"content":"Multi-module Project Just write two verilog files and instantiate a module specified in the other file, the vivado will figure out the dependencies automatically.\n","date":"2021-11-24T00:00:00Z","permalink":"https://comfluter.life/p/vivado-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/","title":"Vivado 学习随记"},{"content":"老子 概述  先秦道家第一部 《老子》文献的真实性：  上世纪20年代，用西方方法考察中国传统文献：有气人，但书可能是后人写的 马王堆汉墓老子帛书抄本 汉文帝时期 证明此时《老子》其书已经盛行  篇目数量差不多   90年代：郭店楚简 其中有《老子》 测年公元前300年，战国中晚期  其中还有较多儒家早期文献 篇目较少，约为传世本1/3，可能为摘抄   此两本出图后，证明《老子》一定成书早于战国晚期。 证实了《老子》应为所有道家文献的原创。 作者到现在还不确定，阅读时不用深究 首创“自然之道”的概念    道 不仅道家讲“道”，其应该为春秋时代出现的思想概念。\n“道”字商代便有，但不是重要思想概念，仅为“道路”之意。“道”在春秋时成为思想概念内涵。从《论语》中可以得到印证。\n含义变化原因：政治变化。以氏族为本位的政治构架在衰弱。以祭祀为本，为期中心概念（西周时）。后来西周衰落，天命观念受到怀疑，上天包庇某一氏族的理念在弱化。孔子时政治基本不讲“天命”，个人也可以讲“天命”。政治的合理性在哪？当时的思想家在寻找新的理解。这个背景下，“道”的观念得以提出。政治的合法性来源：神授\u0026ndash;\u0026gt;往圣先贤的做法，体现出人本主义。\n 《国语》周语下：吾非瞽史，焉知天道？\n 只有知道历史，才知道天道。（史官当时也管天道）此处天道：星象变化的大致规则，引申为自然变化的规则。\n中国的士大夫文化：\n 对中国文化发展影响最深。 非宗教的：思想主流为人文主义的：道德规则、历史传承、品信修养，而非不可知的神意。 道为非常重要的概念。  道为其他概念的中心：仁义礼智等等\n自然之道：一种特别的道  《老子》二十五章：人法地，地法天，天法道，道法自然 “道可道非常道”\n 自然之道的含义 自然：名词？ \u0026mdash;\u0026gt; 天地万物的规则\n自然是动词！ 意为“自己这样”，万物自己演化的规律。\n人应当效法自然：不是效法自然的规律，而是效法自己如此的状态。\n 第七章：天长地久。天地所以能长且久者，以其不自生，故能长生。是以圣人后其身而身先，外其身而身存。非以其无私耶？故能成其私。(后其身 一作：退其身)\n 天地长久，不自生：天地不是单一的生命，以万物的生命来体现自己的生命。万物演变恒久不息，天也恒久存在。\n是以圣人后其身而身先，外其身而身存： 老子对后代人物的政治谋略影响较大，怎么在政治上立于不败之地。看上去是哲理，但用起来是技巧。\n 四十章：反者道之动；弱者道之用。天下万物生于有，有生于无。\n 老子要否认所有提升到“规则”层面的内容。\n 二章：天下皆知美之为美，斯恶已。皆知善之为善，斯不善已。故有无相生，难易相成，长短相形，高下相倾，音声相和，前后相随，恒也。是以圣人处无为之事，行不言之教，万物作焉而不辞，生而不有，为而不恃，功成而弗居。夫唯弗居，是以不去。(万物作焉而不辞 一作：万物作焉而不为始)\n 理解：古人淳朴自然的理解中没有“美”的概念，其为认为的\n讲的是常识中相对的概念的相互转化。\n道：不是规律性 充满辩证的因果关系？不能说不对，但是容易被误导。辩证法、辩证规律本质上都还是对我们知识的概括。第一层：形式逻辑；第二层：变化规律、辩证法。顺着这个理解\n 五十八章：祸兮福所倚；福兮祸所伏。孰知其极？其无正邪？正复为奇，善复为妖。人之迷，其日固久。\n  极：根本的道理。“悠悠苍天，曷其有极？” 无正：没有规则、根本道理。 奇：突然冒出来的、没有道理的 妖：怪异的  根本上否定规律性，而不是相反相成。 不应当将道理解为规律\n 道可道，非常道；名可名，非常名。无名天地之始，有名万物之母。\n  第二个“道”：  言说 走路：明明白白的路径   天地之始 万物之母：天地初始的状态  有关天地起源问题：  谷神不死，是谓玄牝。玄牝之门，是谓天地根。绵绵若存，用之不勤。\n  谷神：道 玄牝：雌性的牲畜，有学者由此将老子思想归结于民间崇拜  颜世安老师想法：可能受到淮河水网地区地方信仰的影响：水崇拜、雌性崇拜。但老子不停留在这个层面，而是提出了一种思想。 此处将道与雌性生殖功能做类比     有物混成，先天地生，寂兮寥兮，独立而不改，周行而不殆，可以为天地母。吾不知其名，强字之曰道，强为之名曰大。\n  有物混成：道 周兴不殆在出土文献中均不存在，大概率是后人添加。   孔德之容，惟道是从。道之为物，惟恍惟惚。惚兮恍兮，其中有象；恍兮惚兮，其中有物；窈兮冥兮，其中有精；其精甚真，其中有信。\n 但老子的本意应当不是天地起源：\n 后世道家，天地起源不是道家思想的中心。庄子嘲笑天地起源的探究。 如果谈天地起源，为什么在文本中一直强调“说不清楚”，许多地方既有又无？“孰知其极”？  不要将道与天地起源混为一谈！\n原初状态 谈天地之道，应当从天地的原初状态谈起，对比原初状态和现在状态的对比。从而使得人回到自己“自然”、“原初”的状态，以天道为引导。\n 致虚极；守静笃。万物并作，吾以观复。夫物芸芸，各复归其根。归根曰静，静曰复命。复命曰常，知常曰明。不知常，妄作凶。知常容，容乃公，公乃全，全乃天，天乃道，道乃久，歿身不殆。\n  虚、静：心态意义上的原初状态  虚 对应：实、知识、成见 静 对应：好物、情感     为学日益，为道日损。损之又损，以至於无为。无为而无不为。\n  为道要一天天减少自己的知识，直至无有的状态。   不出户，知天下；不窥牖，见天道。其出弥远，其知弥少。\n  在经验意义上回到自己的状态。有经验便有成见。   知其雄，守其雌，为天下谿。为天下谿，常德不离，复归于婴儿。\n 只要是道家文献，必然谈回到原初状态\n理解自然之道 自己生、自己长，本来如此。与计划、规则相对。\n 古之人，其知有所至矣。恶乎生？有以为未始有物者，至矣，尽矣，不可以加矣。其次，以为有物矣，而未始有封也。其次以为有封焉，而未始有是非也。是非之彰也，道之所以亏也。道之所以亏，爱之所以成。\n  至：强？弱？总之不一样。 未始有物：物我一体  郭象：未始有我。无自我意识。   封：将物分为不同领域。 爱：偏私、喜好  人们悲惨的根源：人们生下来便不可避免地落入非自然的状态中。解决：回到原初状态。\n 道家无为，又曰无不为，其实易行，其辞难知。其术以虚无为本，以因循为用。\n  难知：天地初始状态，难以用现有的语言进行描述。思维习惯、语言、行为规范是禁锢、限制、不自由、不自然。描述初始状态时必然会用到玄奥的词句。 其实易行：回到初始状态  庄子：自由与自然的紧张。警惕“自我”对他人的毒害。\n自然而然、自己如此与回到原初状态的联系是什么？\n道家：反对条理化、经验化的对世界的理解与体验。\n后世道家较少谈道的自然哲学的一面，而是谈**回到本源。**后世道家从各个方面引导人们回到自己的初始状态。\n回到原初状态  持而盈之，不如其已。揣而锐之，不可长保。金玉满堂，莫之能守。富贵而骄，自遗其咎。功遂身退，天之道也。\n 个人的原初状态。退守，在知识阶层的普通人中广为流传。\n政治上的原初状态  小国寡民。使有什伯之器而不用；使民重死而不远徙；虽有舟舆，无所乘之；虽有甲兵，无所陈之。使人复结绳而用之。至治之极。甘其食，美其服，安其居，乐其俗，邻国相望，鸡犬之声相闻，民至老死不相往来。\n  群体的原初状态。重点在心态。 有机械，即有机事，有机事，即有机心。 甘其食\u0026hellip;乐其俗：吃什么、穿什么都觉得好。   故圣人云：“我无为，而民自化；我好静，而民自正；我无事，而民自富；我无欲，而民自朴。”\n  说到底，重点在于政治上。要国家回到无为的原初状态。但是老子不是在否定政治的作用，不是在说应该没有政治。 无为：  君主对官员：君无为而臣有为。 政府对民间：国家无为而让社会自己演化。例：文景之治。     《管子·心术上》：天曰虚，地曰静，乃不伐。洁其宫，开其门，去私毋言，神明若存。纷乎其若乱，静之而自治。强不能遍立，智不能尽谋。物固有形，形固有名，名当，谓之圣人。故必知不言，无为之事，然后知道之纪。殊形异埶，不与万物异理，故可以为天下始。\n  天地虚静：人应当虚、静。伐：自我吹嘘。 宫：房间，比喻内心。不洁：知识、情绪等等一切妨碍清晰认知客观世界的障碍。 神明：与虚静相对。指向生命原始的可能性、创造力。 强不能遍立，智不能尽谋：具体的道理。 物固有形，形固有名：自然万物有其自己的形态，依据其形态命名。这里因为在将政治，这里的物应当指社会生活的事物，如官职、社会制度等等。名：对事物发展状态的反映。形名之学，将道家与法家结合起来。  道家：有从自然而来的正当性。 法家：法令的正当性从何而来？早期道家只以现实需要为自己辩护，但这个理由显然在理论上不够高明。    道家中将政治道术的文献：\n 马王堆汉墓帛书、《黄帝四经》或称《黄老帛书》、《经法》、《十大经》、《称》、《道原》、《庄子·天道》、《韩非子·解老》、《杨权》等篇、吕氏春秋若干篇、慎子、鹖冠子、《史记·货殖列传》   《史记·货殖列传序》：夫山西饶材、竹、旄、玉石，山东多鱼、盐、漆、丝、声色，江南出棻、梓、姜、桂、金、锡、连、丹沙、犀、玳瑁、珠玑、齿、革，龙门、碣石 北多马、牛、羊、旃、裘、筋、角；铜、铁则千里往往山出棋置。此其大较也。皆中国人民所喜好，谣俗被服饮食奉生送死之具也。故待农而食之，虞而出之，工而成之，商而通之。此宁有政教发征期会哉？人各任其能，竭其力，以得所欲。故物贱之征贵，贵之征贱，各劝其业，乐其事，若水之趋下，日夜无休时，不召而自来，不求而民出之。岂非道之所符，而自然之验邪？\n  商业的规律是自然而然形成的。 好的政治：因循利导。  道家的展开不仅仅是理论运作，而是与政治运作紧密结合。司马迁此处应该是在讲文景之治之时的政治模式，以批判汉武帝的政治。这应当不是司马迁个人的想法，而是当时的一种思潮，是老子思想展开的一种形态。\n庄子 庄子对后来士大夫思想的影响很大。魏晋玄学的旷达自由与宋明理学的无我朴实。\n 南郭子綦隐机而坐，仰天而嘘，荅焉似丧其耦。颜成子游立侍乎前，曰：“何居乎？形固可使如槁木，而心固可使如死灰乎？今之隐机者，非昔之隐机者也？”子綦曰：“偃，不亦善乎，而问之也！今者吾丧我，汝知之乎？汝闻人籁而未闻地籁，汝闻地籁而不闻天籁夫！”\n  “隐机而坐，仰天而嘘，荅焉似丧其耦”：文学化表达，不用逐字深究，回到婴儿原初状态的表现。   子游曰：“敢问其方。”子綦曰：“夫大块噫气，其名为风。是唯无作，作则万窍怒呺。而独不闻之翏翏乎？山林之畏隹，大木百围之窍穴，似鼻，似口，似耳，似枅，似圈，似臼，似洼者，似污者。激者、謞者、叱者、吸者、叫者、譹者、宎者，咬者，前者唱于而随者唱喁，泠风则小和，飘风则大和，厉风济则众窍为虚。而独不见之调调之刁刁乎？” 子游曰：“地籁则众窍是已，人籁则比竹是已，敢问天籁。”子綦曰：“夫吹万不同，为而使其自己也。咸其自取，怒者其谁邪？”\n  文学性：形象大于思想 思想上仍然是在说致虚极，守静笃。 直接去体验自然世界的生气勃勃   至人无己，神人无功，圣人无名。\n 最后还是回到道家思想：回到原初状态。\n人与世界的关系  《庄子·知北游》：东郭子问于庄子曰：“所谓道，恶乎在？”庄子曰：“无所不在。 ”东郭子曰：“期而后可。”庄子曰：“在蝼蚁。”曰：“何其下邪 ？”曰：“在稊稗。”曰：“何其愈下邪？”曰：“在瓦甓。”曰： “何其愈甚邪？”曰：“在屎溺。”东郭子不应。庄子曰：“夫子之 问也，固不及质。正、获之问于监市履狶也，‘每下愈况’。汝唯莫必， 无乎逃物\u0026hellip;”\n  重点在前半。思想上的重点在于：道表现在人与外部世界的一种关系。退回原初状态后可以与世界建立新的关系。此理念在后来结出无数思想果实。后世：什么是好的状态？ “何其下邪？”：外部世界以自己的标准做区分、分化。每一个物都有它的价值、角度。   《庄子·齐物论》：古之人，其知有所至矣。恶乎至？有以为未始有物者，至矣，尽矣，不可以加矣！其次以为有物矣，而未始有封也。其次以为有封焉，而未始有是非也。是非之彰也，道之所以亏也。道之所以亏，爱之所以成。\n  梓庆削木为鐻，日成，见者惊犹鬼神。鲁侯见而问焉，曰：“子何术以为焉？”对曰：“臣，工人，何术之有！虽然，有一焉：臣将为 鐻，未尝敢以耗气也，必齐以静心。齐三日，而不敢怀庆赏爵禄；齐五日，不敢怀非誉巧拙；齐七日，辄然忘吾有四枝形体也。当是时也，无公朝。其巧专而外骨消，然后入山林，观天性形躯，至矣，然后成鐻，然后加手焉，不然则已。则以天合天，器之所以疑神者，其是与！”\n  一步一步将现实状态中的“我”逐步忘记。 “以天合天”：第一个天：自己的天然；第二个天：自然世界。 在自然之道的意义上，做事仅看与这个事有关的事情，回到事情本身，其余的所有纷扰（晋赏爵禄，非誉巧拙等等）全部忘记。此形成一种文化形态、文化理想。   生而美者，人与之鉴，不告则不知其美于人也。若知之，若不知之 ，若闻之，若不闻之，其可喜也终无已，人之好之亦无已，性也。圣人之爱人也，人与之名，不告则不知其爱人也。若知之，若不知之， 若闻之，若不闻之，其爱人也终无已，人之安之亦无已，性也。\n  美：不顾盼自怜。   《传习录下》：有一属官，因久听讲先生之学，曰：“此学甚好，只是簿书讼狱繁难，不得为学。”先生闻之，曰：“我何尝教尔离了簿书讼狱悬空去讲学？尔既有官司之事，便从官司的事上为学，才是真格物。如问一词讼，不可因其应对无状，起个怒心：不可因他言语圆转，生个喜心：不可恶其嘱托，加意治之：不可因其请求，屈意从之：不可因自己事务烦冗，随意苟且断之；不可因旁人谮毁罗织，随人意思处之：这许多意思皆私，只尔自知，须精细省察克治，惟恐此心有一毫偏倚，杜人是非，这便是格物致知。簿书讼狱之间，无非实学。若离了事物为学，却是着空。”\n  庄子对后世的影响。 听这个案件，就应当回到这件事情，不要掺杂任何私心。 公私之分：道家的概念。道家核心：无私、无己、无我。  总结 道家回到原初状态是对人的表达，没有一个具体的形态。庄子中形成了一种系统性的理解，形成了一种理想，成为文化道理的理念，对后世启发良多。\n","date":"2021-11-24T00:00:00Z","permalink":"https://comfluter.life/p/%E5%85%88%E7%A7%A6%E8%AF%B8%E5%AD%90%E9%80%89%E8%AF%BB%E9%81%93%E5%AE%B6%E6%80%9D%E6%83%B3/","title":"《先秦诸子选读》：道家思想"},{"content":"Conda 复制已有环境 由于服务器上本身已经有使用CUDA平台的ToD-BERT运行环境，仅需将此环境中所有使用GPU的库换为使用CPU的库即可：pytorch\n查看已有环境\n(base) dialogue@amax-13:/$ conda info --env # conda environments: # base * /media/HD1/dche/miniconda3 sum_env /media/HD1/dche/miniconda3/envs/sum_env tod_bert /media/HD1/dche/miniconda3/envs/tod_bert /media/HD1/miniconda3 创建新环境，并将原有环境中的所有包复制，并激活新建立的环境。\n(base) dialogue@amax-13:/$ conda create -n tod_bert_cpu --clone tod_bert Source: /media/HD1/dche/miniconda3/envs/tod_bert Destination: /media/HD1/dche/miniconda3/envs/tod_bert_cpu Packages: 20 Files: 12683 Preparing transaction: done Verifying transaction: done Executing transaction: done # # To activate this environment, use # # $ conda activate tod_bert_cpu # # To deactivate an active environment, use # # $ conda deactivate (base) dialogue@amax-13:/$ conda activate tod_bert_cpu (tod_bert_cpu) dialogue@amax-13:/$ Conda配置环境中的包（卸载GPU版本、安装CPU版本） Conda 查看环境中所有包的信息\n(tod_bert_cpu) dialogue@amax-13:/$ conda list # packages in environment at /media/HD1/dche/miniconda3/envs/tod_bert_cpu: # # Name Version Build Channel _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu anykeystore 0.2 pypi_0 pypi apex 0.9.8.dev0 pypi_0 pypi blessings 1.7 pypi_0 pypi ca-certificates 2021.10.26 h06a4308_2 certifi 2021.10.8 py37h06a4308_0 charset-normalizer 2.0.7 pypi_0 pypi click 8.0.3 pypi_0 pypi cryptacular 1.6.2 pypi_0 pypi defusedxml 0.7.1 pypi_0 pypi filelock 3.4.0 pypi_0 pypi future 0.18.2 pypi_0 pypi gpustat 0.6.0 pypi_0 pypi greenlet 1.1.2 pypi_0 pypi hupper 1.10.3 pypi_0 pypi idna 3.3 pypi_0 pypi importlib-metadata 4.8.2 pypi_0 pypi joblib 1.1.0 pypi_0 pypi libedit 3.1.20210910 h7f8727e_0 libffi 3.2.1 hf484d3e_1007 libgcc-ng 9.3.0 h5101ec6_17 libgomp 9.3.0 h5101ec6_17 libstdcxx-ng 9.3.0 hd4cf53a_17 markupsafe 2.0.1 pypi_0 pypi ncurses 6.3 h7f8727e_2 nltk 3.5 pypi_0 pypi numpy 1.18.1 pypi_0 pypi nvidia-ml-py3 7.352.0 pypi_0 pypi oauthlib 3.1.1 pypi_0 pypi openssl 1.0.2u h7b6447c_0 packaging 21.3 pypi_0 pypi pastedeploy 2.1.1 pypi_0 pypi pbkdf2 1.3 pypi_0 pypi pip 21.2.2 py37h06a4308_0 plaster 1.0 pypi_0 pypi plaster-pastedeploy 0.7 pypi_0 pypi protobuf 3.19.1 pypi_0 pypi psutil 5.8.0 pypi_0 pypi ptvsd 4.3.2 pypi_0 pypi pyparsing 3.0.6 pypi_0 pypi pyramid 2.0 pypi_0 pypi pyramid-mailer 0.15.1 pypi_0 pypi python 3.7.0 h6e4f718_3 python3-openid 3.2.0 pypi_0 pypi readline 7.0 h7b6447c_5 regex 2021.11.10 pypi_0 pypi repoze-sendmail 4.4.1 pypi_0 pypi requests 2.26.0 pypi_0 pypi requests-oauthlib 1.3.0 pypi_0 pypi sacremoses 0.0.46 pypi_0 pypi scikit-learn 0.23.2 pypi_0 pypi scipy 1.7.2 pypi_0 pypi sentencepiece 0.1.96 pypi_0 pypi setuptools 58.0.4 py37h06a4308_0 simplejson 3.17.2 pypi_0 pypi six 1.15.0 pypi_0 pypi sqlalchemy 1.4.27 pypi_0 pypi sqlite 3.33.0 h62c20be_0 tensorboardx 2.1 pypi_0 pypi threadpoolctl 3.0.0 pypi_0 pypi tk 8.6.11 h1ccaba5_0 tokenizers 0.8.1rc1 pypi_0 pypi torch 1.6.0 pypi_0 pypi tqdm 4.31.1 pypi_0 pypi transaction 3.0.1 pypi_0 pypi transformers 3.0.2 pypi_0 pypi translationstring 1.4 pypi_0 pypi typing-extensions 4.0.0 pypi_0 pypi urllib3 1.26.7 pypi_0 pypi velruse 1.1.1 pypi_0 pypi venusian 3.0.0 pypi_0 pypi webob 1.8.7 pypi_0 pypi wheel 0.37.0 pyhd3eb1b0_1 wtforms 3.0.0 pypi_0 pypi wtforms-recaptcha 0.3.2 pypi_0 pypi xz 5.2.5 h7b6447c_0 zipp 3.6.0 pypi_0 pypi zlib 1.2.11 h7b6447c_3 zope-deprecation 4.4.0 pypi_0 pypi zope-interface 5.4.0 pypi_0 pypi zope-sqlalchemy 1.6 pypi_0 pypi 卸载原有的GPU版本torch，貌似原先是使用pip安装的，在尝试conda卸载无果后使用pip卸载成功。\n(tod_bert_cpu) dialogue@amax-13:/$ conda remove pytorch Collecting package metadata (repodata.json): done Solving environment: failed PackagesNotFoundError: The following packages are missing from the target environment: - pytorch (tod_bert_cpu) dialogue@amax-13:/$ pip uninstall torch Found existing installation: torch 1.6.0 Uninstalling torch-1.6.0: Would remove: /media/HD1/dche/miniconda3/envs/tod_bert_cpu/bin/convert-caffe2-to-onnx /media/HD1/dche/miniconda3/envs/tod_bert_cpu/bin/convert-onnx-to-caffe2 /media/HD1/dche/miniconda3/envs/tod_bert_cpu/lib/python3.7/site-packages/caffe2/* /media/HD1/dche/miniconda3/envs/tod_bert_cpu/lib/python3.7/site-packages/torch-1.6.0.dist-info/* /media/HD1/dche/miniconda3/envs/tod_bert_cpu/lib/python3.7/site-packages/torch/* Proceed (Y/n)? y Successfully uninstalled torch-1.6.0 安装cpu版本torch\n(tod_bert_cpu) dialogue@amax-13:/$ conda install pytorch==1.6.0 torchvision==0.7.0 cpuonly -c pytorch Collecting package metadata (current_repodata.json): done Solving environment: done ## Package Plan ## environment location: /media/HD1/dche/miniconda3/envs/tod_bert_cpu added / updated specs: - cpuonly - pytorch==1.6.0 - torchvision==0.7.0 The following packages will be downloaded: | package | build | | --------------------- | ----------------------------------- | | blas-1.0 | mkl 6 KB | | cpuonly-2.0 | 0 2 KB pytorch | | freetype-2.11.0 | h70c0345_0 618 KB | | giflib-5.2.1 | h7b6447c_0 78 KB | | intel-openmp-2021.4.0 | h06a4308_3561 4.2 MB | | jpeg-9d | h7f8727e_0 232 KB | | lcms2-2.12 | h3be6417_0 312 KB | | libpng-1.6.37 | hbc83047_0 278 KB | | libtiff-4.2.0 | h85742a9_0 502 KB | | libwebp-1.2.0 | h89dd481_0 493 KB | | libwebp-base-1.2.0 | h27cfd23_0 437 KB | | lz4-c-1.9.3 | h295c915_1 185 KB | | mkl-2021.4.0 | h06a4308_640 142.6 MB | | mkl-service-2.4.0 | py37h7f8727e_0 56 KB | | mkl_fft-1.3.1 | py37hd3c417c_0 172 KB | | mkl_random-1.2.2 | py37h51133e4_0 287 KB | | ninja-1.10.2 | py37hd09550d_3 1.5 MB | | numpy-1.21.2 | py37h20f2e39_0 23 KB | | numpy-base-1.21.2 | py37h79a1101_0 4.8 MB | | olefile-0.46 | py37_0 50 KB | | pillow-8.4.0 | py37h5aabda8_0 644 KB | | pytorch-1.6.0 | py3.7_cpu_0 59.4 MB pytorch | | pytorch-mutex-1.0 | cpu 3 KB pytorch | | torchvision-0.7.0 | py37_cpu 10.3 MB pytorch | | zstd-1.4.9 | haebb681_0 480 KB | ------------------------------------------------------------ Total: 227.4 MB The following NEW packages will be INSTALLED: blas pkgs/main/linux-64::blas-1.0-mkl cpuonly pytorch/noarch::cpuonly-2.0-0 freetype pkgs/main/linux-64::freetype-2.11.0-h70c0345_0 giflib pkgs/main/linux-64::giflib-5.2.1-h7b6447c_0 intel-openmp pkgs/main/linux-64::intel-openmp-2021.4.0-h06a4308_3561 jpeg pkgs/main/linux-64::jpeg-9d-h7f8727e_0 lcms2 pkgs/main/linux-64::lcms2-2.12-h3be6417_0 libpng pkgs/main/linux-64::libpng-1.6.37-hbc83047_0 libtiff pkgs/main/linux-64::libtiff-4.2.0-h85742a9_0 libwebp pkgs/main/linux-64::libwebp-1.2.0-h89dd481_0 libwebp-base pkgs/main/linux-64::libwebp-base-1.2.0-h27cfd23_0 lz4-c pkgs/main/linux-64::lz4-c-1.9.3-h295c915_1 mkl pkgs/main/linux-64::mkl-2021.4.0-h06a4308_640 mkl-service pkgs/main/linux-64::mkl-service-2.4.0-py37h7f8727e_0 mkl_fft pkgs/main/linux-64::mkl_fft-1.3.1-py37hd3c417c_0 mkl_random pkgs/main/linux-64::mkl_random-1.2.2-py37h51133e4_0 ninja pkgs/main/linux-64::ninja-1.10.2-py37hd09550d_3 numpy pkgs/main/linux-64::numpy-1.21.2-py37h20f2e39_0 numpy-base pkgs/main/linux-64::numpy-base-1.21.2-py37h79a1101_0 olefile pkgs/main/linux-64::olefile-0.46-py37_0 pillow pkgs/main/linux-64::pillow-8.4.0-py37h5aabda8_0 pytorch pytorch/linux-64::pytorch-1.6.0-py3.7_cpu_0 pytorch-mutex pytorch/noarch::pytorch-mutex-1.0-cpu six pkgs/main/noarch::six-1.16.0-pyhd3eb1b0_0 torchvision pytorch/linux-64::torchvision-0.7.0-py37_cpu zstd pkgs/main/linux-64::zstd-1.4.9-haebb681_0 Proceed ([y]/n)? y Downloading and Extracting Packages olefile-0.46 | 50 KB | ############################################################################################# | 100%  numpy-base-1.21.2 | 4.8 MB | ############################################################################################# | 100%  libpng-1.6.37 | 278 KB | ############################################################################################# | 100%  freetype-2.11.0 | 618 KB | ############################################################################################# | 100%  libwebp-base-1.2.0 | 437 KB | ############################################################################################# | 100%  blas-1.0 | 6 KB | ############################################################################################# | 100%  libtiff-4.2.0 | 502 KB | ############################################################################################# | 100%  torchvision-0.7.0 | 10.3 MB | ############################################################################################# | 100%  zstd-1.4.9 | 480 KB | ############################################################################################# | 100%  pytorch-1.6.0 | 59.4 MB | ############################################################################################# | 100%  libwebp-1.2.0 | 493 KB | ############################################################################################# | 100%  jpeg-9d | 232 KB | ############################################################################################# | 100%  intel-openmp-2021.4. | 4.2 MB | ############################################################################################# | 100%  lcms2-2.12 | 312 KB | ############################################################################################# | 100%  mkl-service-2.4.0 | 56 KB | ############################################################################################# | 100%  pytorch-mutex-1.0 | 3 KB | ############################################################################################# | 100%  giflib-5.2.1 | 78 KB | ############################################################################################# | 100%  mkl_random-1.2.2 | 287 KB | ############################################################################################# | 100%  cpuonly-2.0 | 2 KB | ############################################################################################# | 100%  mkl-2021.4.0 | 142.6 MB | ############################################################################################# | 100%  ninja-1.10.2 | 1.5 MB | ############################################################################################# | 100%  mkl_fft-1.3.1 | 172 KB | ############################################################################################# | 100%  pillow-8.4.0 | 644 KB | ############################################################################################# | 100%  lz4-c-1.9.3 | 185 KB | ############################################################################################# | 100%  numpy-1.21.2 | 23 KB | ############################################################################################# | 100%  Preparing transaction: done Verifying transaction: done Executing transaction: done 配置并运行BERT 直接使用同CPU的命令CUDA_VISIBLE_DEVICES=0 ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-MLM --only_last_turn --data_path ./../dialog_datasets，貌似没有任何问题地跑起来了？\n由于项目要求，需要限制模型使用cpu的核数。\n使用命令top -d 1查看目前cpu占用情况，顺便查看跑BERT模型的python进程PID\n使用命令taskset -cp \u0026lt;cpu list\u0026gt; \u0026lt;pid\u0026gt;进行绑核操作，ep.taskset -cp 0,1,2,3 94434\nReference Anaconda-用conda创建python虚拟环境\n","date":"2021-11-24T00:00:00Z","permalink":"https://comfluter.life/p/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEcpu%E7%89%88tod-bert%E7%8E%AF%E5%A2%83/","title":"服务器配置CPU版ToD-BERT环境"},{"content":" Download git-lfs on https://git-lfs.github.com/, and run the installation package for windows. Once downloaded and installed, set up Git LFS for your user account by running:git lfs install. You only need to run this once per user account. In each Git repository where you want to use Git LFS, select the file types you\u0026rsquo;d like Git LFS to manage (or directly edit your .gitattributes). You can configure additional file extensions at anytime.git lfs track \u0026quot;*.psd\u0026quot; Now make sure .gitattributes is tracked:git add .gitattributes Note that defining the file types Git LFS should track will not, by itself, convert any pre-existing files to Git LFS, such as files on other branches or in your prior commit history. To do that, use the git lfs migrate[1] command, which has a range of options designed to suit various potential use cases. There is no step three. Just commit and push to GitHub as you normally would; for instance, if your current branch is named main: git add file.psd git commit -m \u0026#34;Add design file\u0026#34; git push origin main   ","date":"2021-11-22T00:00:00Z","permalink":"https://comfluter.life/p/git-large-file-versioning/","title":"Git large file versioning"},{"content":"数组切片 import numpy as np a = np.array([[11, 12, 13], [21, 22, 23]], [31, 32, 33]) 注意Numpy中元素编号从0开始，左侧包含右侧不包含\n 取单个元素x = a[1, 2]，对应第0维的第1个元素4 切片x = a[0:2, 1:3]，对应第0维的第0~1个元素，第1维的第1~2个元素[[12 13], [22 23]] 切片x = a[:2, 2:]，对应对应第0维的最开始到第2（2-1）个元素，第1维的第2个及以后的所有元素[[13], [23]]  判断一个数组是否存在于另一个大数组内 直接使用==会逐数字判断元素是否存在：\nimport numpy as np a = np.array([[1, 2, 3], [2, 3, 4]]) print(a == np.array([1, 2, 3])) 可以改为(a == np.array([1, 2, 3])).all(1).any()。y == z会将y的每一行与z的每个元素进行比较。 使用all(axis=1)可以获取所有元素匹配的行，并使用any()找出是否匹配。\nimport numpy as np a = np.array([[1, 2, 3], [2, 3, 4]]) print(a == np.array([1, 2, 3])) print((a == np.array([1, 2, 3])).all(1)) print((a == np.array([1, 2, 3])).all(1).any()) 输出结果：\n[[ True True True] [False False False]] [ True False] True 各种拷贝  无拷贝a = b:a,b完全相同，指向同一对象 浅拷贝b = a.view()：只会copy父对象，不会copy底层的数据，共用原始引用指向的对象数据。如果在view上修改数据，会直接反馈到原始对象。改变b的shape等父对象的参数时，不会改变a的相应参数 深拷贝b = a.copy()：对象及其子对象都进行copy一份，两对象完全独立。  ","date":"2021-11-22T00:00:00Z","permalink":"https://comfluter.life/p/numpy-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/","title":"Numpy 学习随记"},{"content":"PlantUML with VsCode  Install PlantUML extension for vscode. following extension follow me document:  install java JRE install Graphviz download the latest plantuml.jar specify the jar location with the extension setting plantuml.jar specify the GraphViz installation by defining the Windows environment variable GRAPHVIZ_DOT, e.g., c:\\program files\\graphviz\\bin\\dot.exe    ","date":"2021-11-22T00:00:00Z","permalink":"https://comfluter.life/p/plantuml-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/","title":"PlantUML 学习随记"},{"content":"Python Module Python Module 导入方法  import \u0026lt;module name\u0026gt;调用这个方法导入的module中的函数时，需要\u0026lt;module name\u0026gt;.\u0026lt;function name\u0026gt;格式进行使用 from \u0026lt;module name\u0026gt; import \u0026lt;sth\u0026gt;从某个模块中引入某些特殊函数等引入现在所在的全局命名空间中，直接使用\u0026lt;sth\u0026gt;就可以进行使用。这里引入的可以是一个子包，也可以是子包中的任意对象。 from \u0026lt;module name\u0026gt; import *将模块中所有对象引入，直接使用原模块中的名称即可使用  搜索路径 导入一个模块时，Python 解析器对模块位置的搜索顺序是：\n 当前目录 如果不在当前目录，Python 则搜索在 shell 变量 PYTHONPATH 下的每个目录。 如果都找不到，Python会察看默认路径。UNIX下，默认路径一般为/usr/local/lib/python/。 模块搜索路径存储在 system 模块的 sys.path 变量中。变量里包含当前目录，PYTHONPATH和由安装过程决定的默认目录。  命名空间和作用域  变量：名字与匹配对象的对应 命名空间：记录了所有名字-对象对应关系的字典  python表达式可以访问全局/局部命名空间，重名时局部命名空间优先。 使用global语句可以告诉python变量属于全局变量。ex.global x\n导入本地自定义包 文件结构\nmain.py package |--__init__.py |--module1.py |--module2.py 包是一个分层次的文件目录结构，它定义了一个由模块及子包，和子包下的子包等组成的 Python 的应用环境。\n简单来说，包就是文件夹，但该文件夹下必须存在__init__.py 文件, 该文件的内容可以为空。__init__.py 用于标识当前文件夹是一个包。\n假设module1.py中有函数func1()，则在main函数中可以使用以下集中方式进行包导入：\n import mymodule.module1此时对应func1()的调用为mymodule.module1.func1()，前缀较长，比较繁琐。 import mymodule.module1 as m1此时对应func1()的调用为m1.func1() from mymodule import module1此时对应func1()的调用为module1.func1()  集合数据类型 Python 编程语言中有四种集合数据类型：\n 列表（List）是一种有序和可更改的集合。允许重复的成员。 元组（Tuple）是一种有序且不可更改的集合。允许重复的成员。 集合（Set）是一个无序和无索引的集合。没有重复的成员。 词典（Dictionary）是一个无序，可变和有索引的集合。没有重复的成员。  选择集合类型时，了解该类型的属性很有用。\n为特定数据集选择正确的类型可能意味着保留含义，并且可能意味着提高效率或安全性。\n List  thislist = [\u0026quot;apple\u0026quot;, \u0026quot;banana\u0026quot;, \u0026quot;cherry\u0026quot;] print(thislist[1]) thislist[1] = \u0026quot;mango\u0026quot;   Tuple  thistuple = (\u0026quot;apple\u0026quot;, \u0026quot;banana\u0026quot;, \u0026quot;cherry\u0026quot;) print(thistuple[1]) 不可更改，需要转为列表更改后再转回   Set  thisset = {\u0026quot;apple\u0026quot;, \u0026quot;banana\u0026quot;, \u0026quot;cherry\u0026quot;} 访问项目：  您无法通过引用索引来访问 set 中的项目，因为 set 是无序的，项目没有索引。 但是您可以使用 for 循环遍历 set 项目，或者使用 in 关键字查询集合中是否存在指定值。   要将一个项添加到集合，请使用 add() 方法。 要向集合中添加多个项目，请使用 update() 方法。   Dictionary  创建字典 thisdict =\t{ \u0026#34;brand\u0026#34;: \u0026#34;Porsche\u0026#34;, \u0026#34;model\u0026#34;: \u0026#34;911\u0026#34;, \u0026#34;year\u0026#34;: 1963 }  x = thisdict[\u0026quot;model\u0026quot;] or x = thisdict.get(\u0026quot;model\u0026quot;) thisdict[\u0026ldquo;year\u0026rdquo;] = 2019    Virtual Environment 安装虚拟环境 PS D:\\Work\\04 Research Project\\21.08.19 Early Visual Processing\\pyspice\u0026gt; pip install virtualenv Collecting virtualenv |████████████████████████████████| 5.6 MB 6.4 MB/s Collecting filelock\u0026lt;4,\u0026gt;=3.2 Downloading filelock-3.4.0-py3-none-any.whl (9.8 kB) Collecting backports.entry-points-selectable\u0026gt;=1.0.4 Downloading backports.entry_points_selectable-1.1.1-py2.py3-none-any.whl (6.2 kB) Collecting platformdirs\u0026lt;3,\u0026gt;=2 Downloading platformdirs-2.4.0-py3-none-any.whl (14 kB) Collecting distlib\u0026lt;1,\u0026gt;=0.3.1 |████████████████████████████████| 496 kB 1.6 MB/s Requirement already satisfied: six\u0026lt;2,\u0026gt;=1.9.0 in c:\\programming\\python\\lib\\site-packages (from virtualenv) (1.16.0) Installing collected packages: platformdirs, filelock, distlib, backports.entry-points-selectable, virtualenv 创建虚拟环境 virtualenv myvenv，可选参数：\n --no-site-packages：创建虚拟环境时，不复制主环境中安装的第三方包，也就是创建一个 “干净的” 虚拟环境 -p：用于指定 Python 解析器，就是安装好的 Python 应用程序，默认为当前环境中的 Python --no-pip：不需要安装 pip，默认为安装 --clear：如果创建虚拟环境的目录已经有了其他虚拟环境，清除重建  激活虚拟环境 虚拟环境创建好后，需要激活才能在当前命令行中使用，可以理解成将当前命令行环境中 PATH 变量的值替换掉\n通过 virtualenv 和 模块 venv 创建的虚拟环境，激活方式是一样的，即运行激活脚本\n Windows 系统中，激活脚本路径是 \u0026lt;myvenv\u0026gt;\\Scripts\\activate.bat，如果是 powershell 命令行，脚本换成 Activate.ps1 , 注意将 换成你自己的虚拟环境目录 Linux 系统中，激活脚本路径是 \u0026lt;myvenv\u0026gt;/bin/activate，默认脚本没有执行权限，要么设置脚本为可执行，要么用 source 命令执行  激活后，可以查看PATH变量 echo %PATH%\n退出虚拟环境 退出虚拟环境很简单，只需要执行 deactivate 命令就行，这个命令也在虚拟环境的脚本目录下，因为激活时，将脚本目录设置到 PATH 中了，所以可以直接使用\n退出虚拟环境相当于将 PATH 恢复成原来的\nMinutiae  Python does not have switch statement. Use dict instead. autopep8 auto line feed:  Python编码风格指导(PEP8)要求每行代码不得超过80个字符。而VSCode+Pyhon常用代码检查工具是pylint和flake8，常用代码格式化工具是yapf、autopep8和black。针对代码过长导致格式化时自动换行，应在setting.json中修改格式化工具的每行最大字符个数。 // autopep8 \u0026quot;python.formatting.provider\u0026quot;: \u0026quot;autopep8\u0026quot;, \u0026quot;python.formatting.autopep8Args\u0026quot;: [ \u0026quot;--max-line-length=200\u0026quot; ],    exec 执行储存在字符串或文件中的 Python 语句，相比于 eval，exec可以执行更复杂的 Python 代码  Resources (W3School Python 教程)[https://www.w3school.com.cn/python/index.asp]\n","date":"2021-11-22T00:00:00Z","permalink":"https://comfluter.life/p/python-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/","title":"Python 学习随记"},{"content":"问题  设备选择：  主要参数：内存 GPU 设备：jetson更好  树莓派算力有限，人工智能框架支持不官方 jetson有关方支持 tensor+树莓派能媲美jetson+tensor IO口     Tod-BERT fine tune  精调后的inference time \u0026amp; 内存占用？   ToD-inference time 单位？  任务  树莓派装pytorch ToD-BERT 在树莓派上训练、推理 ToD-BERT fine tune ToD-BERT inference time  想测在一个卡上batch size = 1时候的推理时间 cuda.event时间数值的单位？ time包中测出来的时间？ 10ms级别 使用time包测量的方法        服务器CPU运行测量 training  限制CPU核心数量4 batch size = 1，2，4 重新配置conda环境，安装CPU版本pytorch  配置conda环境教程   用time模块测量   立项答辩  突出动机 抓住评委兴趣 语速、文字减少，减少技术细节 突出重音、重点 每人提2条意见 应用场景 边缘端部署  内存需求 算力需求      ","date":"2021-11-22T00:00:00Z","permalink":"https://comfluter.life/p/%E5%A4%A7%E5%88%9B%E5%AF%B9%E8%AF%9D%E7%B3%BB%E7%BB%9F21.11.22%E7%BB%84%E4%BC%9A/","title":"大创对话系统21.11.22组会"},{"content":"ToD-BERT the Paper 数据集 不同的数据集可以帮助模型达到不同的熟练效果\n MetaLWOZ 预测数据 \u0026hellip;  ToD-BERT怎么训练的？  mlm contrastive function 两者都有误差，因此才可以被训练。 空间结构能够捕获差异，发现细微结构。  在服务器上运行ToD-BERT训练  进入服务器，激活环境source activate todbert_env 进入/media/HD1/dche/ToD-BERT文件夹cd /media/HD1/dche/ToD-BERT 查看GPU资源占用情况nvidia-smi，然后选择目前占用情况较低的一张GPU进行训练即可 运行训练shell脚本文件CUDA_VISIBLE_DEVICES=0 ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-MLM --only_last_turn --data_path ./../dialog_datasets。根据第三步选择的几号卡，就把对应的0改成几，此处默认单卡训练。如果一切正常的话，再读入数据集数据后，就会开始训练了，有进度条出现就Ok了。常见的没跑起来的情况是CUDA out of memory。  ToD-BERT本地调用  将ToD-BERT模型下载至本地 包含ToD-BERT所需的python包，并定义模型路径 import torch from transformers import * BERT = \u0026lt;path_to_the_downloaded_tod-bert\u0026gt; # 注意此处的路径要使用从根目录开始的绝对路径，而非从用户~目录开始的相对路径。 model_class, tokenizer_class, config_class = BertModel, BertTokenizer, BertConfig tokenizer = tokenizer_class.from_pretrained(BERT) tod_bert = model_class.from_pretrained(BERT)  使用ToD-BERT文档中的示例 # Encode text  input_text = \u0026#34;[CLS] [SYS] Hello, what can I help with you today? [USR] Find me a cheap restaurant nearby the north town.\u0026#34; input_tokens = tokenizer.tokenize(input_text) story = torch.Tensor(tokenizer.convert_tokens_to_ids(input_tokens)).long() if len(story.size()) == 1: story = story.unsqueeze(0) # batch size dimension if torch.cuda.is_available(): tod_bert = tod_bert.cuda() story = story.cuda() with torch.no_grad(): input_context = {\u0026#34;input_ids\u0026#34;: story, \u0026#34;attention_mask\u0026#34;: (story \u0026gt; 0).long()} hiddens = tod_bert(**input_context)[0]   计算ToD-BERT推理时间延迟 如何正确地计算 深度学习中如何正确地measure inference time\n问题：\n 在进行多batch训练或推理的时候，batch1被送进GPU后，CPU由于异步执行，不再等待batch1在GPU内执行完毕，而是直接对batch2进行预处理，此时若使用python的time库，停止计算时间的代码将在GPU执行完毕前被执行，导致时长计算错误。 GPU在不工作时将关掉许多硬件模块，在调用GPU时需要重新初始化（GPU预热），占用大量时间，导致时间测算错误。  解决方法：\n 在真正需要的example前运行几个example，使得GPU不再处于省电模式。 使用tr.cuda.event，在GPU上测量时间 使用函数torch.cuda.synchronize()，使得CPU和GPU工作在同步执行模式。  在服务器上进行inference并计算inference时间   在run_tod_lm_pretraining.sh文件中修改batch size = 1:\ngpu=$1 model_type=$2 bert_dir=$3 output_dir=$4 add1=$5 add2=$6 add3=$7 add4=$8 add5=$9 # ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-MLM --only_last_turn # ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-JNT --only_last_turn --add_rs_loss CUDA_VISIBLE_DEVICES=3 python my_tod_pretraining.py \\  --task=usdl \\  --model_type=${model_type} \\  --model_name_or_path=${bert_dir} \\  --output_dir=${output_dir} \\  --do_train \\  --do_eval \\  --mlm \\  --do_lower_case \\  --evaluate_during_training \\  --save_steps=2500 --logging_steps=1000 \\  --per_gpu_train_batch_size=1 --per_gpu_eval_batch_size=1 \\  ${add1} ${add2} ${add3} ${add4} ${add5}   使用上文办法，在my_tod_pretraining.py中引入计时相关语句：\n## with only MLM loss else: starter, ender = torch.cuda.Event(enable_timing=True), torch.cuda.Event(enable_timing=True) inputs = batch[\u0026#34;context\u0026#34;].clone() if args.mlm: inputs, labels = mask_tokens(inputs, tokenizer, args) inputs = inputs.to(args.device) labels = labels.to(args.device) starter.record() outputs = model(inputs, masked_lm_labels=labels, attention_mask=inputs\u0026gt;0) ender.record() # WAIT FOR GPU SYNC torch.cuda.synchronize() curr_time = starter.elapsed_time(ender) print(curr_time)   由于训练时间较长，使用tmux命令：tmux new -s inference_time_measure，进入tmux回话后还需要重新激活虚拟环境。\n\\(base) dialogue@amax-13:/media/HD1/dche/ToD-BERT$ CUDA_VISIBLE_DEVICES=0 ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/prtrain/ToD-BERT-MLM --only_last_turn --data_path ./../dialog_datasets Traceback (most recent call last): File \u0026#34;/media/HD1/dche/ToD-BERT/my_tod_pretraining.py\u0026#34;, line 16, in \u0026lt;module\u0026gt; import numpy as np ModuleNotFoundError: No module named \u0026#39;numpy\u0026#39; (base) dialogue@amax-13:/media/HD1/dche/ToD-BERT$ conda info --env # conda environments: # base * /media/HD1/dche/miniconda3 sum_env /media/HD1/dche/miniconda3/envs/sum_env tod_bert /media/HD1/dche/miniconda3/envs/tod_bert /media/HD1/miniconda3 (base) dialogue@amax-13:/media/HD1/dche/ToD-BERT$ conda activate tod_bert (tod_bert) dialogue@amax-13:/media/HD1/dche/ToD-BERT$ CUDA_VISIBLE_DEVICES=0 ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-MLM --only_last_turn --data_path ./../dialog_datasets   进行训练，观察输出结果 CUDA_VISIBLE_DEVICES=0 ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-MLM --only_last_turn --data_path ./../dialog_datasets\n  训练过程中可以使用crtl+b d从会话中分离\n(tod_bert) dialogue@amax-13:/media/HD1/dche/ToD-BERT$ tmux new -s inference_time_measure [detached (from session inference_time_measure)] (tod_bert) dialogue@amax-13:/media/HD1/dche/ToD-BERT$   可以查看当前的tmux会话并连接\n(tod_bert) dialogue@amax-13:/media/HD1/dche/ToD-BERT$ tmux ls inference_time_measure: 1 windows (created Sun Nov 21 23:26:48 2021) [134x33] zym1: 1 windows (created Sun Nov 21 18:34:03 2021) [148x45] zym2: 1 windows (created Sun Nov 21 18:34:44 2021) [113x12] (tod_bert) dialogue@amax-13:/media/HD1/dche/ToD-BERT$ tmux attach -t inference_time_measure   为了便于记录inference time，可以将bash命令中的输出全部写入txt文件，script -a 1.txt，则之后shell中所有文字都将被记录在1.txt中。\n  ","date":"2021-11-21T00:00:00Z","permalink":"https://comfluter.life/p/tod-bert-%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/","title":"ToD-BERT 相关内容"},{"content":"申请证书 在腾讯云SSL证书界面申请即可，过程很快，十分钟就通知证书申请成功。\n下载证书并上传至云服务器 在腾讯云SSL证书面板，找到要部署网站的证书，点击右侧的下载按钮即可下载\n SSL证书面板 \nzip包文件结构：\n zip_struct \n由于使用Nginx服务器，需要使用的文件全部放在Nginx文件夹下：\n \n将这两个文件复制到服务器Nginx安装路径下，我服务器上的安装路径为/etc/nginx：\nroot@VM-24-3-ubuntu:/# mv /home/ubuntu/download/1_comfluter.life_bundle.crt /etc/nginx root@VM-24-3-ubuntu:/# mv /home/ubuntu/download/2_comfluter.life.key /etc/nginx root@VM-24-3-ubuntu:/# cd /etc/nginx root@VM-24-3-ubuntu:/etc/nginx# ll -s total 80 4 drwxr-xr-x 8 root root 4096 Nov 21 10:05 ./ 4 drwxr-xr-x 115 root root 4096 Nov 15 15:50 ../ 4 -rw-rw-r-- 1 ubuntu ubuntu 3921 Nov 21 08:37 1_comfluter.life_bundle.crt 4 -rw-rw-r-- 1 ubuntu ubuntu 1700 Nov 21 08:37 2_comfluter.life.key 4 drwxr-xr-x 2 root root 4096 Nov 15 16:48 conf.d/ 4 -rw-r--r-- 1 root root 1077 Feb 4 2019 fastcgi.conf 4 -rw-r--r-- 1 root root 1007 Feb 4 2019 fastcgi_params 4 -rw-r--r-- 1 root root 2837 Feb 4 2019 koi-utf 4 -rw-r--r-- 1 root root 2223 Feb 4 2019 koi-win 4 -rw-r--r-- 1 root root 3957 Feb 4 2019 mime.types 4 drwxr-xr-x 2 root root 4096 May 26 01:10 modules-available/ 4 drwxr-xr-x 2 root root 4096 Nov 15 15:50 modules-enabled/ 4 -rw-r--r-- 1 root root 1512 Nov 15 16:53 nginx.conf 4 -rw-r--r-- 1 root root 180 Feb 4 2019 proxy_params 4 -rw-r--r-- 1 root root 636 Feb 4 2019 scgi_params 4 drwxr-xr-x 2 root root 4096 Nov 15 16:40 sites-available/ 4 drwxr-xr-x 2 root root 4096 Nov 15 16:48 sites-enabled/ 4 drwxr-xr-x 2 root root 4096 Nov 15 15:50 snippets/ 4 -rw-r--r-- 1 root root 664 Feb 4 2019 uwsgi_params 4 -rw-r--r-- 1 root root 3071 Feb 4 2019 win-utf 编辑Nginx服务器配置 更改/etc/nginx/sites-enabled下服务器配置文件：\nserver { listen 443 ssl; #填写绑定证书的域名 server_name comfluter.life; #证书文件名称 ssl_certificate 1_comfluter.life_bundle.crt; #私钥文件名称 ssl_certificate_key 2_comfluter.life.key; ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; location / { #网站主页路径。此路径仅供参考，具体请您按照实际目录操作。 #例如，您的网站运行目录在/etc/www下，则填写/etc/www。 root /home/ubuntu/www/Blogs/Personal; index index.html index.htm; } } server { listen 80; #填写绑定证书的域名 server_name comfluter.life; #把http的域名请求转成https return 301 https://$host$request_uri; } 配置中前半部分为https网页服务，后半部分为将http请求重定向至https请求\n验证配置文件：\nroot@VM-24-3-ubuntu:/etc/nginx# nginx -t nginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful 重启Nginx服务器：nginx -s reload\nhttps访问！ 此时输入comfluter.life访问时即可看到已经是https连接\n \nDebugging 更改成为https连接后博客的搜索功能出现问题，浏览器提示提交的表单不安全并阻止了搜索表单的提交。问题在于没有更改hugo博客配置文件中的baseURL字段，将其改为baseurl: https://comfluter.life即可解决。\n","date":"2021-11-21T00:00:00Z","permalink":"https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/","title":"在Nginx服务器上部署SSL证书"},{"content":"21.11.22 锁链  香农-奈奎斯特采样定律 测量：测不准原理  高速成像：  STEAM：10e-10 second 时间分辨率 STAMP：10e-12 second 最先进：10e-15 second 接近电子转移过程的时长！      information in imaging  香农：硕士论文：信息学开山  做一些无聊的事？还是有自己独特的思考？    yes and no question How many questions (y/n) must you ask to ensure the color of the ball you have?\n 8 red balls? 4 red \u0026amp; 2 blue \u0026amp; 1 black \u0026amp; 1 white? 2 red \u0026amp; 2 blue \u0026amp; 2 black \u0026amp; 2 white?  香农信息熵 傅里叶变换的信息损失？\n 取傅里叶变换的过程中，可以有位深 二维傅里叶变换，可以通过幅度反演相位 取傅里叶变换再取反变换？相似度有多高？  SSMS   傅里叶变换过后低频信息密集，高频信息稀疏。  JPEG压缩：压缩低频信息，让步给高频信息\nSignal Sparsity 图像中不是每一个频率都要进行采样！可以抽出傅里叶变换中影响比较大的信息量。\n Compressive sensing  通过采样稀疏的键值信号，尽可能好地还原信号    21.11.29 Law of Imaging: Measurement and statistics 噪声 Photon Noise 光子数量越多，相对噪声数量越来越少。\n光子随机到达，符合泊松分布$P(X=k) = \\frac{\\lambda^k\\cdot e^{-\\lambda}}{k!}$，误差与光子数量的根号成正比。\n但是，噪声如果与信号产生共振，可以使得信号的阈值降低。Stochastic resonance\nphotons: bunched? antibunched? \u0026ndash;\u0026gt; bunched!. 探测到/不探测到光子的概率符合二项式分布。\n所有基本粒子，按照自旋数区分：\n 整数自旋：费米子，满足泡利不相容原理，不能同时出现 $\\frac{1}{2}$自旋：玻色子，不满足不相容原理，两离子可以同时出现在同一位置，符合波色-爱因斯坦分布。  光子，若$hv \\leq kT$，则波动性更强，反之粒子性更强。\n如何使随机光变得更均匀？ 加一“挡板”，收到光子就短时屏蔽掉后来的光子。Sub-Possion Light光子噪声更低，测到的相对噪声远低于普通光源。此技术应用于引力波探测，减少激光束的噪声误差。\nDOI: 10.1063/1.881246\nSignal to Noise Ratio SNR 对于光：$SNR = \\frac{N_S}{\\sqrt{N_S}}$（不考虑sensor noise）\n光处于粒子态与波动态时的信噪比不同，因此探测量也不同：光：光子个数，波：幅度。\nInformation Capacity of Imagers 香农定理：$C = \\frac{B}{2} \\log_2(1+\\frac{S}{N})$，对于每个信道。\n空间带宽积：$SBP = \\frac{A}{G^2}$\n所以可以推出相机最大成像信息量：$Capacity = \\frac{A}{G^2} R \\frac{B}{2} \\log_2(1+\\frac{S}{N})$\n \nInformation Processing Limit Information and Energy 全互联网数据：175ZB。如此大量信息使得人工智能算法算力需求急速发展，数据分析用电量在急速发展。\n但是，摩尔定律的潜能在耗尽，人类发电量的总量也达到瓶颈。\n \nKardashev Scale\n 文明分级：能量的使用能力。  Information Processing Von-Neumann architecture\n储存墙瓶颈：为了存储数据消耗了大量能量，消耗了大量时间。读、取均是。例如识别Cifar10图像时访问能量是计算能量的10倍以上\n由此可以推算出算力能量效率的极限。\n \n512KB 需要 1.8GFLOPS\nBig Data Explosion. 无法应对如此大量的信息。我们必须提升能效。\nWays to overcome  器件级存算一体神经网络架构。能量潜力~1000TOPS/W   探索类人眼新形态神经网络结构，充分发挥存算一体器件的优势  Limit for Computing Computing：映射？\n 刘慈欣《三体》：人列计算机？\n Turing Computers\n input -\u0026gt; compute unit -\u0026gt; output  Computing unit:\n 人脑：神经网络：概率 电脑：冯诺依曼架构：逻辑  Power Consumption  input output  Maxwell Demon:信息换能量\nSzilard Engine(1921): Storing or erasing 1 bit of information needs at least $kT \\ln 2 $ Joule energy.\n Optical Computing  Power efficiency could be very low! 直接操作光子，输入图像输出状态   Quantum Computing  The power efficiency used computing can be negligible.    Noesis The chains are made of rubber instead of steel. Can human beings break the chains and find the way to Noesis?\nQuestion and Exploration Mission of human:\n To quest what is known that is unknown.   \n","date":"2021-11-21T00:00:00Z","permalink":"https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/","title":"重听《成像世界的奇境》"},{"content":"序言 在经历许许多多的学习、配置、折腾之后，终于在今天配置好了自己的个人博客。\n在朋友圈、微博盛行的当下，个人博客的风头已过，好像已经是上一个时代的产物了。那么究竟又是什么让我在建站的过程中即使遇到了层层困难，也坚定不移地搭起来这个博客呢？\n第一方面，感觉自己还是需要一个记录与对外表达的窗口。朋友圈等等社交网络固然可以，但是于我来讲似乎显得喧闹了些。我期待的表达，不是浮于表面的事件记录与短暂的情感宣泄。静下心来记录自己成长变化、各阶段真实想法与所思所得才是我我之所需。而这些想法，有时又期待能随时随地回顾，或是与志同道合之人分享。因此介于朋友圈、微博等社交平台与传统纸笔日记之间的个人博客似乎是个不错的选择。从半年前看到王凯师兄的博客便觉心动，到现在终于有了属于自己的一方空间。\n此外，也是最近在学习计算机网络的相关课程。从之前分不清HTTP、URL、TCP等等名词之间的关系的状态一步步地了解了网络的各个方面，而因为课程设计原因深感实践不足。云服务器的配置、连接、博客的搭建与部署、域名的申请与域名解析配置等等正好为动手实践课程内容提供了一个极佳的机会。在搭建服务器、部署博客的过程中也确实不断地将课本中抽象的知识落到实处。\n最后，可能也是最近受龄的影响，觉得自己不能再一天天想着GPA就惶惶不可终日。成天担心对成绩的影响而束手束脚，投入了过多不必要的时间在课业的细枝末节上，生怕漏掉一小点就会有多么大的影响。现在我觉得比较好的态度是：应该投入的时间，我保证投入。除此之外，偶然性是必然有的，考试中等等可能出现的意外情况、偏门的微末之处，实在无必要，也无意义为了它们投入大量的时间。投入了，也不能保证最后的结果。与其如此，正如闫锋老师说的，不如让自己真正做点实在的事出来，在实践中学习，在实践中收获，在主动地做事情的过程当中发挥自己心灵的能动性，让自己过得由己、恣肆、多彩一些。\n因此，也希望这个博客在记录我个人所思所想以外，能够带动我走出一天天为了成绩而焦虑的状态之中，真正地敢于放手去做自己喜欢的事，也才真正能做成自己喜欢的事。\n建站小记  21.11.05 购买腾讯云服务器、购买域名comfluter.life，熟悉linux服务器操作与hugo工具基本使用 21.11.13 在询问完王凯师兄hugo博客部署方法以后，学习hugo模板使用与博客搭建、github使用、github actions + 云服务器自动部署。但是卡在了最后一步Nginx服务器配置，使得服务器端页面一直显示404。 21.11.15 由于Nginx服务器的问题，以及之前摸索阶段各种误操作，决定直接重置腾讯云服务器，将服务器端的功能重新搭建。完成服务器基本设置后激活root账户并配置ssh登录信息，重写了github pages，安装Nginx，以root账户运行，配置Nginx。 21.11.19 由于使用主题时采用了git submodule的方式，而github同步时不同步submodule导致各种错误，重新使用git clone方式引入了主题，重新搭建了博客与github repo，并配置github actions。 21.11.19 解决github actions css无法加载问题，使用git submodule直接推送到github pages，但发现问题仍然存在。最终确定问题在baseURL上，改好后部署。 21.11.19 写下这篇hello world文档。  动手去做一个项目确实是学习的高效方法。通过搭建博客，至少熟悉了以下内容：\n 云服务器 Linux命令行 git命令行操作 git submodule github全流程 github pages github actions hugo使用 域名配置与域名解析 防火墙配置 Nginx服务器搭建  其中许多是以前多次觉得应该去做，而没多久又半途而废的。放弃的理由大概是陷入极多的知识内容而毫无方向，也就失去了学习的意义，但为了一个目标去做，许多事情就顺理成章了。\n希望以后能以更多项目为依托，让自己不断学习、进步。\n","date":"2021-11-19T00:00:00Z","image":"https://comfluter.life/p/hello-world/cover_hu8fe24aed48b4970acc8d4892530f8a6f_213999_120x120_fill_q75_box_smart1.jpg","permalink":"https://comfluter.life/p/hello-world/","title":"Hello, World!"}]