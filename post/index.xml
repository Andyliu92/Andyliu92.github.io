<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 知止堂</title><link>https://comfluter.life/post/</link><description>Recent content in Posts on 知止堂</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 31 Dec 9999 00:00:00 +0000</lastBuildDate><atom:link href="https://comfluter.life/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Hello, World!</title><link>https://comfluter.life/p/hello-world/</link><pubDate>Fri, 31 Dec 9999 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/hello-world/</guid><description>序言 在经历许许多多的学习、配置、折腾之后，终于在今天配置好了自己的个人博客。
在朋友圈、微博盛行的当下，个人博客的风头已过，好像已经是上一个时代的产物了。那么究竟又是什么让我在建站的过程中即使遇到了层层困难，也坚定不移地搭起来这个博客呢？
第一方面，感觉自己还是需要一个记录与对外表达的窗口。朋友圈等等社交网络固然可以，但是于我来讲似乎显得喧闹了些。我期待的表达，不是浮于表面的事件记录与短暂的情感宣泄。静下心来记录自己成长变化、各阶段真实想法与所思所得才是我我之所需。而这些想法，有时又期待能随时随地回顾，或是与志同道合之人分享。因此介于朋友圈、微博等社交平台与传统纸笔日记之间的个人博客似乎是个不错的选择。从半年前看到王凯师兄的博客便觉心动，到现在终于有了属于自己的一方空间。
此外，也是最近在学习计算机网络的相关课程。从之前分不清HTTP、URL、TCP等等名词之间的关系的状态一步步地了解了网络的各个方面，而因为课程设计原因深感实践不足。云服务器的配置、连接、博客的搭建与部署、域名的申请与域名解析配置等等正好为动手实践课程内容提供了一个极佳的机会。在搭建服务器、部署博客的过程中也确实不断地将课本中抽象的知识落到实处。
最后，可能也是最近受龄的影响，觉得自己不能再一天天想着GPA就惶惶不可终日。成天担心对成绩的影响而束手束脚，投入了过多不必要的时间在课业的细枝末节上，生怕漏掉一小点就会有多么大的影响。现在我觉得比较好的态度是：应该投入的时间，我保证投入。除此之外，偶然性是必然有的，考试中等等可能出现的意外情况、偏门的微末之处，实在无必要，也无意义为了它们投入大量的时间。投入了，也不能保证最后的结果。与其如此，正如闫锋老师说的，不如让自己真正做点实在的事出来，在实践中学习，在实践中收获，在主动地做事情的过程当中发挥自己心灵的能动性，让自己过得由己、恣肆、多彩一些。
因此，也希望这个博客在记录我个人所思所想以外，能够带动我走出一天天为了成绩而焦虑的状态之中，真正地敢于放手去做自己喜欢的事，也才真正能做成自己喜欢的事。
建站小记 21.11.05 购买腾讯云服务器、购买域名comfluter.life，熟悉linux服务器操作与hugo工具基本使用 21.11.13 在询问完王凯师兄hugo博客部署方法以后，学习hugo模板使用与博客搭建、github使用、github actions + 云服务器自动部署。但是卡在了最后一步Nginx服务器配置，使得服务器端页面一直显示404。 21.11.15 由于Nginx服务器的问题，以及之前摸索阶段各种误操作，决定直接重置腾讯云服务器，将服务器端的功能重新搭建。完成服务器基本设置后激活root账户并配置ssh登录信息，重写了github pages，安装Nginx，以root账户运行，配置Nginx。 21.11.19 由于使用主题时采用了git submodule的方式，而github同步时不同步submodule导致各种错误，重新使用git clone方式引入了主题，重新搭建了博客与github repo，并配置github actions。 21.11.19 解决github actions css无法加载问题，使用git submodule直接推送到github pages，但发现问题仍然存在。最终确定问题在baseURL上，改好后部署。 21.11.19 写下这篇hello world文档。 动手去做一个项目确实是学习的高效方法。通过搭建博客，至少熟悉了以下内容：
云服务器 Linux命令行 git命令行操作 git submodule github全流程 github pages github actions hugo使用 域名配置与域名解析 防火墙配置 Nginx服务器搭建 其中许多是以前多次觉得应该去做，而没多久又半途而废的。放弃的理由大概是陷入极多的知识内容而毫无方向，也就失去了学习的意义，但为了一个目标去做，许多事情就顺理成章了。
希望以后能以更多项目为依托，让自己不断学习、进步。</description></item><item><title>《大学》摘录</title><link>https://comfluter.life/p/%E5%A4%A7%E5%AD%A6%E6%91%98%E5%BD%95/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%A4%A7%E5%AD%A6%E6%91%98%E5%BD%95/</guid><description>大学之道，在明明德，在亲民，在止于至善。知止而后能定，定而后能静，静而后能安，安而后能虑，虑而后能得。物有本末，事有始终，知所先后，则近道矣。古之欲明明德于天下者，先治其国；欲治其国者，先齐其家；欲齐其家者，先修其身；欲修其身者，先正其心；欲正其心者，先诚其意；欲诚其意者，先致其知；致知在格物。物格而后知至，知至而后意诚，意诚而后心正，心正而后身修，身修而后家齐，家齐而后国治，国治而后天下平。自天子以至于庶人，壹是皆以修身为本。其本乱而末治者，否矣。其所厚者薄，而其所薄者厚，未之有也。此谓知本，此谓知之至也。
康诰曰：“克明德”。&amp;hellip;帝典曰：“克明俊德”&amp;hellip;
汤之盤铭曰：“苟日新，日日新，又日新。”康诰曰：“作新民。”诗曰：“周虽旧邦，其命惟新。”是故君子无所不用其极。
君子贤其贤而亲其亲，小人乐其乐而利其利，此以没世不忘也。
所谓诚其意者，毋自欺也。如恶恶臭，如好好色，此之谓自谦，故君子必慎其独也！小人闲居为不善，无所不至，见君子而后厌然，掩其不善，而著其善。人之视己，如见其肺肝然，则何益矣。此谓诚于中，形于外，故君子必慎其独也。曾子曰：“十目所视，十手所指，其严乎！”富润屋，德润身，心广体胖，故君子必诚其意。
《康诰》曰：“如保赤子。”心诚求之，虽不中，不远矣。&amp;hellip;是故君子有诸己而后求诸人，无诸己而后非诸人。
《诗》云：“乐只君子，民之父母。”民之所好好之，民之所恶恶之，此之谓民之父母。
德者本也，财者末也。
是故君子有大道，必忠信以得之，骄泰以失之。</description></item><item><title>《子思子》摘录</title><link>https://comfluter.life/p/%E5%AD%90%E6%80%9D%E5%AD%90%E6%91%98%E5%BD%95/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%AD%90%E6%80%9D%E5%AD%90%E6%91%98%E5%BD%95/</guid><description>《中庸》 天命谓之性，率性谓之道，修道谓之教。道也者，不可须臾离也，可离非道也。是故君子戒慎乎其所不睹，恐惧乎其所不闻。莫现乎隐，莫显乎微，故君子慎其独也。喜怒哀乐之未发，谓之中；发而皆中节，谓之和。中也者，天下之大本也；和也者，天下之达道也。致中和，天地位焉，万物育焉。
仲尼曰：“君子中庸，小人反中庸。”君子之中庸也，君子而时中；小人之中庸也，小人而无忌惮也。
子曰：“舜其大知也与！舜好问而好察迩言，隐恶而扬善，执其两端，用其中于民，其斯以为舜乎！”
子曰：“天下国家可均也，爵禄可以辞也，白刃可以蹈也，中庸不可能也。”
子路问强。子曰：“&amp;hellip;故君子和而不流，强哉矫！中立而不倚，强哉矫！国有道，不变塞焉，强哉矫！国无道，至死不变，强哉矫！”
子曰：“素隐行怪，后世有述焉，吾弗为之矣。君子遵道而行，半途而废，吾弗能已矣。君子依乎中庸，遁世不见知而不悔，唯圣者能之。”
君子之道费而隐&amp;hellip;天地之大也，人尤有所憾。故君子语大，天下莫能载焉；语小，天下莫能破焉。诗云：“鸢飞戾天，鱼跃于渊。”其言上下察也。君子之道，造端乎夫妇，及其至也，察乎天地。
子曰：“道不远人。人之为道而远人，不可以为道。”诗云：“伐柯伐柯，其则不远。”执柯以伐柯，睨而视之，犹以为远。故君子治人以人，改而止。
庸德之行，庸言之谨，有所不足，不敢不勉，有余不敢尽，言顾行，行顾言，君子乎不慥慥尔！
君子素位而行，不愿乎其外。素富贵，行乎富贵；素贫贱，行乎贫贱；素夷狄，行乎夷狄；素患难，行乎患难，君子无入而不自得焉。在上位不陵下，在下位不援上，正己而不求于人则无怨。上不怨天，下不尤人。故君子居易以俟命，小人行险以侥幸。子曰：“射有似乎君子，失诸正鹄，反求诸其身。”
君子之道，譬如行远必自迩，譬如登高必自卑。</description></item><item><title>1 Introduction to Programming Languages and Tools of the Trade</title><link>https://comfluter.life/p/1-introduction-to-programming-languages-and-tools-of-the-trade/</link><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/1-introduction-to-programming-languages-and-tools-of-the-trade/</guid><description>Vscode extensions for web development ESLint Integrates ESLint JavaScript into VS Code. Prettier JS code formatter JavaScript (ES6) code snippets Tools Node.JS (NodeJS安装-菜鸟教程)[https://www.runoob.com/nodejs/nodejs-install-setup.html]</description></item><item><title>2 Introduction to GitHub</title><link>https://comfluter.life/p/2-introduction-to-github/</link><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/2-introduction-to-github/</guid><description>基本命令 创建虚拟环境：conda create -n &amp;lt;env_name&amp;gt; python=X.X 激活虚拟环境：conda activate &amp;lt;env_name&amp;gt; Minutiae unable auto activate base: conda config --set auto_activate_base false</description></item><item><title>Anaconda使用随记</title><link>https://comfluter.life/p/anaconda%E4%BD%BF%E7%94%A8%E9%9A%8F%E8%AE%B0/</link><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/anaconda%E4%BD%BF%E7%94%A8%E9%9A%8F%E8%AE%B0/</guid><description>基本命令 创建虚拟环境：conda create -n &amp;lt;env_name&amp;gt; python=X.X 激活虚拟环境：conda activate &amp;lt;env_name&amp;gt; Minutiae unable auto activate base: conda config --set auto_activate_base false</description></item><item><title>Nginx 服务器配置子域名</title><link>https://comfluter.life/p/nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%AD%90%E5%9F%9F%E5%90%8D/</link><pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%AD%90%E5%9F%9F%E5%90%8D/</guid><description>添加域名解析 到腾讯云服务器控制台，添加需要解析的子域名，如下图。图中第一个参数“主机记录”即为子域名名称。
配置Nginx server { # 端口设置 listen 80; # 二级域名设置 server_name ling.comfluter.life; # 301重定向设置 return 301 http://47.102.150.182/; } 增加一项二级域名设置即可。</description></item><item><title>树莓派配置NAS</title><link>https://comfluter.life/p/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AEnas/</link><pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AEnas/</guid><description>挂载NTFS格式磁盘 貌似树莓派OS能够自动挂载NTFS磁盘到/media/pi下。不用额外操作。
使用SAMBA协议提供校园网内文件服务 安装SAMBA 安装SAMBA：sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y samba
查看SAMBA版本：
root@raspberrypi:/media/pi/4T存储# samba --version Version 4.13.13-Debian</description></item><item><title>参观华为南京研究所</title><link>https://comfluter.life/p/%E5%8F%82%E8%A7%82%E5%8D%8E%E4%B8%BA%E5%8D%97%E4%BA%AC%E7%A0%94%E7%A9%B6%E6%89%80/</link><pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%8F%82%E8%A7%82%E5%8D%8E%E4%B8%BA%E5%8D%97%E4%BA%AC%E7%A0%94%E7%A9%B6%E6%89%80/</guid><description>今天，借着网络课提供的机会，有幸走进华为南研所，切身感受企业研究部门的气氛，也看看自己在课上的所学是如何落到实处的。
企业气氛确实是今天感觉到比较奇特的一个方面。随处可见使人奋进、催人奋斗的标语。除此以外，园区里还有许多战斗标语，例如“没有退路就是胜利之路”，美国的打压看起来也确实落到了实处。</description></item><item><title>Including Verilog Code Block in Latex</title><link>https://comfluter.life/p/including-verilog-code-block-in-latex/</link><pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/including-verilog-code-block-in-latex/</guid><description>include packages for code block and coloring
\usepackage{listings} \usepackage{xcolor} insert following codes for defining verilog code coloring tactic. It should be inserted at the head field of the latex file (before \begin{document}).
% for verilog code coloring \definecolor{vgreen}{RGB}{104,180,104} \definecolor{vblue}{RGB}{49,49,255} \definecolor{vorange}{RGB}{255,143,102} \lstdefinestyle{verilog-style} { language=Verilog, basicstyle=\small\ttfamily, keywordstyle=\color{vblue}, identifierstyle=\color{black}, commentstyle=\color{vgreen}, numbers=left, numberstyle=\tiny\color{black}, numbersep=10pt, tabsize=8, moredelim=*[s][\colorIndex]{[}{]}, literate=*{:}{:}1 } \makeatletter \newcommand*\@lbracket{[} \newcommand*\@rbracket{]} \newcommand*\@colon{:} \newcommand*\colorIndex{% \edef\@temp{\the\lst@token}% \ifx\@temp\@lbracket \color{black}% \else\ifx\@temp\@rbracket \color{black}% \else\ifx\@temp\@colon \color{black}% \else \color{vorange}% \fi\fi\fi } \makeatother \usepackage{trace} Insert your verilog code block using following codes:</description></item><item><title>Pyspice 学习随记</title><link>https://comfluter.life/p/pyspice-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/pyspice-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>References PySpice: 使用ngspice进行电路仿真分析-1：安装 PySpice: 使用ngspice进行电路仿真分析-2：ngspice简要介绍-输入文件格式1</description></item><item><title>Linux 学习随记</title><link>https://comfluter.life/p/linux-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/linux-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>开启root账户并配置SSH登录 修改root密码 sudo passwd root 修改SSH配置 sudo vi /etc/ssh/sshd_config 找到选项PermitRootLogin，将其前面的#去掉，即可使用SSH登录。若将后面的prohibit-password改为yes则可使用密码登录。 如果不选择密码登录，还需要通过其他账户登录，将authorized_keys复制到root账户的.ssh文件夹/root/.ssh下 Minutiae 使用taskset命令限定Linux下CPU逻辑核的使用对象及个数 linux下如何查看多核负载情况 LINUX下查看CPU使用率的命令</description></item><item><title>博客评论功能搭建</title><link>https://comfluter.life/p/%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E6%90%AD%E5%BB%BA/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E6%90%AD%E5%BB%BA/</guid><description>在王凯师兄的推荐下，使用gitalk搭建博客评论功能。
Github上申请OAuth application 登录github 在Settings页面选择Developer settings选项。 在Developer settings选择OAuth Apps,然后会在页面右边有一个New OAuth App按钮，点击这个按钮就进入到新建OAuth application页面 填写新建OAuth application相关信息： Application name：新建应用的名称 Homepage URL：The full URL to your application homepage. eg.https://comfluter.life/ Application description：对新建应用的描述 Authorization callback URL：回调链接，与Homepage URL保持一致即可。 注：这些参数可以在以后修改 点击注册应用，就可以看到Client ID，可以新建一个Client Secret Hugo 配置 使用stack主题，在配置文件config.yaml中已经预留了相关字段。
复制填写刚生成的Client ID，Client Secret。 repo: 类型：字符串，必填，github上的仓库名字，用于存放Gitalk评论 owner: 类型：字符串，必填，github仓库的所有者的名字 admin: 类型：数组(元素是字符串)，必填，github仓库的所有者和合作者 (对这个 repository 有写权限的用户)。如果仓库有多个人可以操作，那么在这里以数组形式写出：['someone'] Debugging Error: Not Found. 尝试了修改Homepage URL为github pages页面，发现并没有用。
解决：存放评论的repo不能为private属性. 应该是一个public的代码库才可以使用Gitalk！
References Gitalk评论插件使用教程</description></item><item><title>Verilog with vscode</title><link>https://comfluter.life/p/verilog-with-vscode/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/verilog-with-vscode/</guid><description>linting using vscode extension Verilog-HDL/SystemVerilog/Bluespec SystemVerilog.
using iverilog
go to extension settings and set verilog &amp;gt; linting : linter = iverilog
then the linting function should work for verilog files.
Notice:
the dir to verilog file should not contain chinese characters and spaces. if you imported module from other file without include command, iverilog willl report an error. As it is always the case when using vivado, add -i to extention setting Verilog › Linting › Iverilog: Arguments to ignore this error.</description></item><item><title>Vivado 学习随记</title><link>https://comfluter.life/p/vivado-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/vivado-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>Multi-module Project Just write two verilog files and instantiate a module specified in the other file, the vivado will figure out the dependencies automatically.</description></item><item><title>《先秦诸子选读》：道家思想</title><link>https://comfluter.life/p/%E5%85%88%E7%A7%A6%E8%AF%B8%E5%AD%90%E9%80%89%E8%AF%BB%E9%81%93%E5%AE%B6%E6%80%9D%E6%83%B3/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%85%88%E7%A7%A6%E8%AF%B8%E5%AD%90%E9%80%89%E8%AF%BB%E9%81%93%E5%AE%B6%E6%80%9D%E6%83%B3/</guid><description>老子 概述 先秦道家第一部 《老子》文献的真实性： 上世纪20年代，用西方方法考察中国传统文献：有气人，但书可能是后人写的 马王堆汉墓老子帛书抄本 汉文帝时期 证明此时《老子》其书已经盛行 篇目数量差不多 90年代：郭店楚简 其中有《老子》 测年公元前300年，战国中晚期 其中还有较多儒家早期文献 篇目较少，约为传世本1/3，可能为摘抄 此两本出图后，证明《老子》一定成书早于战国晚期。 证实了《老子》应为所有道家文献的原创。 作者到现在还不确定，阅读时不用深究 首创“自然之道”的概念 道 不仅道家讲“道”，其应该为春秋时代出现的思想概念。
“道”字商代便有，但不是重要思想概念，仅为“道路”之意。“道”在春秋时成为思想概念内涵。从《论语》中可以得到印证。
含义变化原因：政治变化。以氏族为本位的政治构架在衰弱。以祭祀为本，为期中心概念（西周时）。后来西周衰落，天命观念受到怀疑，上天包庇某一氏族的理念在弱化。孔子时政治基本不讲“天命”，个人也可以讲“天命”。政治的合理性在哪？当时的思想家在寻找新的理解。这个背景下，“道”的观念得以提出。政治的合法性来源：神授&amp;ndash;&amp;gt;往圣先贤的做法，体现出人本主义。
《国语》周语下：吾非瞽史，焉知天道？
只有知道历史，才知道天道。（史官当时也管天道）此处天道：星象变化的大致规则，引申为自然变化的规则。
中国的士大夫文化：
对中国文化发展影响最深。 非宗教的：思想主流为人文主义的：道德规则、历史传承、品信修养，而非不可知的神意。 道为非常重要的概念。 道为其他概念的中心：仁义礼智等等
自然之道：一种特别的道 《老子》二十五章：人法地，地法天，天法道，道法自然 “道可道非常道”
自然之道的含义 自然：名词？ &amp;mdash;&amp;gt; 天地万物的规则
自然是动词！ 意为“自己这样”，万物自己演化的规律。
人应当效法自然：不是效法自然的规律，而是效法自己如此的状态。
第七章：天长地久。天地所以能长且久者，以其不自生，故能长生。是以圣人后其身而身先，外其身而身存。非以其无私耶？故能成其私。(后其身 一作：退其身)
天地长久，不自生：天地不是单一的生命，以万物的生命来体现自己的生命。万物演变恒久不息，天也恒久存在。
是以圣人后其身而身先，外其身而身存： 老子对后代人物的政治谋略影响较大，怎么在政治上立于不败之地。看上去是哲理，但用起来是技巧。
四十章：反者道之动；弱者道之用。天下万物生于有，有生于无。
老子要否认所有提升到“规则”层面的内容。
二章：天下皆知美之为美，斯恶已。皆知善之为善，斯不善已。故有无相生，难易相成，长短相形，高下相倾，音声相和，前后相随，恒也。是以圣人处无为之事，行不言之教，万物作焉而不辞，生而不有，为而不恃，功成而弗居。夫唯弗居，是以不去。(万物作焉而不辞 一作：万物作焉而不为始)</description></item><item><title>服务器配置CPU版ToD-BERT环境</title><link>https://comfluter.life/p/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEcpu%E7%89%88tod-bert%E7%8E%AF%E5%A2%83/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEcpu%E7%89%88tod-bert%E7%8E%AF%E5%A2%83/</guid><description>Conda 复制已有环境 由于服务器上本身已经有使用CUDA平台的ToD-BERT运行环境，仅需将此环境中所有使用GPU的库换为使用CPU的库即可：pytorch
查看已有环境
(base) dialogue@amax-13:/$ conda info --env # conda environments: # base * /media/HD1/dche/miniconda3 sum_env /media/HD1/dche/miniconda3/envs/sum_env tod_bert /media/HD1/dche/miniconda3/envs/tod_bert /media/HD1/miniconda3 创建新环境，并将原有环境中的所有包复制，并激活新建立的环境。
(base) dialogue@amax-13:/$ conda create -n tod_bert_cpu --clone tod_bert Source: /media/HD1/dche/miniconda3/envs/tod_bert Destination: /media/HD1/dche/miniconda3/envs/tod_bert_cpu Packages: 20 Files: 12683 Preparing transaction: done Verifying transaction: done Executing transaction: done # # To activate this environment, use # # $ conda activate tod_bert_cpu # # To deactivate an active environment, use # # $ conda deactivate (base) dialogue@amax-13:/$ conda activate tod_bert_cpu (tod_bert_cpu) dialogue@amax-13:/$ Conda配置环境中的包（卸载GPU版本、安装CPU版本） Conda 查看环境中所有包的信息</description></item><item><title>Numpy 学习随记</title><link>https://comfluter.life/p/numpy-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/numpy-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>数组切片 import numpy as np a = np.array([[11, 12, 13], [21, 22, 23]], [31, 32, 33]) 注意Numpy中元素编号从0开始，左侧包含右侧不包含
取单个元素x = a[1, 2]，对应第0维的第1个元素4 切片x = a[0:2, 1:3]，对应第0维的第0~1个元素，第1维的第1~2个元素[[12 13], [22 23]] 切片x = a[:2, 2:]，对应对应第0维的最开始到第2（2-1）个元素，第1维的第2个及以后的所有元素[[13], [23]] 判断一个数组是否存在于另一个大数组内 直接使用==会逐数字判断元素是否存在：
import numpy as np a = np.array([[1, 2, 3], [2, 3, 4]]) print(a == np.array([1, 2, 3])) 可以改为(a == np.array([1, 2, 3])).all(1).any()。y == z会将y的每一行与z的每个元素进行比较。 使用all(axis=1)可以获取所有元素匹配的行，并使用any()找出是否匹配。
import numpy as np a = np.array([[1, 2, 3], [2, 3, 4]]) print(a == np.</description></item><item><title>PlantUML 学习随记</title><link>https://comfluter.life/p/plantuml-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/plantuml-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>PlantUML with VsCode Install PlantUML extension for vscode. following extension follow me document: install java JRE install Graphviz download the latest plantuml.jar specify the jar location with the extension setting plantuml.jar specify the GraphViz installation by defining the Windows environment variable GRAPHVIZ_DOT, e.g., c:\program files\graphviz\bin\dot.exe</description></item><item><title>Python 学习随记</title><link>https://comfluter.life/p/python-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/python-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>Python Module Python Module 导入方法 import &amp;lt;module name&amp;gt;调用这个方法导入的module中的函数时，需要&amp;lt;module name&amp;gt;.&amp;lt;function name&amp;gt;格式进行使用 from &amp;lt;module name&amp;gt; import &amp;lt;sth&amp;gt;从某个模块中引入某些特殊函数等引入现在所在的全局命名空间中，直接使用&amp;lt;sth&amp;gt;就可以进行使用。这里引入的可以是一个子包，也可以是子包中的任意对象。 from &amp;lt;module name&amp;gt; import *将模块中所有对象引入，直接使用原模块中的名称即可使用 搜索路径 导入一个模块时，Python 解析器对模块位置的搜索顺序是：
当前目录 如果不在当前目录，Python 则搜索在 shell 变量 PYTHONPATH 下的每个目录。 如果都找不到，Python会察看默认路径。UNIX下，默认路径一般为/usr/local/lib/python/。 模块搜索路径存储在 system 模块的 sys.path 变量中。变量里包含当前目录，PYTHONPATH和由安装过程决定的默认目录。 命名空间和作用域 变量：名字与匹配对象的对应 命名空间：记录了所有名字-对象对应关系的字典 python表达式可以访问全局/局部命名空间，重名时局部命名空间优先。 使用global语句可以告诉python变量属于全局变量。ex.global x
导入本地自定义包 文件结构
main.py package |--__init__.py |--module1.py |--module2.py 包是一个分层次的文件目录结构，它定义了一个由模块及子包，和子包下的子包等组成的 Python 的应用环境。
简单来说，包就是文件夹，但该文件夹下必须存在__init__.py 文件, 该文件的内容可以为空。__init__.py 用于标识当前文件夹是一个包。
假设module1.py中有函数func1()，则在main函数中可以使用以下集中方式进行包导入：
import mymodule.module1此时对应func1()的调用为mymodule.module1.func1()，前缀较长，比较繁琐。 import mymodule.module1 as m1此时对应func1()的调用为m1.func1() from mymodule import module1此时对应func1()的调用为module1.</description></item><item><title>大创对话系统21.11.22组会</title><link>https://comfluter.life/p/%E5%A4%A7%E5%88%9B%E5%AF%B9%E8%AF%9D%E7%B3%BB%E7%BB%9F21.11.22%E7%BB%84%E4%BC%9A/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%A4%A7%E5%88%9B%E5%AF%B9%E8%AF%9D%E7%B3%BB%E7%BB%9F21.11.22%E7%BB%84%E4%BC%9A/</guid><description>问题 设备选择： 主要参数：内存 GPU 设备：jetson更好 树莓派算力有限，人工智能框架支持不官方 jetson有关方支持 tensor+树莓派能媲美jetson+tensor IO口 Tod-BERT fine tune 精调后的inference time &amp;amp; 内存占用？ ToD-inference time 单位？ 任务 树莓派装pytorch ToD-BERT 在树莓派上训练、推理 ToD-BERT fine tune ToD-BERT inference time 想测在一个卡上batch size = 1时候的推理时间 cuda.event时间数值的单位？ time包中测出来的时间？ 10ms级别 使用time包测量的方法 服务器CPU运行测量 training 限制CPU核心数量4 batch size = 1，2，4 重新配置conda环境，安装CPU版本pytorch 配置conda环境教程 用time模块测量 立项答辩 突出动机 抓住评委兴趣 语速、文字减少，减少技术细节 突出重音、重点 每人提2条意见 应用场景 边缘端部署 内存需求 算力需求</description></item><item><title>希尔伯特曲线项目每周进展</title><link>https://comfluter.life/p/%E5%B8%8C%E5%B0%94%E4%BC%AF%E7%89%B9%E6%9B%B2%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%AF%8F%E5%91%A8%E8%BF%9B%E5%B1%95/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%B8%8C%E5%B0%94%E4%BC%AF%E7%89%B9%E6%9B%B2%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%AF%8F%E5%91%A8%E8%BF%9B%E5%B1%95/</guid><description>21.12.03 与王凯师兄讨论 已完成 两光子信号的分辨方法。 下一步任务 电流精度问题，考虑器件电阻（三极管导通电阻）的问题。 结合半导体CMOS工艺M1层方块电阻进行计算。 21.11.25 与王凯师兄讨论 已完成 电流信号最小step 电流信号大小极差 考虑信号传输时间的条件下，2光子的应对策略 下一步任务 不用考虑信号传输时间，两光子同时到达的情况如何分辨？ 参考以往论文 如何使用更少的信息分辨？ 21.11.11 与王凯师兄讨论 已经完成的进展 希尔伯特曲线位置到平面位置映射 单光子信号函数关系（电流、时间差） 下一步任务 推导单光子电流信号范围、min step 两光子信号的分辨（电流+时间差） 能否只用电流不用时间差？（对于极端状况不行？） 时间差能否被分辨？ 不同位置信号乱序到达，如何处理 统一单光子与多光子探测方法</description></item><item><title>视网膜初级处理项目进展</title><link>https://comfluter.life/p/%E8%A7%86%E7%BD%91%E8%86%9C%E5%88%9D%E7%BA%A7%E5%A4%84%E7%90%86%E9%A1%B9%E7%9B%AE%E8%BF%9B%E5%B1%95/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E8%A7%86%E7%BD%91%E8%86%9C%E5%88%9D%E7%BA%A7%E5%A4%84%E7%90%86%E9%A1%B9%E7%9B%AE%E8%BF%9B%E5%B1%95/</guid><description>21.12.03 与王凯师兄讨论 已完成 仿真图像激励突然消失时的瞬态响应 仿真结果视频输出 下一步 依据视网膜边缘抑制能力调整电路参数 不同空间频率信号仿真 阅读文献，仿真更复杂的模型。 Photoreceptor 取对数电路 关于项目目的 人的视觉信号，在视锥细胞、视杆细胞层面信息量有1Tbps，但是传入人脑的信息只有10Mbps。这充分说明在观察一幅图像时，不需要那么多的信息，不需要记录每一个像素点的灰度信息。例如自然界中成像结果中大部分信息是缓变的，不需要每个像素点都按照绝对大小所需的数据精度进行记录。因此希望探究视网膜对于信号的处理方法，理论上建模出其提取的图像信息，再进行优化，指导新型成像器件、新型图片格式的形成。
而且，上述涉及到的操作可以不通过额外、单独的处理电路进行处理，而是在器件层面直接进行处理。远景目标考虑使用SNN（Spike Neuron Network，脉冲神经网络）完成整个图像的输入输出。
21.11.25 与王凯师兄讨论 已完成 Pyspice仿真静态图像阶跃输入时的瞬态响应 下一步 仿真激励突然消失时，电路的响应 仿真有初始条件状态下的零输入响应即可 视频输入的响应 21.11.11 与王凯师兄讨论 已经完成的工作： 使用pyspice，仿真出电阻网络对于特定信号的响应 下一步计划： 利用四边形连接方式，仿真出： 对于静态图片的响应 对于动态图片的响应，做成视频 改为六边形连接方式进行仿真。 需要六边形超分辨率的知识，数学上暂时存在困难，需等待师兄仿真完成。</description></item><item><title>ToD-BERT 相关内容</title><link>https://comfluter.life/p/tod-bert-%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/tod-bert-%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/</guid><description>在服务器上运行ToD-BERT训练 进入服务器，激活环境source activate todbert_env 进入/media/HD1/dche/ToD-BERT文件夹cd /media/HD1/dche/ToD-BERT 查看GPU资源占用情况nvidia-smi，然后选择目前占用情况较低的一张GPU进行训练即可 运行训练shell脚本文件CUDA_VISIBLE_DEVICES=0 ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-MLM --only_last_turn --data_path ./../dialog_datasets。根据第三步选择的几号卡，就把对应的0改成几，此处默认单卡训练。如果一切正常的话，再读入数据集数据后，就会开始训练了，有进度条出现就Ok了。常见的没跑起来的情况是CUDA out of memory。 ToD-BERT本地调用 将ToD-BERT模型下载至本地 包含ToD-BERT所需的python包，并定义模型路径 import torch from transformers import * BERT = &amp;lt;path_to_the_downloaded_tod-bert&amp;gt; # 注意此处的路径要使用从根目录开始的绝对路径，而非从用户~目录开始的相对路径。 model_class, tokenizer_class, config_class = BertModel, BertTokenizer, BertConfig tokenizer = tokenizer_class.from_pretrained(BERT) tod_bert = model_class.from_pretrained(BERT) 使用ToD-BERT文档中的示例 # Encode text input_text = &amp;#34;[CLS] [SYS] Hello, what can I help with you today? [USR] Find me a cheap restaurant nearby the north town.</description></item><item><title>在Nginx服务器上部署SSL证书</title><link>https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/</guid><description>申请证书 在腾讯云SSL证书界面申请即可，过程很快，十分钟就通知证书申请成功。
下载证书并上传至云服务器 在腾讯云SSL证书面板，找到要部署网站的证书，点击右侧的下载按钮即可下载
SSL证书面板
zip包文件结构：
zip_struct
由于使用Nginx服务器，需要使用的文件全部放在Nginx文件夹下：
将这两个文件复制到服务器Nginx安装路径下，我服务器上的安装路径为/etc/nginx：
root@VM-24-3-ubuntu:/# mv /home/ubuntu/download/1_comfluter.life_bundle.crt /etc/nginx root@VM-24-3-ubuntu:/# mv /home/ubuntu/download/2_comfluter.life.key /etc/nginx root@VM-24-3-ubuntu:/# cd /etc/nginx root@VM-24-3-ubuntu:/etc/nginx# ll -s total 80 4 drwxr-xr-x 8 root root 4096 Nov 21 10:05 ./ 4 drwxr-xr-x 115 root root 4096 Nov 15 15:50 ../ 4 -rw-rw-r-- 1 ubuntu ubuntu 3921 Nov 21 08:37 1_comfluter.life_bundle.crt 4 -rw-rw-r-- 1 ubuntu ubuntu 1700 Nov 21 08:37 2_comfluter.</description></item><item><title>重听《成像世界的奇境》</title><link>https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/</guid><description>21.11.22 锁链 香农-奈奎斯特采样定律 测量：测不准原理 高速成像： STEAM：10e-10 second 时间分辨率 STAMP：10e-12 second 最先进：10e-15 second 接近电子转移过程的时长！ information in imaging 香农：硕士论文：信息学开山 做一些无聊的事？还是有自己独特的思考？ yes and no question How many questions (y/n) must you ask to ensure the color of the ball you have?
8 red balls? 4 red &amp;amp; 2 blue &amp;amp; 1 black &amp;amp; 1 white? 2 red &amp;amp; 2 blue &amp;amp; 2 black &amp;amp; 2 white?</description></item><item><title>Hello, World!</title><link>https://comfluter.life/p/hello-world/</link><pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/hello-world/</guid><description>序言 在经历许许多多的学习、配置、折腾之后，终于在今天配置好了自己的个人博客。
在朋友圈、微博盛行的当下，个人博客的风头已过，好像已经是上一个时代的产物了。那么究竟又是什么让我在建站的过程中即使遇到了层层困难，也坚定不移地搭起来这个博客呢？
第一方面，感觉自己还是需要一个记录与对外表达的窗口。朋友圈等等社交网络固然可以，但是于我来讲似乎显得喧闹了些。我期待的表达，不是浮于表面的事件记录与短暂的情感宣泄。静下心来记录自己成长变化、各阶段真实想法与所思所得才是我我之所需。而这些想法，有时又期待能随时随地回顾，或是与志同道合之人分享。因此介于朋友圈、微博等社交平台与传统纸笔日记之间的个人博客似乎是个不错的选择。从半年前看到王凯师兄的博客便觉心动，到现在终于有了属于自己的一方空间。
此外，也是最近在学习计算机网络的相关课程。从之前分不清HTTP、URL、TCP等等名词之间的关系的状态一步步地了解了网络的各个方面，而因为课程设计原因深感实践不足。云服务器的配置、连接、博客的搭建与部署、域名的申请与域名解析配置等等正好为动手实践课程内容提供了一个极佳的机会。在搭建服务器、部署博客的过程中也确实不断地将课本中抽象的知识落到实处。
最后，可能也是最近受龄的影响，觉得自己不能再一天天想着GPA就惶惶不可终日。成天担心对成绩的影响而束手束脚，投入了过多不必要的时间在课业的细枝末节上，生怕漏掉一小点就会有多么大的影响。现在我觉得比较好的态度是：应该投入的时间，我保证投入。除此之外，偶然性是必然有的，考试中等等可能出现的意外情况、偏门的微末之处，实在无必要，也无意义为了它们投入大量的时间。投入了，也不能保证最后的结果。与其如此，正如闫锋老师说的，不如让自己真正做点实在的事出来，在实践中学习，在实践中收获，在主动地做事情的过程当中发挥自己心灵的能动性，让自己过得由己、恣肆、多彩一些。
因此，也希望这个博客在记录我个人所思所想以外，能够带动我走出一天天为了成绩而焦虑的状态之中，真正地敢于放手去做自己喜欢的事，也才真正能做成自己喜欢的事。
建站小记 21.11.05 购买腾讯云服务器、购买域名comfluter.life，熟悉linux服务器操作与hugo工具基本使用 21.11.13 在询问完王凯师兄hugo博客部署方法以后，学习hugo模板使用与博客搭建、github使用、github actions + 云服务器自动部署。但是卡在了最后一步Nginx服务器配置，使得服务器端页面一直显示404。 21.11.15 由于Nginx服务器的问题，以及之前摸索阶段各种误操作，决定直接重置腾讯云服务器，将服务器端的功能重新搭建。完成服务器基本设置后激活root账户并配置ssh登录信息，重写了github pages，安装Nginx，以root账户运行，配置Nginx。 21.11.19 由于使用主题时采用了git submodule的方式，而github同步时不同步submodule导致各种错误，重新使用git clone方式引入了主题，重新搭建了博客与github repo，并配置github actions。 21.11.19 解决github actions css无法加载问题，使用git submodule直接推送到github pages，但发现问题仍然存在。最终确定问题在baseURL上，改好后部署。 21.11.19 写下这篇hello world文档。 动手去做一个项目确实是学习的高效方法。通过搭建博客，至少熟悉了以下内容：
云服务器 Linux命令行 git命令行操作 git submodule github全流程 github pages github actions hugo使用 域名配置与域名解析 防火墙配置 Nginx服务器搭建 其中许多是以前多次觉得应该去做，而没多久又半途而废的。放弃的理由大概是陷入极多的知识内容而毫无方向，也就失去了学习的意义，但为了一个目标去做，许多事情就顺理成章了。
希望以后能以更多项目为依托，让自己不断学习、进步。</description></item></channel></rss>