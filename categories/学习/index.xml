<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>学习 on 知止堂</title><link>https://comfluter.life/categories/%E5%AD%A6%E4%B9%A0/</link><description>Recent content in 学习 on 知止堂</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 25 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://comfluter.life/categories/%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 学习随记</title><link>https://comfluter.life/p/linux-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/linux-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>开启root账户并配置SSH登录 修改root密码 sudo passwd root 修改SSH配置 sudo vi /etc/ssh/sshd_config 找到选项PermitRootLogin，将其前面的#去掉，即可使用SSH登录。若将后面的prohibit-password改为yes则可使用密码登录。 Minutiae 使用taskset命令限定Linux下CPU逻辑核的使用对象及个数 linux下如何查看多核负载情况 LINUX下查看CPU使用率的命令</description></item><item><title>《先秦诸子选读》：道家思想</title><link>https://comfluter.life/p/%E5%85%88%E7%A7%A6%E8%AF%B8%E5%AD%90%E9%80%89%E8%AF%BB%E9%81%93%E5%AE%B6%E6%80%9D%E6%83%B3/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%85%88%E7%A7%A6%E8%AF%B8%E5%AD%90%E9%80%89%E8%AF%BB%E9%81%93%E5%AE%B6%E6%80%9D%E6%83%B3/</guid><description>老子 概述 先秦道家第一部 《老子》文献的真实性： 上世纪20年代，用西方方法考察中国传统文献：有气人，但书可能是后人写的 马王堆汉墓老子帛书抄本 汉文帝时期 证明此时《老子》其书已经盛行 篇目数量差不多 90年代：郭店楚简 其中有《老子》 测年公元前300年，战国中晚期 其中还有较多儒家早期文献 篇目较少，约为传世本1/3，可能为摘抄 此两本出图后，证明《老子》一定成书早于战国晚期。 证实了《老子》应为所有道家文献的原创。 作者到现在还不确定，阅读时不用深究 首创“自然之道”的概念 道 不仅道家讲“道”，其应该为春秋时代出现的思想概念。
“道”字商代便有，但不是重要思想概念，仅为“道路”之意。“道”在春秋时成为思想概念内涵。从《论语》中可以得到印证。
含义变化原因：政治变化。以氏族为本位的政治构架在衰弱。以祭祀为本，为期中心概念（西周时）。后来西周衰落，天命观念受到怀疑，上天包庇某一氏族的理念在弱化。孔子时政治基本不讲“天命”，个人也可以讲“天命”。政治的合理性在哪？当时的思想家在寻找新的理解。这个背景下，“道”的观念得以提出。政治的合法性来源：神授&amp;ndash;&amp;gt;往圣先贤的做法，体现出人本主义。
《国语》周语下：吾非瞽史，焉知天道？
只有知道历史，才知道天道。（史官当时也管天道）此处天道：星象变化的大致规则，引申为自然变化的规则。
中国的士大夫文化：
对中国文化发展影响最深。 非宗教的：思想主流为人文主义的：道德规则、历史传承、品信修养，而非不可知的神意。 道为非常重要的概念。 道为其他概念的中心：仁义礼智等等
自然之道：一种特别的道 《老子》二十五章：人法地，地法天，天法道，道法自然 “道可道非常道”
自然之道的含义 自然：名词？ &amp;mdash;&amp;gt; 天地万物的规则
自然是动词！ 意为“自己这样”，万物自己演化的规律。
人应当效法自然：不是效法自然的规律，而是效法自己如此的状态。
第七章：天长地久。天地所以能长且久者，以其不自生，故能长生。是以圣人后其身而身先，外其身而身存。非以其无私耶？故能成其私。(后其身 一作：退其身)
天地长久，不自生：天地不是单一的生命，以万物的生命来体现自己的生命。万物演变恒久不息，天也恒久存在。
是以圣人后其身而身先，外其身而身存： 老子对后代人物的政治谋略影响较大，怎么在政治上立于不败之地。看上去是哲理，但用起来是技巧。
四十章：反者道之动；弱者道之用。天下万物生于有，有生于无。 老子要否认所有提升到“规则”层面的内容。
二章：天下皆知美之为美，斯恶已。皆知善之为善，斯不善已。故有无相生，难易相成，长短相形，高下相倾，音声相和，前后相随，恒也。是以圣人处无为之事，行不言之教，万物作焉而不辞，生而不有，为而不恃，功成而弗居。夫唯弗居，是以不去。(万物作焉而不辞 一作：万物作焉而不为始)</description></item><item><title>OpenCV with Python</title><link>https://comfluter.life/p/opencv-with-python/</link><pubDate>Tue, 23 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/opencv-with-python/</guid><description>安装OpenCV Python中使用pip安装时的命令为pip install opencv-python
(.venv) PS D:\Work\04 Research Project\21.08.19 Early Visual Processing\pyspice&amp;gt; pip install opencv-python Collecting opencv-python Downloading opencv_python-4.5.4.60-cp39-cp39-win_amd64.whl (35.1 MB) |████████████████████████████████| 35.1 MB 1.3 MB/s Requirement already satisfied: numpy&amp;gt;=1.19.3 in c:\programming\python\lib\site-packages (from opencv-python) (1.21.2) Installing collected packages: opencv-python Successfully installed opencv-python-4.5.4.60 导入时使用语句import cv2 as cv
图像读取、显示与保存 import cv2 as cv imagePath = &amp;#34;D:\\Work\\04 Research Project\\21.08.19 Early Visual Processing\\pyspice\\assets\\img\\test.jpg&amp;#34; img = cv.imread(imagePath) # 读取图像 print(img) # 命令行打印图像像素信息 cv.imshow(&amp;#34;Display window&amp;#34;, img) # 调用窗口显示图像 k = cv.</description></item><item><title>Numpy 学习随记</title><link>https://comfluter.life/p/numpy-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/numpy-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>数组切片 import numpy as np a = np.array([[11, 12, 13], [21, 22, 23]], [31, 32, 33]) 注意Numpy中元素编号从0开始，左侧包含右侧不包含
取单个元素x = a[1, 2]，对应第0维的第1个元素4 切片x = a[0:2, 1:3]，对应第0维的第0~1个元素，第1维的第1~2个元素[[12 13], [22 23]] 切片x = a[:2, 2:]，对应对应第0维的最开始到第2（2-1）个元素，第1维的第2个及以后的所有元素[[13], [23]] 判断一个数组是否存在于另一个大数组内 直接使用==会逐数字判断元素是否存在：
import numpy as np a = np.array([[1, 2, 3], [2, 3, 4]]) print(a == np.array([1, 2, 3])) 可以改为(a == np.array([1, 2, 3])).all(1).any()。y == z会将y的每一行与z的每个元素进行比较。 使用all(axis=1)可以获取所有元素匹配的行，并使用any()找出是否匹配。
import numpy as np a = np.array([[1, 2, 3], [2, 3, 4]]) print(a == np.</description></item><item><title>PlantUML 学习随记</title><link>https://comfluter.life/p/plantuml-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/plantuml-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>PlantUML with VsCode Install PlantUML extension for vscode. following extension follow me document: install java JRE install Graphviz download the latest plantuml.jar specify the jar location with the extension setting plantuml.jar specify the GraphViz installation by defining the Windows environment variable GRAPHVIZ_DOT, e.g., c:\program files\graphviz\bin\dot.exe</description></item><item><title>Python 学习随记</title><link>https://comfluter.life/p/python-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/python-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>Python Module Python Module 导入方法 import &amp;lt;module name&amp;gt;调用这个方法导入的module中的函数时，需要&amp;lt;module name&amp;gt;.&amp;lt;function name&amp;gt;格式进行使用 from &amp;lt;module name&amp;gt; import &amp;lt;sth&amp;gt;从某个模块中引入某些特殊函数等引入现在所在的全局命名空间中，直接使用&amp;lt;sth&amp;gt;就可以进行使用。这里引入的可以是一个子包，也可以是子包中的任意对象。 from &amp;lt;module name&amp;gt; import *将模块中所有对象引入，直接使用原模块中的名称即可使用 搜索路径 导入一个模块时，Python 解析器对模块位置的搜索顺序是：
当前目录 如果不在当前目录，Python 则搜索在 shell 变量 PYTHONPATH 下的每个目录。 如果都找不到，Python会察看默认路径。UNIX下，默认路径一般为/usr/local/lib/python/。 模块搜索路径存储在 system 模块的 sys.path 变量中。变量里包含当前目录，PYTHONPATH和由安装过程决定的默认目录。 命名空间和作用域 变量：名字与匹配对象的对应 命名空间：记录了所有名字-对象对应关系的字典 python表达式可以访问全局/局部命名空间，重名时局部命名空间优先。 使用global语句可以告诉python变量属于全局变量。ex.global x
导入本地自定义包 文件结构
main.py package |--__init__.py |--module1.py |--module2.py 包是一个分层次的文件目录结构，它定义了一个由模块及子包，和子包下的子包等组成的 Python 的应用环境。
简单来说，包就是文件夹，但该文件夹下必须存在__init__.py 文件, 该文件的内容可以为空。__init__.py 用于标识当前文件夹是一个包。
假设module1.py中有函数func1()，则在main函数中可以使用以下集中方式进行包导入：
import mymodule.module1此时对应func1()的调用为mymodule.module1.func1()，前缀较长，比较繁琐。 import mymodule.module1 as m1此时对应func1()的调用为m1.func1() from mymodule import module1此时对应func1()的调用为module1.</description></item><item><title>重听《成像世界的奇境》</title><link>https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/</guid><description>21.11.22 锁链 香农-奈奎斯特采样定律 测量：测不准原理 高速成像： STEAM：10e-10 second 时间分辨率 STAMP：10e-12 second 最先进：10e-15 second 接近电子转移过程的时长！ information in imaging 香农：硕士论文：信息学开山 做一些无聊的事？还是有自己独特的思考？ yes and no question How many questions (y/n) must you ask to ensure the color of the ball you have?
8 red balls? 4 red &amp;amp; 2 blue &amp;amp; 1 black &amp;amp; 1 white? 2 red &amp;amp; 2 blue &amp;amp; 2 black &amp;amp; 2 white?</description></item></channel></rss>