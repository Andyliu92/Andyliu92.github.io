<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>verilog on 知止堂</title><link>https://comfluter.life/tags/verilog/</link><description>Recent content in verilog on 知止堂</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 24 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://comfluter.life/tags/verilog/index.xml" rel="self" type="application/rss+xml"/><item><title>Verilog with vscode</title><link>https://comfluter.life/p/verilog-with-vscode/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/verilog-with-vscode/</guid><description>linting using vscode extension Verilog-HDL/SystemVerilog/Bluespec SystemVerilog.
using iverilog
go to extension settings and set verilog &amp;gt; linting : linter = iverilog
then the linting function should work for verilog files.
Notice:
the dir to verilog file should not contain chinese characters and spaces. if you imported module from other file without ``includecommand, iverilog willl report an error. As it is always the case when using vivado, add-ito extention settingVerilog › Linting › Iverilog: Arguments` to ignore this error.</description></item><item><title>Vivado 学习随记</title><link>https://comfluter.life/p/vivado-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/vivado-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>Multi-module Project Just write two verilog files and instantiate a module specified in the other file, the vivado will figure out the dependencies automatically.</description></item></channel></rss>