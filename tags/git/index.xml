<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on 知止堂</title><link>https://comfluter.life/tags/git/</link><description>Recent content in git on 知止堂</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 07 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://comfluter.life/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>利用Git Hook实现服务器端文件提交大小限制</title><link>https://comfluter.life/p/%E5%88%A9%E7%94%A8git-hook%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%96%87%E4%BB%B6%E6%8F%90%E4%BA%A4%E5%A4%A7%E5%B0%8F%E9%99%90%E5%88%B6/</link><pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%88%A9%E7%94%A8git-hook%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%96%87%E4%BB%B6%E6%8F%90%E4%BA%A4%E5%A4%A7%E5%B0%8F%E9%99%90%E5%88%B6/</guid><description>利用git hooks，在服务器端每次接收到push的时候进行文件信息检查，若超过限制则拒绝提交。
具体实现：在update hook中对提交的文件进行检查，利用git log命令查询所有新提交的分支，利用git cat-file 命令递归查询文件树、查询文件大小，若超限则返回1拒绝提交。
#!/bin/bash # # An example hook script to block unannotated tags from entering. # Called by &amp;#34;git receive-pack&amp;#34; with arguments: refname sha1-old sha1-new # # To enable this hook, rename this file to &amp;#34;update&amp;#34;. # # Config # ------ # hooks.allowunannotated # This boolean sets whether unannotated tags will be allowed into the # repository. By default they won&amp;#39;t be. # hooks.allowdeletetag # This boolean sets whether deleting tags will be allowed in the # repository.</description></item><item><title>Git Notes</title><link>https://comfluter.life/p/git-notes/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/git-notes/</guid><description>Delete branchs local: git branch -d &amp;lt;localBranchName&amp;gt; remote: git push origin --delete &amp;lt;remoteBranchName&amp;gt;</description></item><item><title>Git large file versioning</title><link>https://comfluter.life/p/git-large-file-versioning/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/git-large-file-versioning/</guid><description>Download git-lfs on https://git-lfs.github.com/, and run the installation package for windows. Once downloaded and installed, set up Git LFS for your user account by running:git lfs install. You only need to run this once per user account. In each Git repository where you want to use Git LFS, select the file types you&amp;rsquo;d like Git LFS to manage (or directly edit your .gitattributes). You can configure additional file extensions at anytime.</description></item></channel></rss>