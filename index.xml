<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>知止堂</title><link>https://comfluter.life/</link><description>Recent content on 知止堂</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 31 Dec 9999 00:00:00 +0000</lastBuildDate><atom:link href="https://comfluter.life/index.xml" rel="self" type="application/rss+xml"/><item><title>Hello, World!</title><link>https://comfluter.life/p/hello-world/</link><pubDate>Fri, 31 Dec 9999 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/hello-world/</guid><description>&lt;img src="https://comfluter.life/p/hello-world/cover.jpg" alt="Featured image of post Hello, World!" />&lt;h2 id="序言">序言&lt;/h2>
&lt;p>在经历许许多多的学习、配置、折腾之后，终于在今天配置好了自己的个人博客。&lt;/p>
&lt;p>在朋友圈、微博盛行的当下，个人博客的风头已过，好像已经是上一个时代的产物了。那么究竟又是什么让我在建站的过程中即使遇到了层层困难，也坚定不移地搭起来这个博客呢？&lt;/p>
&lt;p>第一方面，感觉自己还是需要一个记录与对外表达的窗口。朋友圈等等社交网络固然可以，但是于我来讲似乎显得喧闹了些。我期待的表达，不是浮于表面的事件记录与短暂的情感宣泄。静下心来记录自己成长变化、各阶段真实想法与所思所得才是我我之所需。而这些想法，有时又期待能随时随地回顾，或是与志同道合之人分享。因此介于朋友圈、微博等社交平台与传统纸笔日记之间的个人博客似乎是个不错的选择。从半年前看到王凯师兄的博客便觉心动，到现在终于有了属于自己的一方空间。&lt;/p>
&lt;p>此外，也是最近在学习计算机网络的相关课程。从之前分不清HTTP、URL、TCP等等名词之间的关系的状态一步步地了解了网络的各个方面，而因为课程设计原因深感实践不足。云服务器的配置、连接、博客的搭建与部署、域名的申请与域名解析配置等等正好为动手实践课程内容提供了一个极佳的机会。在搭建服务器、部署博客的过程中也确实不断地将课本中抽象的知识落到实处。&lt;/p>
&lt;p>最后，可能也是最近受龄的影响，觉得自己不能再一天天想着GPA就惶惶不可终日。成天担心对成绩的影响而束手束脚，投入了过多不必要的时间在课业的细枝末节上，生怕漏掉一小点就会有多么大的影响。现在我觉得比较好的态度是：应该投入的时间，我保证投入。除此之外，偶然性是必然有的，考试中等等可能出现的意外情况、偏门的微末之处，实在无必要，也无意义为了它们投入大量的时间。投入了，也不能保证最后的结果。与其如此，正如闫锋老师说的，不如让自己真正做点实在的事出来，在实践中学习，在实践中收获，在主动地做事情的过程当中发挥自己心灵的能动性，让自己过得由己、恣肆、多彩一些。&lt;/p>
&lt;p>因此，也希望这个博客在记录我个人所思所想以外，能够带动我走出一天天为了成绩而焦虑的状态之中，真正地敢于放手去做自己喜欢的事，也才真正能做成自己喜欢的事。&lt;/p>
&lt;h2 id="建站小记">建站小记&lt;/h2>
&lt;ul>
&lt;li>21.11.05 购买腾讯云服务器、购买域名&lt;code>comfluter.life&lt;/code>，熟悉linux服务器操作与hugo工具基本使用&lt;/li>
&lt;li>21.11.13 在询问完王凯师兄hugo博客部署方法以后，学习hugo模板使用与博客搭建、github使用、github actions + 云服务器自动部署。但是卡在了最后一步Nginx服务器配置，使得服务器端页面一直显示404。&lt;/li>
&lt;li>21.11.15 由于Nginx服务器的问题，以及之前摸索阶段各种误操作，决定直接重置腾讯云服务器，将服务器端的功能重新搭建。完成服务器基本设置后激活root账户并配置ssh登录信息，重写了github pages，安装Nginx，以root账户运行，配置Nginx。&lt;/li>
&lt;li>21.11.19 由于使用主题时采用了&lt;code>git submodule&lt;/code>的方式，而github同步时不同步submodule导致各种错误，重新使用&lt;code>git clone&lt;/code>方式引入了主题，重新搭建了博客与github repo，并配置github actions。&lt;/li>
&lt;li>21.11.19 解决github actions css无法加载问题，使用&lt;code>git submodule&lt;/code>直接推送到github pages，但发现问题仍然存在。最终确定问题在baseURL上，改好后部署。&lt;/li>
&lt;li>21.11.19 写下这篇hello world文档。&lt;/li>
&lt;/ul>
&lt;p>动手去做一个项目确实是学习的高效方法。通过搭建博客，至少熟悉了以下内容：&lt;/p>
&lt;ol>
&lt;li>云服务器&lt;/li>
&lt;li>Linux命令行&lt;/li>
&lt;li>git命令行操作&lt;/li>
&lt;li>git submodule&lt;/li>
&lt;li>github全流程&lt;/li>
&lt;li>github pages&lt;/li>
&lt;li>github actions&lt;/li>
&lt;li>hugo使用&lt;/li>
&lt;li>域名配置与域名解析&lt;/li>
&lt;li>防火墙配置&lt;/li>
&lt;li>Nginx服务器搭建&lt;/li>
&lt;/ol>
&lt;p>其中许多是以前多次觉得应该去做，而没多久又半途而废的。放弃的理由大概是陷入极多的知识内容而毫无方向，也就失去了学习的意义，但为了一个目标去做，许多事情就顺理成章了。&lt;/p>
&lt;p>希望以后能以更多项目为依托，让自己不断学习、进步。&lt;/p></description></item><item><title>《大学》摘录</title><link>https://comfluter.life/p/%E5%A4%A7%E5%AD%A6%E6%91%98%E5%BD%95/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%A4%A7%E5%AD%A6%E6%91%98%E5%BD%95/</guid><description>&lt;p>大学之道，在明明德，在亲民，在止于至善。知止而后能定，定而后能静，静而后能安，安而后能虑，虑而后能得。物有本末，事有始终，知所先后，则近道矣。古之欲明明德于天下者，先治其国；与治其国者，先齐其家；欲齐其家者，先修其身；欲修其身者，先正其心；欲正其心者，先诚其意；欲诚其意者，先致其知；致知在格物。物格而后知至，知至而后意诚，意诚而后心正，心正而后身修，身修而后家齐，家齐而后国治，国治而后天下平。自天子以至于庶人，壹是皆以修身为本。其本乱而末治者，否矣。其所厚者薄，而其所薄者厚，未之有也。此谓知本，此谓知之至也。&lt;/p>
&lt;p>康诰曰：“克明德”。&amp;hellip;帝典曰：“克明俊德”&amp;hellip;&lt;/p>
&lt;p>汤之盤铭曰：“苟日新，日日新，又日新。”康诰曰：“作新民。”诗曰：“周虽旧邦，其命惟新。”是故君子无所不用其极。&lt;/p>
&lt;p>君子贤其贤而亲其亲，小人乐其乐而利其利，此以没世不忘也。&lt;/p>
&lt;p>所谓诚其意者，毋自欺也。如恶恶臭，如好好色，此之谓自谦，故君子必慎其独也！小人闲居为不善，无所不至，见君子而后厌然，掩其不善，而著其善。人之视己，如见其肺肝然，则何益矣。此谓诚于中，形于外，故君子必慎其独也。曾子曰：“十目所视，十手所指，其严乎！”富润屋，德润身，心广体胖，故君子必诚其意。&lt;/p>
&lt;p>《康诰》曰：“如保赤子。”心诚求之，虽不中，不远矣。&amp;hellip;是故君子有诸己而后求诸人，无诸己而后非诸人。&lt;/p>
&lt;p>《诗》云：“乐只君子，民之父母。”民之所好好之，民之所恶恶之，此之谓民之父母。&lt;/p>
&lt;p>德者本也，财者末也。&lt;/p>
&lt;p>是故君子有大道，必忠信以得之，骄泰以失之。&lt;/p></description></item><item><title>《子思子》摘录</title><link>https://comfluter.life/p/%E5%AD%90%E6%80%9D%E5%AD%90%E6%91%98%E5%BD%95/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%AD%90%E6%80%9D%E5%AD%90%E6%91%98%E5%BD%95/</guid><description>&lt;h2 id="中庸">《中庸》&lt;/h2>
&lt;p>天命谓之性，率性谓之道，修道谓之教。道也者，不可须臾而离也，可离非道也。道也者，不可须臾离也，可离非道也。是故君子戒慎乎其所不睹，恐惧乎其所不闻。莫现乎隐，莫显乎微，故君子慎其独也。喜怒哀乐之未发，谓之中；发而皆中节，谓之和。中也者，天下之大本也；和也者，天下之达道也。致中和，天地位焉，万物育焉。&lt;/p>
&lt;p>仲尼曰：“君子中庸，小人反中庸。”君子之中庸也，君子而时中；小人之中庸也，小人而无忌惮也。&lt;/p>
&lt;p>子曰：“舜其大知也与！舜好问而好察迩言，隐恶而扬善，执其两端，用其中于民，其斯以为舜乎！”&lt;/p>
&lt;p>子曰：“天下国家可均也，爵禄可以辞也，白刃可以蹈也，中庸不可能也。”&lt;/p>
&lt;p>子路问强。子曰：“&amp;hellip;故君子和而不流，强哉矫！中立而不倚，强哉矫！国有道，不变塞焉，强哉矫！国无道，至死不变，强哉矫！”&lt;/p>
&lt;p>子曰：“素隐行怪，后世有述焉，吾弗为之矣。君子遵道而行，半途而废，吾弗能已矣。君子依乎中庸，遁世不见知而不悔，唯圣者能之。”&lt;/p>
&lt;p>君子之道费而隐&amp;hellip;天地之大也，人尤有所憾。故君子语大，天下莫能载焉；语小，天下莫能破焉。诗云：“鸢飞戾天，鱼跃于渊。”其言上下察也。君子之道，造端乎夫妇，及其至也，察乎天地。&lt;/p>
&lt;p>子曰：“道不远人。人之为道而远人，不可以为道。”诗云：“伐柯伐柯，其则不远。”执柯以伐柯，睨而视之，犹以为远。故君子治人以人，改而止。&lt;/p>
&lt;p>庸德之行，庸言之谨，有所不足，不敢不勉，有余不敢尽，言顾行，行顾言，君子乎不慥慥尔！&lt;/p>
&lt;p>君子素位而行，不愿乎其外。素富贵，行乎富贵；素贫贱，行乎贫贱；素夷狄，行乎夷狄；素患难，行乎患难，君子无入而不自得焉。在上位不陵下，在下位不援上，正己而不求于人则无怨。上不怨天，下不尤人。故君子居易以俟命，小人行险以侥幸。子曰：“射有似乎君子，失诸正鹄，反求诸其身。”&lt;/p>
&lt;p>君子之道，譬如行远必自迩，譬如登高必自卑。&lt;/p></description></item><item><title>1 Introduction to Programming Languages and Tools of the Trade</title><link>https://comfluter.life/p/1-introduction-to-programming-languages-and-tools-of-the-trade/</link><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/1-introduction-to-programming-languages-and-tools-of-the-trade/</guid><description>&lt;h2 id="vscode-extensions-for-web-development">Vscode extensions for web development&lt;/h2>
&lt;ul>
&lt;li>ESLint
&lt;ul>
&lt;li>Integrates ESLint JavaScript into VS Code.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Prettier
&lt;ul>
&lt;li>JS code formatter&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>JavaScript (ES6) code snippets&lt;/li>
&lt;/ul>
&lt;h2 id="tools">Tools&lt;/h2>
&lt;ul>
&lt;li>Node.JS
&lt;ul>
&lt;li>(NodeJS安装-菜鸟教程)[https://www.runoob.com/nodejs/nodejs-install-setup.html]&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>2 Introduction to GitHub</title><link>https://comfluter.life/p/2-introduction-to-github/</link><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/2-introduction-to-github/</guid><description>&lt;h2 id="基本命令">基本命令&lt;/h2>
&lt;ul>
&lt;li>创建虚拟环境：&lt;code>conda create -n &amp;lt;env_name&amp;gt; python=X.X&lt;/code>&lt;/li>
&lt;li>激活虚拟环境：&lt;code>conda activate &amp;lt;env_name&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="minutiae">Minutiae&lt;/h2>
&lt;ul>
&lt;li>unable auto activate base: &lt;code>conda config --set auto_activate_base false&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Anaconda使用随记</title><link>https://comfluter.life/p/anaconda%E4%BD%BF%E7%94%A8%E9%9A%8F%E8%AE%B0/</link><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/anaconda%E4%BD%BF%E7%94%A8%E9%9A%8F%E8%AE%B0/</guid><description>&lt;h2 id="基本命令">基本命令&lt;/h2>
&lt;ul>
&lt;li>创建虚拟环境：&lt;code>conda create -n &amp;lt;env_name&amp;gt; python=X.X&lt;/code>&lt;/li>
&lt;li>激活虚拟环境：&lt;code>conda activate &amp;lt;env_name&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="minutiae">Minutiae&lt;/h2>
&lt;ul>
&lt;li>unable auto activate base: &lt;code>conda config --set auto_activate_base false&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Nginx 服务器配置子域名</title><link>https://comfluter.life/p/nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%AD%90%E5%9F%9F%E5%90%8D/</link><pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%AD%90%E5%9F%9F%E5%90%8D/</guid><description>&lt;h2 id="添加域名解析">添加域名解析&lt;/h2>
&lt;p>到腾讯云服务器控制台，添加需要解析的子域名，如下图。图中第一个参数“主机记录”即为子域名名称。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 1588;
flex-basis: 3812px"
>
&lt;a href="https://comfluter.life/p/nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%AD%90%E5%9F%9F%E5%90%8D/1.png" data-size="2256x142">
&lt;img src="https://comfluter.life/p/nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%AD%90%E5%9F%9F%E5%90%8D/1.png"
width="2256"
height="142"
srcset="https://comfluter.life/p/nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%AD%90%E5%9F%9F%E5%90%8D/1_hu19760e8d2679b02dd8767514ef769dc3_17088_480x0_resize_box_3.png 480w, https://comfluter.life/p/nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%AD%90%E5%9F%9F%E5%90%8D/1_hu19760e8d2679b02dd8767514ef769dc3_17088_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h2 id="配置nginx">配置Nginx&lt;/h2>
&lt;pre tabindex="0">&lt;code>server {
# 端口设置
listen 80;
# 二级域名设置
server_name ling.comfluter.life;
# 301重定向设置
return 301 http://47.102.150.182/;
}
&lt;/code>&lt;/pre>&lt;p>增加一项二级域名设置即可。&lt;/p></description></item><item><title>树莓派配置NAS</title><link>https://comfluter.life/p/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AEnas/</link><pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AEnas/</guid><description>&lt;h2 id="挂载ntfs格式磁盘">挂载NTFS格式磁盘&lt;/h2>
&lt;p>貌似树莓派OS能够自动挂载NTFS磁盘到&lt;code>/media/pi&lt;/code>下。不用额外操作。&lt;/p>
&lt;h2 id="使用samba协议提供校园网内文件服务">使用SAMBA协议提供校园网内文件服务&lt;/h2>
&lt;h3 id="安装samba">安装SAMBA&lt;/h3>
&lt;p>安装SAMBA：&lt;code>sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y samba&lt;/code>&lt;/p>
&lt;p>查看SAMBA版本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">root@raspberrypi:/media/pi/4T存储# samba --version
Version 4.13.13-Debian
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>参观华为南京研究所</title><link>https://comfluter.life/p/%E5%8F%82%E8%A7%82%E5%8D%8E%E4%B8%BA%E5%8D%97%E4%BA%AC%E7%A0%94%E7%A9%B6%E6%89%80/</link><pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%8F%82%E8%A7%82%E5%8D%8E%E4%B8%BA%E5%8D%97%E4%BA%AC%E7%A0%94%E7%A9%B6%E6%89%80/</guid><description>&lt;p>今天，借着网络课提供的机会，有幸走进华为南研所，切身感受企业研究部门的气氛，也看看自己在课上的所学是如何落到实处的。&lt;/p>
&lt;p>企业气氛确实是今天感觉到比较奇特的一个方面。随处可见使人奋进、催人奋斗的标语。除此以外，园区里还有许多战斗标语，例如“没有退路就是胜利之路”，美国的打压看起来也确实落到了实处。&lt;/p></description></item><item><title>Including Verilog Code Block in Latex</title><link>https://comfluter.life/p/including-verilog-code-block-in-latex/</link><pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/including-verilog-code-block-in-latex/</guid><description>&lt;ol>
&lt;li>
&lt;p>include packages for code block and coloring&lt;/p>
&lt;ol>
&lt;li>&lt;code>\usepackage{listings}&lt;/code>&lt;/li>
&lt;li>&lt;code>\usepackage{xcolor}&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>insert following codes for defining verilog code coloring tactic. It should be inserted at the head field of the latex file (before &lt;code>\begin{document}&lt;/code>).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-latex" data-lang="latex">&lt;span class="c">% for verilog code coloring
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\definecolor&lt;/span>&lt;span class="nb">{&lt;/span>vgreen&lt;span class="nb">}{&lt;/span>RGB&lt;span class="nb">}{&lt;/span>104,180,104&lt;span class="nb">}&lt;/span>
&lt;span class="k">\definecolor&lt;/span>&lt;span class="nb">{&lt;/span>vblue&lt;span class="nb">}{&lt;/span>RGB&lt;span class="nb">}{&lt;/span>49,49,255&lt;span class="nb">}&lt;/span>
&lt;span class="k">\definecolor&lt;/span>&lt;span class="nb">{&lt;/span>vorange&lt;span class="nb">}{&lt;/span>RGB&lt;span class="nb">}{&lt;/span>255,143,102&lt;span class="nb">}&lt;/span>
&lt;span class="k">\lstdefinestyle&lt;/span>&lt;span class="nb">{&lt;/span>verilog-style&lt;span class="nb">}&lt;/span>
&lt;span class="nb">{&lt;/span>
language=Verilog,
basicstyle=&lt;span class="k">\small\ttfamily&lt;/span>,
keywordstyle=&lt;span class="k">\color&lt;/span>&lt;span class="nb">{&lt;/span>vblue&lt;span class="nb">}&lt;/span>,
identifierstyle=&lt;span class="k">\color&lt;/span>&lt;span class="nb">{&lt;/span>black&lt;span class="nb">}&lt;/span>,
commentstyle=&lt;span class="k">\color&lt;/span>&lt;span class="nb">{&lt;/span>vgreen&lt;span class="nb">}&lt;/span>,
numbers=left,
numberstyle=&lt;span class="k">\tiny\color&lt;/span>&lt;span class="nb">{&lt;/span>black&lt;span class="nb">}&lt;/span>,
numbersep=10pt,
tabsize=8,
moredelim=*[s][&lt;span class="k">\colorIndex&lt;/span>]&lt;span class="nb">{&lt;/span>[&lt;span class="nb">}{&lt;/span>]&lt;span class="nb">}&lt;/span>,
literate=*&lt;span class="nb">{&lt;/span>:&lt;span class="nb">}{&lt;/span>:&lt;span class="nb">}&lt;/span>1
&lt;span class="nb">}&lt;/span>
&lt;span class="k">\makeatletter&lt;/span>
&lt;span class="k">\newcommand*\@&lt;/span>lbracket&lt;span class="nb">{&lt;/span>[&lt;span class="nb">}&lt;/span>
&lt;span class="k">\newcommand*\@&lt;/span>rbracket&lt;span class="nb">{&lt;/span>]&lt;span class="nb">}&lt;/span>
&lt;span class="k">\newcommand*\@&lt;/span>colon&lt;span class="nb">{&lt;/span>:&lt;span class="nb">}&lt;/span>
&lt;span class="k">\newcommand*\colorIndex&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="c">%
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\edef\@&lt;/span>temp&lt;span class="nb">{&lt;/span>&lt;span class="k">\the\lst&lt;/span>@token&lt;span class="nb">}&lt;/span>&lt;span class="c">%
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\ifx\@&lt;/span>temp&lt;span class="k">\@&lt;/span>lbracket &lt;span class="k">\color&lt;/span>&lt;span class="nb">{&lt;/span>black&lt;span class="nb">}&lt;/span>&lt;span class="c">%
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\else\ifx\@&lt;/span>temp&lt;span class="k">\@&lt;/span>rbracket &lt;span class="k">\color&lt;/span>&lt;span class="nb">{&lt;/span>black&lt;span class="nb">}&lt;/span>&lt;span class="c">%
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\else\ifx\@&lt;/span>temp&lt;span class="k">\@&lt;/span>colon &lt;span class="k">\color&lt;/span>&lt;span class="nb">{&lt;/span>black&lt;span class="nb">}&lt;/span>&lt;span class="c">%
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\else&lt;/span> &lt;span class="k">\color&lt;/span>&lt;span class="nb">{&lt;/span>vorange&lt;span class="nb">}&lt;/span>&lt;span class="c">%
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\fi\fi\fi&lt;/span>
&lt;span class="nb">}&lt;/span>
&lt;span class="k">\makeatother&lt;/span>
&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>trace&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Insert your verilog code block using following codes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-latex" data-lang="latex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>lstlisting&lt;span class="nb">}&lt;/span>[style=&lt;span class="nb">{&lt;/span>verilog-style&lt;span class="nb">}&lt;/span>]
&amp;lt;your code&amp;gt;
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>lstlisting&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Pyspice 学习随记</title><link>https://comfluter.life/p/pyspice-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/pyspice-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/88583481" target="_blank" rel="noopener"
>PySpice: 使用ngspice进行电路仿真分析-1：安装&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/88631728" target="_blank" rel="noopener"
>PySpice: 使用ngspice进行电路仿真分析-2：ngspice简要介绍-输入文件格式1&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Linux 学习随记</title><link>https://comfluter.life/p/linux-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/linux-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>&lt;h2 id="开启root账户并配置ssh登录">开启root账户并配置SSH登录&lt;/h2>
&lt;ol>
&lt;li>修改root密码 &lt;code>sudo passwd root&lt;/code>&lt;/li>
&lt;li>修改SSH配置 &lt;code>sudo vi /etc/ssh/sshd_config&lt;/code>&lt;/li>
&lt;li>找到选项&lt;code>PermitRootLogin&lt;/code>，将其前面的&lt;code>#&lt;/code>去掉，即可使用SSH登录。若将后面的&lt;code>prohibit-password&lt;/code>改为&lt;code>yes&lt;/code>则可使用密码登录。&lt;/li>
&lt;li>如果不选择密码登录，还需要通过其他账户登录，将&lt;code>authorized_keys&lt;/code>复制到root账户的.ssh文件夹&lt;code>/root/.ssh&lt;/code>下&lt;/li>
&lt;/ol>
&lt;h2 id="minutiae">Minutiae&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://blog.csdn.net/qq_36829091/article/details/82053322" target="_blank" rel="noopener"
>使用taskset命令限定Linux下CPU逻辑核的使用对象及个数&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.cnblogs.com/the-tops/p/7840494.html#:~:text=Linux%E4%B8%8B%EF%BC%8C%E5%A6%82%E4%BD%95%E7%9C%8B%E6%AF%8F%E4%B8%AACPU%E7%9A%84%E4%BD%BF%E7%94%A8%E7%8E%87%EF%BC%9A%20%23top%20-d,1%20%EF%BC%88%E6%AD%A4%E6%97%B6%E4%BC%9A%E6%98%BE%E7%A4%BA%E4%BB%A51s%E7%9A%84%E9%A2%91%E7%8E%87%E5%88%B7%E6%96%B0%E7%B3%BB%E7%BB%9F%E8%B4%9F%E8%BD%BD%E6%98%BE%E7%A4%BA%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E6%80%BB%E7%9A%84CPU%E7%9A%84%E8%B4%9F%E8%BD%BD%E6%83%85%E5%86%B5%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%8D%A0CPU%E6%9C%80%E9%AB%98%E7%9A%84%E8%BF%9B%E7%A8%8Bid%EF%BC%8C%E8%BF%9B%E7%A8%8B%E5%90%8D%E5%AD%97%E7%AD%89%E4%BF%A1%E6%81%AF%EF%BC%89%20%EF%BC%88%E5%88%87%E6%8D%A2%E6%8C%89%E4%B8%8B%E6%95%B0%E5%AD%971%EF%BC%8C%E5%88%99%E5%8F%AF%E4%BB%A5%E5%9C%A8%E6%98%BE%E7%A4%BA%E5%A4%9A%E4%B8%AACPU%E5%92%8C%E6%80%BBCPU%E4%B8%AD%E5%88%87%E6%8D%A2%EF%BC%89" target="_blank" rel="noopener"
>linux下如何查看多核负载情况&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://cloud.tencent.com/developer/article/1457617" target="_blank" rel="noopener"
>LINUX下查看CPU使用率的命令&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>博客评论功能搭建</title><link>https://comfluter.life/p/%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E6%90%AD%E5%BB%BA/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E6%90%AD%E5%BB%BA/</guid><description>&lt;p>在王凯师兄的推荐下，使用gitalk搭建博客评论功能。&lt;/p>
&lt;h2 id="github上申请oauth-application">Github上申请OAuth application&lt;/h2>
&lt;ol>
&lt;li>登录github&lt;/li>
&lt;li>在&lt;code>Settings&lt;/code>页面选择&lt;code>Developer settings&lt;/code>选项。&lt;/li>
&lt;li>在&lt;code>Developer settings&lt;/code>选择&lt;code>OAuth Apps&lt;/code>,然后会在页面右边有一个&lt;code>New OAuth App&lt;/code>按钮，点击这个按钮就进入到新建&lt;code>OAuth application&lt;/code>页面&lt;/li>
&lt;li>填写新建&lt;code>OAuth application&lt;/code>相关信息：
&lt;ol>
&lt;li>&lt;code>Application name&lt;/code>：新建应用的名称&lt;/li>
&lt;li>&lt;code>Homepage URL&lt;/code>：The full URL to your application homepage. eg.&lt;code>https://comfluter.life/&lt;/code>&lt;/li>
&lt;li>&lt;code>Application description&lt;/code>：对新建应用的描述&lt;/li>
&lt;li>&lt;code>Authorization callback URL&lt;/code>：回调链接，与&lt;code>Homepage URL&lt;/code>保持一致即可。&lt;/li>
&lt;li>注：这些参数可以在以后修改&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>点击注册应用，就可以看到&lt;code>Client ID&lt;/code>，可以新建一个&lt;code>Client Secret&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="hugo-配置">Hugo 配置&lt;/h2>
&lt;p>使用&lt;code>stack&lt;/code>主题，在配置文件&lt;code>config.yaml&lt;/code>中已经预留了相关字段。&lt;/p>
&lt;ol>
&lt;li>复制填写刚生成的&lt;code>Client ID&lt;/code>，&lt;code>Client Secret&lt;/code>。&lt;/li>
&lt;li>&lt;code>repo&lt;/code>: 类型：字符串，必填，github上的仓库名字，用于存放Gitalk评论&lt;/li>
&lt;li>&lt;code>owner&lt;/code>: 类型：字符串，必填，github仓库的所有者的名字&lt;/li>
&lt;li>&lt;code>admin&lt;/code>: 类型：数组(元素是字符串)，必填，github仓库的所有者和合作者 (对这个 repository 有写权限的用户)。如果仓库有多个人可以操作，那么在这里以数组形式写出：&lt;code>['someone']&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="debugging">Debugging&lt;/h2>
&lt;h3 id="error-not-found">Error: Not Found.&lt;/h3>
&lt;p>尝试了修改&lt;code>Homepage URL&lt;/code>为github pages页面，发现并没有用。&lt;/p>
&lt;p>解决：存放评论的repo不能为&lt;code>private&lt;/code>属性. 应该是一个&lt;code>public&lt;/code>的代码库才可以使用Gitalk！&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;p>&lt;a class="link" href="https://segmentfault.com/a/1190000018072952" target="_blank" rel="noopener"
>Gitalk评论插件使用教程&lt;/a>&lt;/p></description></item><item><title>Verilog with vscode</title><link>https://comfluter.life/p/verilog-with-vscode/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/verilog-with-vscode/</guid><description>&lt;h2 id="linting">linting&lt;/h2>
&lt;p>using vscode extension &lt;code>Verilog-HDL/SystemVerilog/Bluespec SystemVerilog&lt;/code>.&lt;/p>
&lt;p>using &lt;code>iverilog&lt;/code>&lt;/p>
&lt;p>go to extension settings and set &lt;code>verilog &amp;gt; linting : linter = iverilog&lt;/code>&lt;/p>
&lt;p>then the linting function should work for verilog files.&lt;/p>
&lt;p>Notice:&lt;/p>
&lt;ul>
&lt;li>the dir to verilog file should not contain chinese characters and spaces.&lt;/li>
&lt;li>if you imported module from other file without &lt;code>include&lt;/code> command, iverilog willl report an error. As it is always the case when using vivado, add &lt;code>-i&lt;/code> to extention setting &lt;code>Verilog › Linting › Iverilog: Arguments&lt;/code> to ignore this error.&lt;/li>
&lt;/ul>
&lt;h2 id="references">References&lt;/h2>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/338497672" target="_blank" rel="noopener"
>用VSCode编辑verilog代码、iverilog编译、自动例化、自动补全、自动格式化等常用插件&lt;/a>&lt;/p></description></item><item><title>Vivado 学习随记</title><link>https://comfluter.life/p/vivado-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/vivado-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>&lt;h2 id="multi-module-project">Multi-module Project&lt;/h2>
&lt;p>Just write two verilog files and instantiate a module specified in the other file, the vivado will figure out the dependencies automatically.&lt;/p></description></item><item><title>《先秦诸子选读》：道家思想</title><link>https://comfluter.life/p/%E5%85%88%E7%A7%A6%E8%AF%B8%E5%AD%90%E9%80%89%E8%AF%BB%E9%81%93%E5%AE%B6%E6%80%9D%E6%83%B3/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%85%88%E7%A7%A6%E8%AF%B8%E5%AD%90%E9%80%89%E8%AF%BB%E9%81%93%E5%AE%B6%E6%80%9D%E6%83%B3/</guid><description>&lt;h2 id="老子">老子&lt;/h2>
&lt;h3 id="概述">概述&lt;/h3>
&lt;ul>
&lt;li>先秦道家第一部&lt;/li>
&lt;li>《老子》文献的真实性：
&lt;ul>
&lt;li>上世纪20年代，用西方方法考察中国传统文献：有气人，但书可能是后人写的&lt;/li>
&lt;li>马王堆汉墓老子帛书抄本 汉文帝时期 证明此时《老子》其书已经盛行
&lt;ul>
&lt;li>篇目数量差不多&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>90年代：郭店楚简 其中有《老子》 测年公元前300年，战国中晚期
&lt;ul>
&lt;li>其中还有较多儒家早期文献&lt;/li>
&lt;li>篇目较少，约为传世本1/3，可能为摘抄&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>此两本出图后，证明《老子》一定成书早于战国晚期。&lt;/li>
&lt;li>&lt;strong>证实了《老子》应为所有道家文献的原创。&lt;/strong>&lt;/li>
&lt;li>作者到现在还不确定，&lt;strong>阅读时不用深究&lt;/strong>&lt;/li>
&lt;li>首创“自然之道”的概念&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="道">道&lt;/h3>
&lt;p>不仅道家讲“道”，其应该为春秋时代出现的思想概念。&lt;/p>
&lt;p>“道”字商代便有，但不是重要思想概念，仅为“道路”之意。“道”在春秋时成为思想概念内涵。从《论语》中可以得到印证。&lt;/p>
&lt;p>含义变化原因：政治变化。以氏族为本位的政治构架在衰弱。以祭祀为本，为期中心概念（西周时）。后来西周衰落，天命观念受到怀疑，上天包庇某一氏族的理念在弱化。孔子时政治基本不讲“天命”，个人也可以讲“天命”。政治的合理性在哪？当时的思想家在寻找新的理解。这个背景下，“道”的观念得以提出。政治的合法性来源：神授&amp;ndash;&amp;gt;往圣先贤的做法，体现出人本主义。&lt;/p>
&lt;blockquote>
&lt;p>《国语》周语下：吾非瞽史，焉知天道？&lt;/p>
&lt;/blockquote>
&lt;p>只有知道历史，才知道天道。（史官当时也管天道）此处天道：星象变化的大致规则，引申为自然变化的规则。&lt;/p>
&lt;p>中国的士大夫文化：&lt;/p>
&lt;ul>
&lt;li>对中国文化发展影响最深。&lt;/li>
&lt;li>非宗教的：思想主流为人文主义的：道德规则、历史传承、品信修养，而非不可知的神意。&lt;/li>
&lt;li>&lt;strong>道为非常重要的概念。&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>道为其他概念的中心：仁义礼智等等&lt;/p>
&lt;h3 id="自然之道一种特别的道">自然之道：一种特别的道&lt;/h3>
&lt;blockquote>
&lt;p>《老子》二十五章：人法地，地法天，天法道，道法自然
“道可道非常道”&lt;/p>
&lt;/blockquote>
&lt;h4 id="自然之道的含义">自然之道的含义&lt;/h4>
&lt;p>自然：名词？ &amp;mdash;&amp;gt; 天地万物的规则&lt;/p>
&lt;p>&lt;strong>自然是动词！&lt;/strong> 意为“自己这样”，万物自己演化的规律。&lt;/p>
&lt;p>人应当效法自然：不是效法自然的规律，而是效法自己如此的状态。&lt;/p>
&lt;blockquote>
&lt;p>第七章：天长地久。天地所以能长且久者，以其不自生，故能长生。是以圣人后其身而身先，外其身而身存。非以其无私耶？故能成其私。(后其身 一作：退其身)&lt;/p>
&lt;/blockquote>
&lt;p>天地长久，不自生：天地不是单一的生命，以万物的生命来体现自己的生命。万物演变恒久不息，天也恒久存在。&lt;/p>
&lt;p>是以圣人后其身而身先，外其身而身存： 老子对后代人物的政治谋略影响较大，怎么在政治上立于不败之地。看上去是哲理，但用起来是技巧。&lt;/p>
&lt;blockquote>
&lt;p>四十章：反者道之动；弱者道之用。天下万物生于有，有生于无。&lt;/p>
&lt;/blockquote>
&lt;p>老子要否认所有提升到“规则”层面的内容。&lt;/p>
&lt;blockquote>
&lt;p>二章：天下皆知美之为美，斯恶已。皆知善之为善，斯不善已。故有无相生，难易相成，长短相形，高下相倾，音声相和，前后相随，恒也。是以圣人处无为之事，行不言之教，万物作焉而不辞，生而不有，为而不恃，功成而弗居。夫唯弗居，是以不去。(万物作焉而不辞 一作：万物作焉而不为始)&lt;/p>
&lt;/blockquote>
&lt;p>理解：古人淳朴自然的理解中没有“美”的概念，其为认为的&lt;/p>
&lt;p>讲的是常识中相对的概念的相互转化。&lt;/p>
&lt;h4 id="道不是规律性">道：不是规律性&lt;/h4>
&lt;p>充满辩证的因果关系？不能说不对，但是容易被误导。辩证法、辩证规律本质上都还是对我们&lt;em>知识&lt;/em>的概括。第一层：形式逻辑；第二层：变化规律、辩证法。顺着这个理解&lt;/p>
&lt;blockquote>
&lt;p>五十八章：祸兮福所倚；福兮祸所伏。孰知其极？其无正邪？正复为奇，善复为妖。人之迷，其日固久。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>极：根本的道理。“悠悠苍天，曷其有极？”&lt;/li>
&lt;li>无正：没有规则、根本道理。&lt;/li>
&lt;li>奇：突然冒出来的、没有道理的&lt;/li>
&lt;li>妖：怪异的&lt;/li>
&lt;/ul>
&lt;p>根本上否定规律性，而不是相反相成。
&lt;strong>不应当将道理解为规律&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>道可道，非常道；名可名，非常名。无名天地之始，有名万物之母。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>第二个“道”：
&lt;ul>
&lt;li>言说&lt;/li>
&lt;li>走路：明明白白的路径&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>天地之始 万物之母：天地初始的状态&lt;/li>
&lt;/ul>
&lt;h4 id="有关天地起源问题">有关天地起源问题：&lt;/h4>
&lt;blockquote>
&lt;p>谷神不死，是谓玄牝。玄牝之门，是谓天地根。绵绵若存，用之不勤。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>谷神：道&lt;/li>
&lt;li>玄牝：雌性的牲畜，有学者由此将老子思想归结于民间崇拜
&lt;ul>
&lt;li>颜世安老师想法：可能受到淮河水网地区地方信仰的影响：水崇拜、雌性崇拜。但老子不停留在这个层面，而是提出了一种思想。&lt;/li>
&lt;li>此处将道与雌性生殖功能做类比&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>有物混成，先天地生，寂兮寥兮，独立而不改，周行而不殆，可以为天地母。吾不知其名，强字之曰道，强为之名曰大。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>有物混成：道&lt;/li>
&lt;li>周兴不殆在出土文献中均不存在，大概率是后人添加。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>孔德之容，惟道是从。道之为物，惟恍惟惚。惚兮恍兮，其中有象；恍兮惚兮，其中有物；窈兮冥兮，其中有精；其精甚真，其中有信。&lt;/p>
&lt;/blockquote>
&lt;p>但&lt;strong>老子的本意应当不是天地起源&lt;/strong>：&lt;/p>
&lt;ol>
&lt;li>后世道家，天地起源不是道家思想的中心。庄子嘲笑天地起源的探究。&lt;/li>
&lt;li>如果谈天地起源，为什么在文本中一直强调“说不清楚”，许多地方既有又无？“孰知其极”？&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>不要将道与天地起源混为一谈！&lt;/strong>&lt;/p>
&lt;h4 id="原初状态">原初状态&lt;/h4>
&lt;p>&lt;strong>谈天地之道，应当从天地的原初状态谈起，对比原初状态和现在状态的对比。从而使得人回到自己“自然”、“原初”的状态，以天道为引导。&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>致虚极；守静笃。万物并作，吾以观复。夫物芸芸，各复归其根。归根曰静，静曰复命。复命曰常，知常曰明。不知常，妄作凶。知常容，容乃公，公乃全，全乃天，天乃道，道乃久，歿身不殆。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>虚、静：心态意义上的原初状态
&lt;ul>
&lt;li>虚 对应：实、知识、成见&lt;/li>
&lt;li>静 对应：好物、情感&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>为学日益，为道日损。损之又损，以至於无为。无为而无不为。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>为道要一天天减少自己的知识，直至无有的状态。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>不出户，知天下；不窥牖，见天道。其出弥远，其知弥少。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>在经验意义上回到自己的状态。有经验便有成见。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>知其雄，守其雌，为天下谿。为天下谿，常德不离，复归于婴儿。&lt;/p>
&lt;/blockquote>
&lt;p>只要是道家文献，必然谈回到原初状态&lt;/p>
&lt;h4 id="理解自然之道">理解自然之道&lt;/h4>
&lt;p>自己生、自己长，本来如此。与计划、规则相对。&lt;/p>
&lt;blockquote>
&lt;p>古之人，其知有所至矣。恶乎生？有以为未始有物者，至矣，尽矣，不可以加矣。其次，以为有物矣，而未始有封也。其次以为有封焉，而未始有是非也。是非之彰也，道之所以亏也。道之所以亏，爱之所以成。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>至：强？弱？总之不一样。&lt;/li>
&lt;li>未始有物：物我一体
&lt;ul>
&lt;li>郭象：未始有我。无自我意识。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>封：将物分为不同领域。&lt;/li>
&lt;li>爱：偏私、喜好&lt;/li>
&lt;/ul>
&lt;p>人们悲惨的根源：人们生下来便不可避免地落入非自然的状态中。解决：回到原初状态。&lt;/p>
&lt;blockquote>
&lt;p>道家无为，又曰无不为，其实易行，其辞难知。其术以虚无为本，以因循为用。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>难知：天地初始状态，难以用现有的语言进行描述。思维习惯、语言、行为规范是禁锢、限制、不自由、不自然。描述初始状态时必然会用到玄奥的词句。&lt;/li>
&lt;li>其实易行：回到&lt;strong>初始状态&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>庄子：自由与自然的紧张。警惕“自我”对他人的毒害。&lt;/p>
&lt;p>自然而然、自己如此与回到原初状态的联系是什么？&lt;/p>
&lt;p>道家：反对条理化、经验化的对世界的理解与体验。&lt;/p>
&lt;p>后世道家较少谈道的自然哲学的一面，而是谈**回到本源。**后世道家从各个方面引导人们回到自己的初始状态。&lt;/p>
&lt;h3 id="回到原初状态">回到原初状态&lt;/h3>
&lt;blockquote>
&lt;p>持而盈之，不如其已。揣而锐之，不可长保。金玉满堂，莫之能守。富贵而骄，自遗其咎。功遂身退，天之道也。&lt;/p>
&lt;/blockquote>
&lt;p>个人的原初状态。退守，在知识阶层的普通人中广为流传。&lt;/p>
&lt;h4 id="政治上的原初状态">政治上的原初状态&lt;/h4>
&lt;blockquote>
&lt;p>小国寡民。使有什伯之器而不用；使民重死而不远徙；虽有舟舆，无所乘之；虽有甲兵，无所陈之。使人复结绳而用之。至治之极。甘其食，美其服，安其居，乐其俗，邻国相望，鸡犬之声相闻，民至老死不相往来。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>群体的原初状态。重点在心态。&lt;/li>
&lt;li>有机械，即有机事，有机事，即有机心。&lt;/li>
&lt;li>甘其食&amp;hellip;乐其俗：吃什么、穿什么都觉得好。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>故圣人云：“我无为，而民自化；我好静，而民自正；我无事，而民自富；我无欲，而民自朴。”&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>说到底，重点在于&lt;strong>政治&lt;/strong>上。要国家回到无为的原初状态。但是老子不是在否定政治的作用，不是在说应该没有政治。&lt;/li>
&lt;li>无为：
&lt;ul>
&lt;li>君主对官员：君无为而臣有为。&lt;/li>
&lt;li>政府对民间：国家无为而让社会自己演化。例：文景之治。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>《管子·心术上》：天曰虚，地曰静，乃不伐。洁其宫，开其门，去私毋言，神明若存。纷乎其若乱，静之而自治。强不能遍立，智不能尽谋。物固有形，形固有名，名当，谓之圣人。故必知不言，无为之事，然后知道之纪。殊形异埶，不与万物异理，故可以为天下始。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>天地虚静：人应当虚、静。伐：自我吹嘘。&lt;/li>
&lt;li>宫：房间，比喻内心。不洁：知识、情绪等等一切妨碍清晰认知客观世界的障碍。&lt;/li>
&lt;li>神明：与虚静相对。指向生命原始的可能性、创造力。&lt;/li>
&lt;li>强不能遍立，智不能尽谋：具体的道理。&lt;/li>
&lt;li>物固有形，形固有名：自然万物有其自己的形态，依据其形态命名。这里因为在将政治，这里的物应当指社会生活的事物，如官职、社会制度等等。名：对事物发展状态的反映。形名之学，将道家与法家结合起来。
&lt;ul>
&lt;li>道家：有从自然而来的正当性。&lt;/li>
&lt;li>法家：法令的正当性从何而来？早期道家只以现实需要为自己辩护，但这个理由显然在理论上不够高明。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>道家中将政治道术的文献：&lt;/p>
&lt;ul>
&lt;li>马王堆汉墓帛书、《黄帝四经》或称《黄老帛书》、《经法》、《十大经》、《称》、《道原》、《庄子·天道》、《韩非子·解老》、《杨权》等篇、吕氏春秋若干篇、慎子、鹖冠子、《史记·货殖列传》&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>《史记·货殖列传序》：夫山西饶材、竹、旄、玉石，山东多鱼、盐、漆、丝、声色，江南出棻、梓、姜、桂、金、锡、连、丹沙、犀、玳瑁、珠玑、齿、革，龙门、碣石 北多马、牛、羊、旃、裘、筋、角；铜、铁则千里往往山出棋置。此其大较也。皆中国人民所喜好，谣俗被服饮食奉生送死之具也。故待农而食之，虞而出之，工而成之，商而通之。此宁有政教发征期会哉？人各任其能，竭其力，以得所欲。故物贱之征贵，贵之征贱，各劝其业，乐其事，若水之趋下，日夜无休时，不召而自来，不求而民出之。岂非道之所符，而自然之验邪？&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>商业的规律是自然而然形成的。&lt;/li>
&lt;li>好的政治：因循利导。&lt;/li>
&lt;/ul>
&lt;p>道家的展开不仅仅是理论运作，而是与政治运作紧密结合。司马迁此处应该是在讲文景之治之时的政治模式，以批判汉武帝的政治。这应当不是司马迁个人的想法，而是当时的一种思潮，是老子思想展开的一种形态。&lt;/p>
&lt;h2 id="庄子">庄子&lt;/h2>
&lt;p>庄子对后来士大夫思想的影响很大。魏晋玄学的旷达自由与宋明理学的无我朴实。&lt;/p>
&lt;blockquote>
&lt;p>南郭子綦隐机而坐，仰天而嘘，荅焉似丧其耦。颜成子游立侍乎前，曰：“何居乎？形固可使如槁木，而心固可使如死灰乎？今之隐机者，非昔之隐机者也？”子綦曰：“偃，不亦善乎，而问之也！今者吾丧我，汝知之乎？汝闻人籁而未闻地籁，汝闻地籁而不闻天籁夫！”&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>“隐机而坐，仰天而嘘，荅焉似丧其耦”：文学化表达，不用逐字深究，回到婴儿原初状态的表现。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>子游曰：“敢问其方。”子綦曰：“夫大块噫气，其名为风。是唯无作，作则万窍怒呺。而独不闻之翏翏乎？山林之畏隹，大木百围之窍穴，似鼻，似口，似耳，似枅，似圈，似臼，似洼者，似污者。激者、謞者、叱者、吸者、叫者、譹者、宎者，咬者，前者唱于而随者唱喁，泠风则小和，飘风则大和，厉风济则众窍为虚。而独不见之调调之刁刁乎？”
子游曰：“地籁则众窍是已，人籁则比竹是已，敢问天籁。”子綦曰：“夫吹万不同，为而使其自己也。咸其自取，怒者其谁邪？”&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>文学性：形象大于思想&lt;/li>
&lt;li>思想上仍然是在说致虚极，守静笃。&lt;/li>
&lt;li>直接去体验自然世界的生气勃勃&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>至人无己，神人无功，圣人无名。&lt;/p>
&lt;/blockquote>
&lt;p>最后还是回到道家思想：&lt;strong>回到原初状态。&lt;/strong>&lt;/p>
&lt;h3 id="人与世界的关系">人与世界的关系&lt;/h3>
&lt;blockquote>
&lt;p>《庄子·知北游》：东郭子问于庄子曰：“所谓道，恶乎在？”庄子曰：“无所不在。 ”东郭子曰：“期而后可。”庄子曰：“在蝼蚁。”曰：“何其下邪 ？”曰：“在稊稗。”曰：“何其愈下邪？”曰：“在瓦甓。”曰： “何其愈甚邪？”曰：“在屎溺。”东郭子不应。庄子曰：“夫子之 问也，固不及质。正、获之问于监市履狶也，‘每下愈况’。汝唯莫必， 无乎逃物&amp;hellip;”&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>重点在前半。思想上的重点在于：道表现在人与外部世界的一种关系。退回原初状态后可以与世界建立新的关系。此理念在后来结出无数思想果实。后世：什么是好的状态？&lt;/li>
&lt;li>“何其下邪？”：外部世界以自己的标准做区分、分化。每一个物都有它的价值、角度。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>《庄子·齐物论》：古之人，其知有所至矣。恶乎至？有以为未始有物者，至矣，尽矣，不可以加矣！其次以为有物矣，而未始有封也。其次以为有封焉，而未始有是非也。是非之彰也，道之所以亏也。道之所以亏，爱之所以成。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>梓庆削木为鐻，日成，见者惊犹鬼神。鲁侯见而问焉，曰：“子何术以为焉？”对曰：“臣，工人，何术之有！虽然，有一焉：臣将为 鐻，未尝敢以耗气也，必齐以静心。齐三日，而不敢怀庆赏爵禄；齐五日，不敢怀非誉巧拙；齐七日，辄然忘吾有四枝形体也。当是时也，无公朝。其巧专而外骨消，然后入山林，观天性形躯，至矣，然后成鐻，然后加手焉，不然则已。则以天合天，器之所以疑神者，其是与！”&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>一步一步将现实状态中的“我”逐步忘记。&lt;/li>
&lt;li>“以天合天”：第一个天：自己的天然；第二个天：自然世界。&lt;/li>
&lt;li>在自然之道的意义上，做事仅看与这个事有关的事情，回到事情本身，其余的所有纷扰（晋赏爵禄，非誉巧拙等等）全部忘记。此形成一种文化形态、文化理想。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>生而美者，人与之鉴，不告则不知其美于人也。若知之，若不知之 ，若闻之，若不闻之，其可喜也终无已，人之好之亦无已，性也。圣人之爱人也，人与之名，不告则不知其爱人也。若知之，若不知之， 若闻之，若不闻之，其爱人也终无已，人之安之亦无已，性也。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>美：不顾盼自怜。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>《传习录下》：有一属官，因久听讲先生之学，曰：“此学甚好，只是簿书讼狱繁难，不得为学。”先生闻之，曰：“我何尝教尔离了簿书讼狱悬空去讲学？尔既有官司之事，便从官司的事上为学，才是真格物。如问一词讼，不可因其应对无状，起个怒心：不可因他言语圆转，生个喜心：不可恶其嘱托，加意治之：不可因其请求，屈意从之：不可因自己事务烦冗，随意苟且断之；不可因旁人谮毁罗织，随人意思处之：这许多意思皆私，只尔自知，须精细省察克治，惟恐此心有一毫偏倚，杜人是非，这便是格物致知。簿书讼狱之间，无非实学。若离了事物为学，却是着空。”&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>庄子对后世的影响。&lt;/li>
&lt;li>听这个案件，就应当回到这件事情，不要掺杂任何私心。&lt;/li>
&lt;li>&lt;strong>公私之分&lt;/strong>：道家的概念。道家核心：无私、无己、无我。&lt;/li>
&lt;/ul>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>道家回到原初状态是对人的表达，没有一个具体的形态。庄子中形成了一种系统性的理解，形成了一种理想，成为文化道理的理念，对后世启发良多。&lt;/p></description></item><item><title>服务器配置CPU版ToD-BERT环境</title><link>https://comfluter.life/p/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEcpu%E7%89%88tod-bert%E7%8E%AF%E5%A2%83/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEcpu%E7%89%88tod-bert%E7%8E%AF%E5%A2%83/</guid><description>&lt;h2 id="conda-复制已有环境">Conda 复制已有环境&lt;/h2>
&lt;p>由于服务器上本身已经有使用CUDA平台的ToD-BERT运行环境，仅需将此环境中所有使用GPU的库换为使用CPU的库即可：pytorch&lt;/p>
&lt;p>查看已有环境&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> dialogue@amax-13:/$ conda info --env
&lt;span class="c1"># conda environments:&lt;/span>
&lt;span class="c1">#&lt;/span>
base * /media/HD1/dche/miniconda3
sum_env /media/HD1/dche/miniconda3/envs/sum_env
tod_bert /media/HD1/dche/miniconda3/envs/tod_bert
/media/HD1/miniconda3
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建新环境，并将原有环境中的所有包复制，并激活新建立的环境。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> dialogue@amax-13:/$ conda create -n tod_bert_cpu --clone tod_bert
Source: /media/HD1/dche/miniconda3/envs/tod_bert
Destination: /media/HD1/dche/miniconda3/envs/tod_bert_cpu
Packages: &lt;span class="m">20&lt;/span>
Files: &lt;span class="m">12683&lt;/span>
Preparing transaction: &lt;span class="k">done&lt;/span>
Verifying transaction: &lt;span class="k">done&lt;/span>
Executing transaction: &lt;span class="k">done&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># To activate this environment, use&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># $ conda activate tod_bert_cpu&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># To deactivate an active environment, use&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># $ conda deactivate&lt;/span>
&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> dialogue@amax-13:/$ conda activate tod_bert_cpu
&lt;span class="o">(&lt;/span>tod_bert_cpu&lt;span class="o">)&lt;/span> dialogue@amax-13:/$
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conda配置环境中的包卸载gpu版本安装cpu版本">Conda配置环境中的包（卸载GPU版本、安装CPU版本）&lt;/h2>
&lt;p>Conda 查看环境中所有包的信息&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">(&lt;/span>tod_bert_cpu&lt;span class="o">)&lt;/span> dialogue@amax-13:/$ conda list
&lt;span class="c1"># packages in environment at /media/HD1/dche/miniconda3/envs/tod_bert_cpu:&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># Name Version Build Channel&lt;/span>
_libgcc_mutex 0.1 main
_openmp_mutex 4.5 1_gnu
anykeystore 0.2 pypi_0 pypi
apex 0.9.8.dev0 pypi_0 pypi
blessings 1.7 pypi_0 pypi
ca-certificates 2021.10.26 h06a4308_2
certifi 2021.10.8 py37h06a4308_0
charset-normalizer 2.0.7 pypi_0 pypi
click 8.0.3 pypi_0 pypi
cryptacular 1.6.2 pypi_0 pypi
defusedxml 0.7.1 pypi_0 pypi
filelock 3.4.0 pypi_0 pypi
future 0.18.2 pypi_0 pypi
gpustat 0.6.0 pypi_0 pypi
greenlet 1.1.2 pypi_0 pypi
hupper 1.10.3 pypi_0 pypi
idna 3.3 pypi_0 pypi
importlib-metadata 4.8.2 pypi_0 pypi
joblib 1.1.0 pypi_0 pypi
libedit 3.1.20210910 h7f8727e_0
libffi 3.2.1 hf484d3e_1007
libgcc-ng 9.3.0 h5101ec6_17
libgomp 9.3.0 h5101ec6_17
libstdcxx-ng 9.3.0 hd4cf53a_17
markupsafe 2.0.1 pypi_0 pypi
ncurses 6.3 h7f8727e_2
nltk 3.5 pypi_0 pypi
numpy 1.18.1 pypi_0 pypi
nvidia-ml-py3 7.352.0 pypi_0 pypi
oauthlib 3.1.1 pypi_0 pypi
openssl 1.0.2u h7b6447c_0
packaging 21.3 pypi_0 pypi
pastedeploy 2.1.1 pypi_0 pypi
pbkdf2 1.3 pypi_0 pypi
pip 21.2.2 py37h06a4308_0
plaster 1.0 pypi_0 pypi
plaster-pastedeploy 0.7 pypi_0 pypi
protobuf 3.19.1 pypi_0 pypi
psutil 5.8.0 pypi_0 pypi
ptvsd 4.3.2 pypi_0 pypi
pyparsing 3.0.6 pypi_0 pypi
pyramid 2.0 pypi_0 pypi
pyramid-mailer 0.15.1 pypi_0 pypi
python 3.7.0 h6e4f718_3
python3-openid 3.2.0 pypi_0 pypi
readline 7.0 h7b6447c_5
regex 2021.11.10 pypi_0 pypi
repoze-sendmail 4.4.1 pypi_0 pypi
requests 2.26.0 pypi_0 pypi
requests-oauthlib 1.3.0 pypi_0 pypi
sacremoses 0.0.46 pypi_0 pypi
scikit-learn 0.23.2 pypi_0 pypi
scipy 1.7.2 pypi_0 pypi
sentencepiece 0.1.96 pypi_0 pypi
setuptools 58.0.4 py37h06a4308_0
simplejson 3.17.2 pypi_0 pypi
six 1.15.0 pypi_0 pypi
sqlalchemy 1.4.27 pypi_0 pypi
sqlite 3.33.0 h62c20be_0
tensorboardx 2.1 pypi_0 pypi
threadpoolctl 3.0.0 pypi_0 pypi
tk 8.6.11 h1ccaba5_0
tokenizers 0.8.1rc1 pypi_0 pypi
torch 1.6.0 pypi_0 pypi
tqdm 4.31.1 pypi_0 pypi
transaction 3.0.1 pypi_0 pypi
transformers 3.0.2 pypi_0 pypi
translationstring 1.4 pypi_0 pypi
typing-extensions 4.0.0 pypi_0 pypi
urllib3 1.26.7 pypi_0 pypi
velruse 1.1.1 pypi_0 pypi
venusian 3.0.0 pypi_0 pypi
webob 1.8.7 pypi_0 pypi
wheel 0.37.0 pyhd3eb1b0_1
wtforms 3.0.0 pypi_0 pypi
wtforms-recaptcha 0.3.2 pypi_0 pypi
xz 5.2.5 h7b6447c_0
zipp 3.6.0 pypi_0 pypi
zlib 1.2.11 h7b6447c_3
zope-deprecation 4.4.0 pypi_0 pypi
zope-interface 5.4.0 pypi_0 pypi
zope-sqlalchemy 1.6 pypi_0 pypi
&lt;/code>&lt;/pre>&lt;/div>&lt;p>卸载原有的GPU版本torch，貌似原先是使用pip安装的，在尝试conda卸载无果后使用pip卸载成功。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">(&lt;/span>tod_bert_cpu&lt;span class="o">)&lt;/span> dialogue@amax-13:/$ conda remove pytorch
Collecting package metadata &lt;span class="o">(&lt;/span>repodata.json&lt;span class="o">)&lt;/span>: &lt;span class="k">done&lt;/span>
Solving environment: failed
PackagesNotFoundError: The following packages are missing from the target environment:
- pytorch
&lt;span class="o">(&lt;/span>tod_bert_cpu&lt;span class="o">)&lt;/span> dialogue@amax-13:/$ pip uninstall torch
Found existing installation: torch 1.6.0
Uninstalling torch-1.6.0:
Would remove:
/media/HD1/dche/miniconda3/envs/tod_bert_cpu/bin/convert-caffe2-to-onnx
/media/HD1/dche/miniconda3/envs/tod_bert_cpu/bin/convert-onnx-to-caffe2
/media/HD1/dche/miniconda3/envs/tod_bert_cpu/lib/python3.7/site-packages/caffe2/*
/media/HD1/dche/miniconda3/envs/tod_bert_cpu/lib/python3.7/site-packages/torch-1.6.0.dist-info/*
/media/HD1/dche/miniconda3/envs/tod_bert_cpu/lib/python3.7/site-packages/torch/*
Proceed &lt;span class="o">(&lt;/span>Y/n&lt;span class="o">)&lt;/span>? y
Successfully uninstalled torch-1.6.0
&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装cpu版本torch&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">(&lt;/span>tod_bert_cpu&lt;span class="o">)&lt;/span> dialogue@amax-13:/$ conda install &lt;span class="nv">pytorch&lt;/span>&lt;span class="o">==&lt;/span>1.6.0 &lt;span class="nv">torchvision&lt;/span>&lt;span class="o">==&lt;/span>0.7.0 cpuonly -c pytorch
Collecting package metadata &lt;span class="o">(&lt;/span>current_repodata.json&lt;span class="o">)&lt;/span>: &lt;span class="k">done&lt;/span>
Solving environment: &lt;span class="k">done&lt;/span>
&lt;span class="c1">## Package Plan ##&lt;/span>
environment location: /media/HD1/dche/miniconda3/envs/tod_bert_cpu
added / updated specs:
- cpuonly
- &lt;span class="nv">pytorch&lt;/span>&lt;span class="o">==&lt;/span>1.6.0
- &lt;span class="nv">torchvision&lt;/span>&lt;span class="o">==&lt;/span>0.7.0
The following packages will be downloaded:
&lt;span class="p">|&lt;/span> package &lt;span class="p">|&lt;/span> build &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> --------------------- &lt;span class="p">|&lt;/span> ----------------------------------- &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> blas-1.0 &lt;span class="p">|&lt;/span> mkl &lt;span class="m">6&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> cpuonly-2.0 &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">2&lt;/span> KB pytorch &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> freetype-2.11.0 &lt;span class="p">|&lt;/span> h70c0345_0 &lt;span class="m">618&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> giflib-5.2.1 &lt;span class="p">|&lt;/span> h7b6447c_0 &lt;span class="m">78&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> intel-openmp-2021.4.0 &lt;span class="p">|&lt;/span> h06a4308_3561 4.2 MB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> jpeg-9d &lt;span class="p">|&lt;/span> h7f8727e_0 &lt;span class="m">232&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> lcms2-2.12 &lt;span class="p">|&lt;/span> h3be6417_0 &lt;span class="m">312&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> libpng-1.6.37 &lt;span class="p">|&lt;/span> hbc83047_0 &lt;span class="m">278&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> libtiff-4.2.0 &lt;span class="p">|&lt;/span> h85742a9_0 &lt;span class="m">502&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> libwebp-1.2.0 &lt;span class="p">|&lt;/span> h89dd481_0 &lt;span class="m">493&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> libwebp-base-1.2.0 &lt;span class="p">|&lt;/span> h27cfd23_0 &lt;span class="m">437&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> lz4-c-1.9.3 &lt;span class="p">|&lt;/span> h295c915_1 &lt;span class="m">185&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> mkl-2021.4.0 &lt;span class="p">|&lt;/span> h06a4308_640 142.6 MB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> mkl-service-2.4.0 &lt;span class="p">|&lt;/span> py37h7f8727e_0 &lt;span class="m">56&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> mkl_fft-1.3.1 &lt;span class="p">|&lt;/span> py37hd3c417c_0 &lt;span class="m">172&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> mkl_random-1.2.2 &lt;span class="p">|&lt;/span> py37h51133e4_0 &lt;span class="m">287&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> ninja-1.10.2 &lt;span class="p">|&lt;/span> py37hd09550d_3 1.5 MB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> numpy-1.21.2 &lt;span class="p">|&lt;/span> py37h20f2e39_0 &lt;span class="m">23&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> numpy-base-1.21.2 &lt;span class="p">|&lt;/span> py37h79a1101_0 4.8 MB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> olefile-0.46 &lt;span class="p">|&lt;/span> py37_0 &lt;span class="m">50&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> pillow-8.4.0 &lt;span class="p">|&lt;/span> py37h5aabda8_0 &lt;span class="m">644&lt;/span> KB &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> pytorch-1.6.0 &lt;span class="p">|&lt;/span> py3.7_cpu_0 59.4 MB pytorch &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> pytorch-mutex-1.0 &lt;span class="p">|&lt;/span> cpu &lt;span class="m">3&lt;/span> KB pytorch &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> torchvision-0.7.0 &lt;span class="p">|&lt;/span> py37_cpu 10.3 MB pytorch &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> zstd-1.4.9 &lt;span class="p">|&lt;/span> haebb681_0 &lt;span class="m">480&lt;/span> KB &lt;span class="p">|&lt;/span>
------------------------------------------------------------
Total: 227.4 MB
The following NEW packages will be INSTALLED:
blas pkgs/main/linux-64::blas-1.0-mkl
cpuonly pytorch/noarch::cpuonly-2.0-0
freetype pkgs/main/linux-64::freetype-2.11.0-h70c0345_0
giflib pkgs/main/linux-64::giflib-5.2.1-h7b6447c_0
intel-openmp pkgs/main/linux-64::intel-openmp-2021.4.0-h06a4308_3561
jpeg pkgs/main/linux-64::jpeg-9d-h7f8727e_0
lcms2 pkgs/main/linux-64::lcms2-2.12-h3be6417_0
libpng pkgs/main/linux-64::libpng-1.6.37-hbc83047_0
libtiff pkgs/main/linux-64::libtiff-4.2.0-h85742a9_0
libwebp pkgs/main/linux-64::libwebp-1.2.0-h89dd481_0
libwebp-base pkgs/main/linux-64::libwebp-base-1.2.0-h27cfd23_0
lz4-c pkgs/main/linux-64::lz4-c-1.9.3-h295c915_1
mkl pkgs/main/linux-64::mkl-2021.4.0-h06a4308_640
mkl-service pkgs/main/linux-64::mkl-service-2.4.0-py37h7f8727e_0
mkl_fft pkgs/main/linux-64::mkl_fft-1.3.1-py37hd3c417c_0
mkl_random pkgs/main/linux-64::mkl_random-1.2.2-py37h51133e4_0
ninja pkgs/main/linux-64::ninja-1.10.2-py37hd09550d_3
numpy pkgs/main/linux-64::numpy-1.21.2-py37h20f2e39_0
numpy-base pkgs/main/linux-64::numpy-base-1.21.2-py37h79a1101_0
olefile pkgs/main/linux-64::olefile-0.46-py37_0
pillow pkgs/main/linux-64::pillow-8.4.0-py37h5aabda8_0
pytorch pytorch/linux-64::pytorch-1.6.0-py3.7_cpu_0
pytorch-mutex pytorch/noarch::pytorch-mutex-1.0-cpu
six pkgs/main/noarch::six-1.16.0-pyhd3eb1b0_0
torchvision pytorch/linux-64::torchvision-0.7.0-py37_cpu
zstd pkgs/main/linux-64::zstd-1.4.9-haebb681_0
Proceed &lt;span class="o">([&lt;/span>y&lt;span class="o">]&lt;/span>/n&lt;span class="o">)&lt;/span>? y
Downloading and Extracting Packages
olefile-0.46 &lt;span class="p">|&lt;/span> &lt;span class="m">50&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
numpy-base-1.21.2 &lt;span class="p">|&lt;/span> 4.8 MB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
libpng-1.6.37 &lt;span class="p">|&lt;/span> &lt;span class="m">278&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
freetype-2.11.0 &lt;span class="p">|&lt;/span> &lt;span class="m">618&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
libwebp-base-1.2.0 &lt;span class="p">|&lt;/span> &lt;span class="m">437&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
blas-1.0 &lt;span class="p">|&lt;/span> &lt;span class="m">6&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
libtiff-4.2.0 &lt;span class="p">|&lt;/span> &lt;span class="m">502&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
torchvision-0.7.0 &lt;span class="p">|&lt;/span> 10.3 MB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
zstd-1.4.9 &lt;span class="p">|&lt;/span> &lt;span class="m">480&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
pytorch-1.6.0 &lt;span class="p">|&lt;/span> 59.4 MB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
libwebp-1.2.0 &lt;span class="p">|&lt;/span> &lt;span class="m">493&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
jpeg-9d &lt;span class="p">|&lt;/span> &lt;span class="m">232&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
intel-openmp-2021.4. &lt;span class="p">|&lt;/span> 4.2 MB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
lcms2-2.12 &lt;span class="p">|&lt;/span> &lt;span class="m">312&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
mkl-service-2.4.0 &lt;span class="p">|&lt;/span> &lt;span class="m">56&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
pytorch-mutex-1.0 &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
giflib-5.2.1 &lt;span class="p">|&lt;/span> &lt;span class="m">78&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
mkl_random-1.2.2 &lt;span class="p">|&lt;/span> &lt;span class="m">287&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
cpuonly-2.0 &lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
mkl-2021.4.0 &lt;span class="p">|&lt;/span> 142.6 MB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
ninja-1.10.2 &lt;span class="p">|&lt;/span> 1.5 MB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
mkl_fft-1.3.1 &lt;span class="p">|&lt;/span> &lt;span class="m">172&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
pillow-8.4.0 &lt;span class="p">|&lt;/span> &lt;span class="m">644&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
lz4-c-1.9.3 &lt;span class="p">|&lt;/span> &lt;span class="m">185&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
numpy-1.21.2 &lt;span class="p">|&lt;/span> &lt;span class="m">23&lt;/span> KB &lt;span class="p">|&lt;/span> &lt;span class="c1">############################################################################################# | 100% &lt;/span>
Preparing transaction: &lt;span class="k">done&lt;/span>
Verifying transaction: &lt;span class="k">done&lt;/span>
Executing transaction: &lt;span class="k">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置并运行bert">配置并运行BERT&lt;/h2>
&lt;p>直接使用同CPU的命令&lt;code>CUDA_VISIBLE_DEVICES=0 ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-MLM --only_last_turn --data_path ./../dialog_datasets&lt;/code>，貌似没有任何问题地跑起来了？&lt;/p>
&lt;p>由于项目要求，需要限制模型使用cpu的核数。&lt;/p>
&lt;p>使用命令&lt;code>top -d 1&lt;/code>查看目前cpu占用情况，顺便查看跑BERT模型的python进程PID&lt;/p>
&lt;p>使用命令&lt;code>taskset -cp &amp;lt;cpu list&amp;gt; &amp;lt;pid&amp;gt;&lt;/code>进行绑核操作，ep.&lt;code>taskset -cp 0,1,2,3 94434&lt;/code>&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/94744929" target="_blank" rel="noopener"
>Anaconda-用conda创建python虚拟环境&lt;/a>&lt;/p></description></item><item><title>Numpy 学习随记</title><link>https://comfluter.life/p/numpy-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/numpy-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>&lt;h2 id="数组切片">数组切片&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-py" data-lang="py">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">22&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">23&lt;/span>&lt;span class="p">]],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">31&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">32&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">33&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>注意Numpy中元素编号从0开始，左侧包含右侧不包含&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>取单个元素&lt;code>x = a[1, 2]&lt;/code>，对应第0维的第1个元素&lt;code>4&lt;/code>&lt;/li>
&lt;li>切片&lt;code>x = a[0:2, 1:3]&lt;/code>，对应第0维的第0~1个元素，第1维的第1~2个元素&lt;code>[[12 13], [22 23]]&lt;/code>&lt;/li>
&lt;li>切片&lt;code>x = a[:2, 2:]&lt;/code>，对应对应第0维的最开始到第2（2-1）个元素，第1维的第2个及以后的所有元素&lt;code>[[13], [23]]&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="判断一个数组是否存在于另一个大数组内">判断一个数组是否存在于另一个大数组内&lt;/h2>
&lt;p>直接使用&lt;code>==&lt;/code>会逐数字判断元素是否存在：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-py" data-lang="py">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以改为&lt;code>(a == np.array([1, 2, 3])).all(1).any()&lt;/code>。y == z会将y的每一行与z的每个元素进行比较。 使用all(axis=1)可以获取所有元素匹配的行，并使用any()找出是否匹配。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-py" data-lang="py">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">]))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">]))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">any&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出结果：&lt;/p>
&lt;pre tabindex="0">&lt;code>[[ True True True]
[False False False]]
[ True False]
True
&lt;/code>&lt;/pre>&lt;h2 id="各种拷贝">各种拷贝&lt;/h2>
&lt;ol>
&lt;li>无拷贝&lt;code>a = b&lt;/code>:a,b完全相同，指向同一对象&lt;/li>
&lt;li>浅拷贝&lt;code>b = a.view()&lt;/code>：只会copy父对象，不会copy底层的数据，共用原始引用指向的对象数据。如果在view上修改数据，会直接反馈到原始对象。改变b的&lt;code>shape&lt;/code>等父对象的参数时，不会改变a的相应参数&lt;/li>
&lt;li>深拷贝&lt;code>b = a.copy()&lt;/code>：对象及其子对象都进行copy一份，两对象完全独立。&lt;/li>
&lt;/ol></description></item><item><title>PlantUML 学习随记</title><link>https://comfluter.life/p/plantuml-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/plantuml-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>&lt;h2 id="plantuml-with-vscode">PlantUML with VsCode&lt;/h2>
&lt;ol>
&lt;li>Install &lt;code>PlantUML&lt;/code> extension for vscode.&lt;/li>
&lt;li>following extension follow me document:
&lt;ol>
&lt;li>install java JRE&lt;/li>
&lt;li>install Graphviz&lt;/li>
&lt;li>download the latest &lt;code>plantuml.jar&lt;/code>&lt;/li>
&lt;li>specify the jar location with the extension setting plantuml.jar&lt;/li>
&lt;li>specify the GraphViz installation by defining the Windows environment variable &lt;code>GRAPHVIZ_DOT&lt;/code>, e.g., &lt;code>c:\program files\graphviz\bin\dot.exe&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol></description></item><item><title>Python 学习随记</title><link>https://comfluter.life/p/python-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/python-%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0/</guid><description>&lt;h2 id="python-module">Python Module&lt;/h2>
&lt;h3 id="python-module-导入方法">Python Module 导入方法&lt;/h3>
&lt;ol>
&lt;li>&lt;code>import &amp;lt;module name&amp;gt;&lt;/code>调用这个方法导入的module中的函数时，需要&lt;code>&amp;lt;module name&amp;gt;.&amp;lt;function name&amp;gt;&lt;/code>格式进行使用&lt;/li>
&lt;li>&lt;code>from &amp;lt;module name&amp;gt; import &amp;lt;sth&amp;gt;&lt;/code>从某个模块中引入某些特殊函数等引入现在所在的全局命名空间中，直接使用&lt;code>&amp;lt;sth&amp;gt;&lt;/code>就可以进行使用。这里引入的可以是一个子包，也可以是子包中的任意对象。&lt;/li>
&lt;li>&lt;code>from &amp;lt;module name&amp;gt; import *&lt;/code>将模块中所有对象引入，直接使用原模块中的名称即可使用&lt;/li>
&lt;/ol>
&lt;h3 id="搜索路径">搜索路径&lt;/h3>
&lt;p>导入一个模块时，Python 解析器对模块位置的搜索顺序是：&lt;/p>
&lt;ol>
&lt;li>当前目录&lt;/li>
&lt;li>如果不在当前目录，Python 则搜索在 shell 变量 &lt;code>PYTHONPATH&lt;/code> 下的每个目录。&lt;/li>
&lt;li>如果都找不到，Python会察看默认路径。UNIX下，默认路径一般为&lt;code>/usr/local/lib/python/&lt;/code>。
模块搜索路径存储在 &lt;code>system&lt;/code> 模块的 &lt;code>sys.path&lt;/code> 变量中。变量里包含当前目录，&lt;code>PYTHONPATH&lt;/code>和由安装过程决定的默认目录。&lt;/li>
&lt;/ol>
&lt;h3 id="命名空间和作用域">命名空间和作用域&lt;/h3>
&lt;ul>
&lt;li>变量：名字与匹配对象的对应&lt;/li>
&lt;li>命名空间：记录了所有名字-对象对应关系的字典&lt;/li>
&lt;/ul>
&lt;p>python表达式可以访问全局/局部命名空间，重名时局部命名空间优先。
使用&lt;code>global&lt;/code>语句可以告诉python变量属于全局变量。ex.&lt;code>global x&lt;/code>&lt;/p>
&lt;h3 id="导入本地自定义包">导入本地自定义包&lt;/h3>
&lt;p>文件结构&lt;/p>
&lt;pre tabindex="0">&lt;code>main.py
package
|--__init__.py
|--module1.py
|--module2.py
&lt;/code>&lt;/pre>&lt;p>包是一个分层次的文件目录结构，它定义了一个由模块及子包，和子包下的子包等组成的 Python 的应用环境。&lt;/p>
&lt;p>简单来说，包就是文件夹，但该文件夹下必须存在&lt;code>__init__.py&lt;/code> 文件, 该文件的内容可以为空。&lt;code>__init__.py&lt;/code> 用于标识当前文件夹是一个包。&lt;/p>
&lt;p>假设&lt;code>module1.py&lt;/code>中有函数&lt;code>func1()&lt;/code>，则在main函数中可以使用以下集中方式进行包导入：&lt;/p>
&lt;ol>
&lt;li>&lt;code>import mymodule.module1&lt;/code>此时对应&lt;code>func1()&lt;/code>的调用为&lt;code>mymodule.module1.func1()&lt;/code>，前缀较长，比较繁琐。&lt;/li>
&lt;li>&lt;code>import mymodule.module1 as m1&lt;/code>此时对应&lt;code>func1()&lt;/code>的调用为&lt;code>m1.func1()&lt;/code>&lt;/li>
&lt;li>&lt;code>from mymodule import module1&lt;/code>此时对应&lt;code>func1()&lt;/code>的调用为&lt;code>module1.func1()&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="集合数据类型">集合数据类型&lt;/h2>
&lt;p>Python 编程语言中有四种集合数据类型：&lt;/p>
&lt;ul>
&lt;li>列表（List）是一种有序和可更改的集合。允许重复的成员。&lt;/li>
&lt;li>元组（Tuple）是一种有序且不可更改的集合。允许重复的成员。&lt;/li>
&lt;li>集合（Set）是一个无序和无索引的集合。没有重复的成员。&lt;/li>
&lt;li>词典（Dictionary）是一个无序，可变和有索引的集合。没有重复的成员。&lt;/li>
&lt;/ul>
&lt;p>选择集合类型时，了解该类型的属性很有用。&lt;/p>
&lt;p>为特定数据集选择正确的类型可能意味着保留含义，并且可能意味着提高效率或安全性。&lt;/p>
&lt;ul>
&lt;li>List
&lt;ul>
&lt;li>&lt;code>thislist = [&amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot;]&lt;/code>&lt;/li>
&lt;li>&lt;code>print(thislist[1])&lt;/code>&lt;/li>
&lt;li>&lt;code>thislist[1] = &amp;quot;mango&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Tuple
&lt;ul>
&lt;li>&lt;code>thistuple = (&amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot;)&lt;/code>&lt;/li>
&lt;li>&lt;code>print(thistuple[1])&lt;/code>&lt;/li>
&lt;li>不可更改，需要转为列表更改后再转回&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Set
&lt;ul>
&lt;li>&lt;code>thisset = {&amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot;}&lt;/code>&lt;/li>
&lt;li>访问项目：
&lt;ul>
&lt;li>您无法通过引用索引来访问 &lt;code>set&lt;/code> 中的项目，因为 &lt;code>set&lt;/code> 是无序的，项目没有索引。&lt;/li>
&lt;li>但是您可以使用 &lt;code>for&lt;/code> 循环遍历 &lt;code>set&lt;/code> 项目，或者使用 &lt;code>in&lt;/code> 关键字查询集合中是否存在指定值。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>要将一个项添加到集合，请使用 &lt;code>add()&lt;/code> 方法。&lt;/li>
&lt;li>要向集合中添加多个项目，请使用 &lt;code>update()&lt;/code> 方法。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Dictionary
&lt;ul>
&lt;li>创建字典
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-py" data-lang="py">&lt;span class="n">thisdict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;brand&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Porsche&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;model&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;911&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;year&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1963&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;code>x = thisdict[&amp;quot;model&amp;quot;]&lt;/code> or &lt;code>x = thisdict.get(&amp;quot;model&amp;quot;)&lt;/code>&lt;/li>
&lt;li>thisdict[&amp;ldquo;year&amp;rdquo;] = 2019&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="virtual-environment">Virtual Environment&lt;/h2>
&lt;h3 id="安装虚拟环境">安装虚拟环境&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">PS D:&lt;span class="se">\W&lt;/span>ork&lt;span class="se">\0&lt;/span>&lt;span class="m">4&lt;/span> Research Project&lt;span class="se">\2&lt;/span>1.08.19 Early Visual Processing&lt;span class="se">\p&lt;/span>yspice&amp;gt; pip install virtualenv
Collecting virtualenv
&lt;span class="p">|&lt;/span>████████████████████████████████&lt;span class="p">|&lt;/span> 5.6 MB 6.4 MB/s
Collecting filelock&amp;lt;4,&amp;gt;&lt;span class="o">=&lt;/span>3.2
Downloading filelock-3.4.0-py3-none-any.whl &lt;span class="o">(&lt;/span>9.8 kB&lt;span class="o">)&lt;/span>
Collecting backports.entry-points-selectable&amp;gt;&lt;span class="o">=&lt;/span>1.0.4
Downloading backports.entry_points_selectable-1.1.1-py2.py3-none-any.whl &lt;span class="o">(&lt;/span>6.2 kB&lt;span class="o">)&lt;/span>
Collecting platformdirs&amp;lt;3,&amp;gt;&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span>
Downloading platformdirs-2.4.0-py3-none-any.whl &lt;span class="o">(&lt;/span>&lt;span class="m">14&lt;/span> kB&lt;span class="o">)&lt;/span>
Collecting distlib&amp;lt;1,&amp;gt;&lt;span class="o">=&lt;/span>0.3.1
&lt;span class="p">|&lt;/span>████████████████████████████████&lt;span class="p">|&lt;/span> &lt;span class="m">496&lt;/span> kB 1.6 MB/s
Requirement already satisfied: six&amp;lt;2,&amp;gt;&lt;span class="o">=&lt;/span>1.9.0 in c:&lt;span class="se">\p&lt;/span>rogramming&lt;span class="se">\p&lt;/span>ython&lt;span class="se">\l&lt;/span>ib&lt;span class="se">\s&lt;/span>ite-packages &lt;span class="o">(&lt;/span>from virtualenv&lt;span class="o">)&lt;/span> &lt;span class="o">(&lt;/span>1.16.0&lt;span class="o">)&lt;/span>
Installing collected packages: platformdirs, filelock, distlib, backports.entry-points-selectable, virtualenv
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建虚拟环境">创建虚拟环境&lt;/h3>
&lt;p>&lt;code>virtualenv myvenv&lt;/code>，可选参数：&lt;/p>
&lt;ul>
&lt;li>&lt;code>--no-site-packages&lt;/code>：创建虚拟环境时，不复制主环境中安装的第三方包，也就是创建一个 “干净的” 虚拟环境&lt;/li>
&lt;li>&lt;code>-p&lt;/code>：用于指定 Python 解析器，就是安装好的 Python 应用程序，默认为当前环境中的 Python&lt;/li>
&lt;li>&lt;code>--no-pip&lt;/code>：不需要安装 pip，默认为安装&lt;/li>
&lt;li>&lt;code>--clear&lt;/code>：如果创建虚拟环境的目录已经有了其他虚拟环境，清除重建&lt;/li>
&lt;/ul>
&lt;h3 id="激活虚拟环境">激活虚拟环境&lt;/h3>
&lt;p>虚拟环境创建好后，需要激活才能在当前命令行中使用，可以理解成将当前命令行环境中 PATH 变量的值替换掉&lt;/p>
&lt;p>通过 virtualenv 和 模块 venv 创建的虚拟环境，激活方式是一样的，即运行激活脚本&lt;/p>
&lt;ul>
&lt;li>Windows 系统中，激活脚本路径是 &lt;code>&amp;lt;myvenv&amp;gt;\Scripts\activate.bat&lt;/code>，如果是 powershell 命令行，脚本换成 &lt;code>Activate.ps1&lt;/code> , 注意将 &lt;!-- raw HTML omitted -->换成你自己的虚拟环境目录&lt;/li>
&lt;li>Linux 系统中，激活脚本路径是 &lt;code>&amp;lt;myvenv&amp;gt;/bin/activate&lt;/code>，默认脚本没有执行权限，要么设置脚本为可执行，要么用 &lt;code>source&lt;/code> 命令执行&lt;/li>
&lt;/ul>
&lt;p>激活后，可以查看&lt;code>PATH&lt;/code>变量 &lt;code>echo %PATH%&lt;/code>&lt;/p>
&lt;h3 id="退出虚拟环境">退出虚拟环境&lt;/h3>
&lt;p>退出虚拟环境很简单，只需要执行 &lt;code>deactivate&lt;/code> 命令就行，这个命令也在虚拟环境的脚本目录下，因为激活时，将脚本目录设置到 &lt;code>PATH&lt;/code> 中了，所以可以直接使用&lt;/p>
&lt;p>退出虚拟环境相当于将 &lt;code>PATH&lt;/code> 恢复成原来的&lt;/p>
&lt;h2 id="minutiae">Minutiae&lt;/h2>
&lt;ul>
&lt;li>Python does not have &lt;code>switch&lt;/code> statement. Use dict instead.&lt;/li>
&lt;li>autopep8 auto line feed:
&lt;ul>
&lt;li>Python编码风格指导(PEP8)要求每行代码不得超过80个字符。而VSCode+Pyhon常用代码检查工具是pylint和flake8，常用代码格式化工具是yapf、autopep8和black。针对代码过长导致格式化时自动换行，应在setting.json中修改格式化工具的每行最大字符个数。
&lt;pre tabindex="0">&lt;code>// autopep8
&amp;quot;python.formatting.provider&amp;quot;: &amp;quot;autopep8&amp;quot;,
&amp;quot;python.formatting.autopep8Args&amp;quot;: [
&amp;quot;--max-line-length=200&amp;quot;
],
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>exec&lt;/code> 执行储存在字符串或文件中的 Python 语句，相比于 &lt;code>eval&lt;/code>，&lt;code>exec&lt;/code>可以执行更复杂的 Python 代码&lt;/li>
&lt;/ul>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;p>(W3School Python 教程)[https://www.w3school.com.cn/python/index.asp]&lt;/p></description></item><item><title>大创对话系统21.11.22组会</title><link>https://comfluter.life/p/%E5%A4%A7%E5%88%9B%E5%AF%B9%E8%AF%9D%E7%B3%BB%E7%BB%9F21.11.22%E7%BB%84%E4%BC%9A/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%A4%A7%E5%88%9B%E5%AF%B9%E8%AF%9D%E7%B3%BB%E7%BB%9F21.11.22%E7%BB%84%E4%BC%9A/</guid><description>&lt;h2 id="问题">问题&lt;/h2>
&lt;ol>
&lt;li>设备选择：
&lt;ol>
&lt;li>主要参数：内存 GPU&lt;/li>
&lt;li>设备：jetson更好
&lt;ol>
&lt;li>树莓派算力有限，人工智能框架支持不官方&lt;/li>
&lt;li>jetson有关方支持&lt;/li>
&lt;li>tensor+树莓派能媲美jetson+tensor&lt;/li>
&lt;li>IO口&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Tod-BERT fine tune
&lt;ol>
&lt;li>精调后的inference time &amp;amp; 内存占用？&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>ToD-inference time 单位？&lt;/li>
&lt;/ol>
&lt;h2 id="任务">任务&lt;/h2>
&lt;ol>
&lt;li>树莓派装pytorch&lt;/li>
&lt;li>ToD-BERT 在树莓派上训练、推理&lt;/li>
&lt;li>ToD-BERT fine tune&lt;/li>
&lt;li>ToD-BERT inference time
&lt;ol>
&lt;li>想测在一个卡上batch size = 1时候的推理时间&lt;/li>
&lt;li>&lt;code>cuda.event&lt;/code>时间数值的单位？&lt;/li>
&lt;li>&lt;code>time&lt;/code>包中测出来的时间？ 10ms级别&lt;/li>
&lt;li>使用&lt;code>time&lt;/code>包测量的方法
&lt;ol>
&lt;li>&lt;figure
class="gallery-image"
style="
flex-grow: 194;
flex-basis: 467px"
>
&lt;a href="https://comfluter.life/p/%E5%A4%A7%E5%88%9B%E5%AF%B9%E8%AF%9D%E7%B3%BB%E7%BB%9F21.11.22%E7%BB%84%E4%BC%9A/1.png" data-size="678x348">
&lt;img src="https://comfluter.life/p/%E5%A4%A7%E5%88%9B%E5%AF%B9%E8%AF%9D%E7%B3%BB%E7%BB%9F21.11.22%E7%BB%84%E4%BC%9A/1.png"
width="678"
height="348"
srcset="https://comfluter.life/p/%E5%A4%A7%E5%88%9B%E5%AF%B9%E8%AF%9D%E7%B3%BB%E7%BB%9F21.11.22%E7%BB%84%E4%BC%9A/1_hu0ba1bded01dad50e4947996634712043_24060_480x0_resize_box_3.png 480w, https://comfluter.life/p/%E5%A4%A7%E5%88%9B%E5%AF%B9%E8%AF%9D%E7%B3%BB%E7%BB%9F21.11.22%E7%BB%84%E4%BC%9A/1_hu0ba1bded01dad50e4947996634712043_24060_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>服务器CPU运行测量 training
&lt;ol>
&lt;li>限制CPU核心数量4&lt;/li>
&lt;li>batch size = 1，2，4&lt;/li>
&lt;li>重新配置conda环境，安装CPU版本pytorch
&lt;ol>
&lt;li>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/94744929" target="_blank" rel="noopener"
>配置conda环境教程&lt;/a>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>用&lt;code>time&lt;/code>模块测量&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>立项答辩
&lt;ol>
&lt;li>&lt;strong>突出动机&lt;/strong>&lt;/li>
&lt;li>抓住评委兴趣&lt;/li>
&lt;li>语速、文字减少，减少技术细节&lt;/li>
&lt;li>突出重音、重点&lt;/li>
&lt;li>每人提2条意见&lt;/li>
&lt;li>应用场景&lt;/li>
&lt;li>边缘端部署
&lt;ol>
&lt;li>内存需求&lt;/li>
&lt;li>算力需求&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol></description></item><item><title>ToD-BERT 相关内容</title><link>https://comfluter.life/p/tod-bert-%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/tod-bert-%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/</guid><description>&lt;h2 id="在服务器上运行tod-bert训练">在服务器上运行ToD-BERT训练&lt;/h2>
&lt;ol>
&lt;li>进入服务器，激活环境&lt;code>source activate todbert_env&lt;/code>&lt;/li>
&lt;li>进入/media/HD1/dche/ToD-BERT文件夹&lt;code>cd /media/HD1/dche/ToD-BERT&lt;/code>&lt;/li>
&lt;li>查看GPU资源占用情况&lt;code>nvidia-smi&lt;/code>，然后选择目前占用情况较低的一张GPU进行训练即可&lt;/li>
&lt;li>运行训练shell脚本文件&lt;code>CUDA_VISIBLE_DEVICES=0 ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-MLM --only_last_turn --data_path ./../dialog_datasets&lt;/code>。根据第三步选择的几号卡，就把对应的0改成几，此处默认单卡训练。如果一切正常的话，再读入数据集数据后，就会开始训练了，有进度条出现就Ok了。常见的没跑起来的情况是CUDA out of memory。&lt;/li>
&lt;/ol>
&lt;h2 id="tod-bert本地调用">ToD-BERT本地调用&lt;/h2>
&lt;ol>
&lt;li>将ToD-BERT模型下载至本地&lt;/li>
&lt;li>包含ToD-BERT所需的python包，并定义模型路径
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">torch&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">transformers&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;span class="n">BERT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">path_to_the_downloaded_tod&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">bert&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="c1"># 注意此处的路径要使用从根目录开始的绝对路径，而非从用户~目录开始的相对路径。&lt;/span>
&lt;span class="n">model_class&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tokenizer_class&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">config_class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BertModel&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">BertTokenizer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">BertConfig&lt;/span>
&lt;span class="n">tokenizer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tokenizer_class&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_pretrained&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">BERT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">tod_bert&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">model_class&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_pretrained&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">BERT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>使用ToD-BERT文档中的示例
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Encode text &lt;/span>
&lt;span class="n">input_text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;[CLS] [SYS] Hello, what can I help with you today? [USR] Find me a cheap restaurant nearby the north town.&amp;#34;&lt;/span>
&lt;span class="n">input_tokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tokenizer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tokenize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">input_text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">story&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Tensor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tokenizer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">convert_tokens_to_ids&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">input_tokens&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">long&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">story&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">story&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">story&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">unsqueeze&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># batch size dimension&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_available&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="n">tod_bert&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tod_bert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">story&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">story&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">with&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">no_grad&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="n">input_context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;input_ids&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">story&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;attention_mask&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">story&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">long&lt;/span>&lt;span class="p">()}&lt;/span>
&lt;span class="n">hiddens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tod_bert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="n">input_context&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="计算tod-bert推理时间延迟">计算ToD-BERT推理时间延迟&lt;/h2>
&lt;h3 id="如何正确地计算">如何正确地计算&lt;/h3>
&lt;p>&lt;a class="link" href="https://www.jianshu.com/p/9b9d6782f90b" target="_blank" rel="noopener"
>深度学习中如何正确地measure inference time&lt;/a>&lt;/p>
&lt;p>问题：&lt;/p>
&lt;ol>
&lt;li>在进行多batch训练或推理的时候，batch1被送进GPU后，CPU由于异步执行，不再等待batch1在GPU内执行完毕，而是直接对batch2进行预处理，此时若使用python的time库，停止计算时间的代码将在GPU执行完毕前被执行，导致时长计算错误。&lt;/li>
&lt;li>GPU在不工作时将关掉许多硬件模块，在调用GPU时需要重新初始化（GPU预热），占用大量时间，导致时间测算错误。&lt;/li>
&lt;/ol>
&lt;p>解决方法：&lt;/p>
&lt;ol>
&lt;li>在真正需要的example前运行几个example，使得GPU不再处于省电模式。&lt;/li>
&lt;li>使用&lt;code>tr.cuda.event&lt;/code>，在GPU上测量时间&lt;/li>
&lt;li>使用函数&lt;code>torch.cuda.synchronize()&lt;/code>，使得CPU和GPU工作在同步执行模式。&lt;/li>
&lt;/ol>
&lt;h3 id="在服务器上进行inference并计算inference时间">在服务器上进行inference并计算inference时间&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>在&lt;code>run_tod_lm_pretraining.sh&lt;/code>文件中修改&lt;code>batch size = 1&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nv">gpu&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$1&lt;/span>
&lt;span class="nv">model_type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$2&lt;/span>
&lt;span class="nv">bert_dir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$3&lt;/span>
&lt;span class="nv">output_dir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$4&lt;/span>
&lt;span class="nv">add1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$5&lt;/span>
&lt;span class="nv">add2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$6&lt;/span>
&lt;span class="nv">add3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$7&lt;/span>
&lt;span class="nv">add4&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$8&lt;/span>
&lt;span class="nv">add5&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$9&lt;/span>
&lt;span class="c1"># ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-MLM --only_last_turn&lt;/span>
&lt;span class="c1"># ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-JNT --only_last_turn --add_rs_loss&lt;/span>
&lt;span class="nv">CUDA_VISIBLE_DEVICES&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span> python my_tod_pretraining.py &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --task&lt;span class="o">=&lt;/span>usdl &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --model_type&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">model_type&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --model_name_or_path&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">bert_dir&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --output_dir&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">output_dir&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --do_train &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --do_eval &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --mlm &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --do_lower_case &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --evaluate_during_training &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --save_steps&lt;span class="o">=&lt;/span>&lt;span class="m">2500&lt;/span> --logging_steps&lt;span class="o">=&lt;/span>&lt;span class="m">1000&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --per_gpu_train_batch_size&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> --per_gpu_eval_batch_size&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">add1&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">add2&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">add3&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">add4&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">add5&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用上文办法，在&lt;code>my_tod_pretraining.py&lt;/code>中引入计时相关语句：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1">## with only MLM loss&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">starter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ender&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Event&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">enable_timing&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Event&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">enable_timing&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">inputs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">batch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;context&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">clone&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mlm&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">inputs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">labels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mask_tokens&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">inputs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tokenizer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">inputs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">inputs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">device&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">labels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">labels&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">device&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">starter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">outputs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">inputs&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">masked_lm_labels&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">labels&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">attention_mask&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">inputs&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ender&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1"># WAIT FOR GPU SYNC&lt;/span>
&lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">synchronize&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">curr_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">starter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">elapsed_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ender&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">curr_time&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>由于训练时间较长，使用&lt;code>tmux&lt;/code>命令：&lt;code>tmux new -s inference_time_measure&lt;/code>，进入tmux回话后还需要重新激活虚拟环境。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="se">\(&lt;/span>base&lt;span class="o">)&lt;/span> dialogue@amax-13:/media/HD1/dche/ToD-BERT$ &lt;span class="nv">CUDA_VISIBLE_DEVICES&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> ./run_tod_lm_pretraining.sh &lt;span class="m">0&lt;/span> bert bert-base-uncased save/prtrain/ToD-BERT-MLM --only_last_turn --data_path ./../dialog_datasets
Traceback &lt;span class="o">(&lt;/span>most recent call last&lt;span class="o">)&lt;/span>:
File &lt;span class="s2">&amp;#34;/media/HD1/dche/ToD-BERT/my_tod_pretraining.py&amp;#34;&lt;/span>, line 16, in &amp;lt;module&amp;gt;
import numpy as np
ModuleNotFoundError: No module named &lt;span class="s1">&amp;#39;numpy&amp;#39;&lt;/span>
&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> dialogue@amax-13:/media/HD1/dche/ToD-BERT$ conda info --env
&lt;span class="c1"># conda environments:&lt;/span>
&lt;span class="c1">#&lt;/span>
base * /media/HD1/dche/miniconda3
sum_env /media/HD1/dche/miniconda3/envs/sum_env
tod_bert /media/HD1/dche/miniconda3/envs/tod_bert
/media/HD1/miniconda3
&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> dialogue@amax-13:/media/HD1/dche/ToD-BERT$ conda activate tod_bert
&lt;span class="o">(&lt;/span>tod_bert&lt;span class="o">)&lt;/span> dialogue@amax-13:/media/HD1/dche/ToD-BERT$ &lt;span class="nv">CUDA_VISIBLE_DEVICES&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> ./run_tod_lm_pretraining.sh &lt;span class="m">0&lt;/span> bert bert-base-uncased save/pretrain/ToD-BERT-MLM --only_last_turn --data_path ./../dialog_datasets
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>进行训练，观察输出结果 &lt;code>CUDA_VISIBLE_DEVICES=0 ./run_tod_lm_pretraining.sh 0 bert bert-base-uncased save/pretrain/ToD-BERT-MLM --only_last_turn --data_path ./../dialog_datasets&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>训练过程中可以使用&lt;code>crtl+b d&lt;/code>从会话中分离&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">(&lt;/span>tod_bert&lt;span class="o">)&lt;/span> dialogue@amax-13:/media/HD1/dche/ToD-BERT$ tmux new -s inference_time_measure
&lt;span class="o">[&lt;/span>detached &lt;span class="o">(&lt;/span>from session inference_time_measure&lt;span class="o">)]&lt;/span>
&lt;span class="o">(&lt;/span>tod_bert&lt;span class="o">)&lt;/span> dialogue@amax-13:/media/HD1/dche/ToD-BERT$
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>可以查看当前的tmux会话并连接&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">(&lt;/span>tod_bert&lt;span class="o">)&lt;/span> dialogue@amax-13:/media/HD1/dche/ToD-BERT$ tmux ls
inference_time_measure: &lt;span class="m">1&lt;/span> windows &lt;span class="o">(&lt;/span>created Sun Nov &lt;span class="m">21&lt;/span> 23:26:48 2021&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>134x33&lt;span class="o">]&lt;/span>
zym1: &lt;span class="m">1&lt;/span> windows &lt;span class="o">(&lt;/span>created Sun Nov &lt;span class="m">21&lt;/span> 18:34:03 2021&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>148x45&lt;span class="o">]&lt;/span>
zym2: &lt;span class="m">1&lt;/span> windows &lt;span class="o">(&lt;/span>created Sun Nov &lt;span class="m">21&lt;/span> 18:34:44 2021&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>113x12&lt;span class="o">]&lt;/span>
&lt;span class="o">(&lt;/span>tod_bert&lt;span class="o">)&lt;/span> dialogue@amax-13:/media/HD1/dche/ToD-BERT$ tmux attach -t inference_time_measure
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>为了便于记录inference time，可以将bash命令中的输出全部写入txt文件，&lt;code>script -a 1.txt&lt;/code>，则之后shell中所有文字都将被记录在&lt;code>1.txt&lt;/code>中。&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>在Nginx服务器上部署SSL证书</title><link>https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/</guid><description>&lt;h2 id="申请证书">申请证书&lt;/h2>
&lt;p>在腾讯云SSL证书界面申请即可，过程很快，十分钟就通知证书申请成功。&lt;/p>
&lt;h2 id="下载证书并上传至云服务器">下载证书并上传至云服务器&lt;/h2>
&lt;p>在腾讯云SSL证书面板，找到要部署网站的证书，点击右侧的下载按钮即可下载&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 176;
flex-basis: 423px"
>
&lt;a href="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/1.jpg" data-size="2736x1550">
&lt;img src="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/1.jpg"
width="2736"
height="1550"
srcset="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/1_huc70d1ace7178234db90a2009528b06e2_362037_480x0_resize_q75_box.jpg 480w, https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/1_huc70d1ace7178234db90a2009528b06e2_362037_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="SSL证书面板">
&lt;/a>
&lt;figcaption>SSL证书面板&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>zip包文件结构：&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 128;
flex-basis: 308px"
>
&lt;a href="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/2.jpg" data-size="342x266">
&lt;img src="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/2.jpg"
width="342"
height="266"
srcset="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/2_hua5d80ebc9a0a7e639306a0621ea97d51_18720_480x0_resize_q75_box.jpg 480w, https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/2_hua5d80ebc9a0a7e639306a0621ea97d51_18720_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="zip_struct">
&lt;/a>
&lt;figcaption>zip_struct&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>由于使用Nginx服务器，需要使用的文件全部放在Nginx文件夹下：&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 397;
flex-basis: 954px"
>
&lt;a href="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/3.jpg" data-size="366x92">
&lt;img src="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/3.jpg"
width="366"
height="92"
srcset="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/3_huaec6fc8956754b71ff02d1c9284335d0_10544_480x0_resize_q75_box.jpg 480w, https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/3_huaec6fc8956754b71ff02d1c9284335d0_10544_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>将这两个文件复制到服务器Nginx安装路径下，我服务器上的安装路径为&lt;code>/etc/nginx&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">root@VM-24-3-ubuntu:/# mv /home/ubuntu/download/1_comfluter.life_bundle.crt /etc/nginx
root@VM-24-3-ubuntu:/# mv /home/ubuntu/download/2_comfluter.life.key /etc/nginx
root@VM-24-3-ubuntu:/# &lt;span class="nb">cd&lt;/span> /etc/nginx
root@VM-24-3-ubuntu:/etc/nginx# ll -s
total &lt;span class="m">80&lt;/span>
&lt;span class="m">4&lt;/span> drwxr-xr-x &lt;span class="m">8&lt;/span> root root &lt;span class="m">4096&lt;/span> Nov &lt;span class="m">21&lt;/span> 10:05 ./
&lt;span class="m">4&lt;/span> drwxr-xr-x &lt;span class="m">115&lt;/span> root root &lt;span class="m">4096&lt;/span> Nov &lt;span class="m">15&lt;/span> 15:50 ../
&lt;span class="m">4&lt;/span> -rw-rw-r-- &lt;span class="m">1&lt;/span> ubuntu ubuntu &lt;span class="m">3921&lt;/span> Nov &lt;span class="m">21&lt;/span> 08:37 1_comfluter.life_bundle.crt
&lt;span class="m">4&lt;/span> -rw-rw-r-- &lt;span class="m">1&lt;/span> ubuntu ubuntu &lt;span class="m">1700&lt;/span> Nov &lt;span class="m">21&lt;/span> 08:37 2_comfluter.life.key
&lt;span class="m">4&lt;/span> drwxr-xr-x &lt;span class="m">2&lt;/span> root root &lt;span class="m">4096&lt;/span> Nov &lt;span class="m">15&lt;/span> 16:48 conf.d/
&lt;span class="m">4&lt;/span> -rw-r--r-- &lt;span class="m">1&lt;/span> root root &lt;span class="m">1077&lt;/span> Feb &lt;span class="m">4&lt;/span> &lt;span class="m">2019&lt;/span> fastcgi.conf
&lt;span class="m">4&lt;/span> -rw-r--r-- &lt;span class="m">1&lt;/span> root root &lt;span class="m">1007&lt;/span> Feb &lt;span class="m">4&lt;/span> &lt;span class="m">2019&lt;/span> fastcgi_params
&lt;span class="m">4&lt;/span> -rw-r--r-- &lt;span class="m">1&lt;/span> root root &lt;span class="m">2837&lt;/span> Feb &lt;span class="m">4&lt;/span> &lt;span class="m">2019&lt;/span> koi-utf
&lt;span class="m">4&lt;/span> -rw-r--r-- &lt;span class="m">1&lt;/span> root root &lt;span class="m">2223&lt;/span> Feb &lt;span class="m">4&lt;/span> &lt;span class="m">2019&lt;/span> koi-win
&lt;span class="m">4&lt;/span> -rw-r--r-- &lt;span class="m">1&lt;/span> root root &lt;span class="m">3957&lt;/span> Feb &lt;span class="m">4&lt;/span> &lt;span class="m">2019&lt;/span> mime.types
&lt;span class="m">4&lt;/span> drwxr-xr-x &lt;span class="m">2&lt;/span> root root &lt;span class="m">4096&lt;/span> May &lt;span class="m">26&lt;/span> 01:10 modules-available/
&lt;span class="m">4&lt;/span> drwxr-xr-x &lt;span class="m">2&lt;/span> root root &lt;span class="m">4096&lt;/span> Nov &lt;span class="m">15&lt;/span> 15:50 modules-enabled/
&lt;span class="m">4&lt;/span> -rw-r--r-- &lt;span class="m">1&lt;/span> root root &lt;span class="m">1512&lt;/span> Nov &lt;span class="m">15&lt;/span> 16:53 nginx.conf
&lt;span class="m">4&lt;/span> -rw-r--r-- &lt;span class="m">1&lt;/span> root root &lt;span class="m">180&lt;/span> Feb &lt;span class="m">4&lt;/span> &lt;span class="m">2019&lt;/span> proxy_params
&lt;span class="m">4&lt;/span> -rw-r--r-- &lt;span class="m">1&lt;/span> root root &lt;span class="m">636&lt;/span> Feb &lt;span class="m">4&lt;/span> &lt;span class="m">2019&lt;/span> scgi_params
&lt;span class="m">4&lt;/span> drwxr-xr-x &lt;span class="m">2&lt;/span> root root &lt;span class="m">4096&lt;/span> Nov &lt;span class="m">15&lt;/span> 16:40 sites-available/
&lt;span class="m">4&lt;/span> drwxr-xr-x &lt;span class="m">2&lt;/span> root root &lt;span class="m">4096&lt;/span> Nov &lt;span class="m">15&lt;/span> 16:48 sites-enabled/
&lt;span class="m">4&lt;/span> drwxr-xr-x &lt;span class="m">2&lt;/span> root root &lt;span class="m">4096&lt;/span> Nov &lt;span class="m">15&lt;/span> 15:50 snippets/
&lt;span class="m">4&lt;/span> -rw-r--r-- &lt;span class="m">1&lt;/span> root root &lt;span class="m">664&lt;/span> Feb &lt;span class="m">4&lt;/span> &lt;span class="m">2019&lt;/span> uwsgi_params
&lt;span class="m">4&lt;/span> -rw-r--r-- &lt;span class="m">1&lt;/span> root root &lt;span class="m">3071&lt;/span> Feb &lt;span class="m">4&lt;/span> &lt;span class="m">2019&lt;/span> win-utf
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="编辑nginx服务器配置">编辑Nginx服务器配置&lt;/h2>
&lt;p>更改&lt;code>/etc/nginx/sites-enabled&lt;/code>下服务器配置文件：&lt;/p>
&lt;pre tabindex="0">&lt;code>server {
listen 443 ssl;
#填写绑定证书的域名
server_name comfluter.life;
#证书文件名称
ssl_certificate 1_comfluter.life_bundle.crt;
#私钥文件名称
ssl_certificate_key 2_comfluter.life.key;
ssl_session_timeout 5m;
ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
location / {
#网站主页路径。此路径仅供参考，具体请您按照实际目录操作。
#例如，您的网站运行目录在/etc/www下，则填写/etc/www。
root /home/ubuntu/www/Blogs/Personal;
index index.html index.htm;
}
}
server {
listen 80;
#填写绑定证书的域名
server_name comfluter.life;
#把http的域名请求转成https
return 301 https://$host$request_uri;
}
&lt;/code>&lt;/pre>&lt;p>配置中前半部分为https网页服务，后半部分为将http请求重定向至https请求&lt;/p>
&lt;p>验证配置文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">root@VM-24-3-ubuntu:/etc/nginx# nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf &lt;span class="nb">test&lt;/span> is successful
&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启Nginx服务器：&lt;code>nginx -s reload&lt;/code>&lt;/p>
&lt;h2 id="https访问">https访问！&lt;/h2>
&lt;p>此时输入&lt;code>comfluter.life&lt;/code>访问时即可看到已经是https连接&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 657;
flex-basis: 1577px"
>
&lt;a href="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/4.jpg" data-size="368x56">
&lt;img src="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/4.jpg"
width="368"
height="56"
srcset="https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/4_hud9da19d6fc0e32acb5a778f763005686_6410_480x0_resize_q75_box.jpg 480w, https://comfluter.life/p/%E5%9C%A8nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2ssl%E8%AF%81%E4%B9%A6/4_hud9da19d6fc0e32acb5a778f763005686_6410_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h2 id="debugging">Debugging&lt;/h2>
&lt;p>更改成为https连接后博客的搜索功能出现问题，浏览器提示提交的表单不安全并阻止了搜索表单的提交。问题在于没有更改hugo博客配置文件中的&lt;code>baseURL&lt;/code>字段，将其改为&lt;code>baseurl: https://comfluter.life&lt;/code>即可解决。&lt;/p></description></item><item><title>重听《成像世界的奇境》</title><link>https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/</guid><description>&lt;h2 id="211122-锁链">21.11.22 锁链&lt;/h2>
&lt;ul>
&lt;li>香农-奈奎斯特采样定律&lt;/li>
&lt;li>测量：测不准原理
&lt;ul>
&lt;li>高速成像：
&lt;ul>
&lt;li>STEAM：10e-10 second 时间分辨率&lt;/li>
&lt;li>STAMP：10e-12 second&lt;/li>
&lt;li>最先进：10e-15 second 接近电子转移过程的时长！&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="information-in-imaging">information in imaging&lt;/h3>
&lt;ul>
&lt;li>香农：硕士论文：信息学开山
&lt;ul>
&lt;li>做一些无聊的事？还是有自己独特的思考？&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>yes and no question
How many questions (y/n) must you ask to ensure the color of the ball you have?&lt;/p>
&lt;ol>
&lt;li>8 red balls?&lt;/li>
&lt;li>4 red &amp;amp; 2 blue &amp;amp; 1 black &amp;amp; 1 white?&lt;/li>
&lt;li>2 red &amp;amp; 2 blue &amp;amp; 2 black &amp;amp; 2 white?&lt;/li>
&lt;/ol>
&lt;h4 id="香农信息熵">香农信息熵&lt;/h4>
&lt;p>傅里叶变换的信息损失？&lt;/p>
&lt;ul>
&lt;li>取傅里叶变换的过程中，可以有位深&lt;/li>
&lt;li>二维傅里叶变换，可以通过幅度反演相位&lt;/li>
&lt;li>取傅里叶变换再取反变换？相似度有多高？
&lt;ul>
&lt;li>SSMS&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>傅里叶变换过后低频信息密集，高频信息稀疏。&lt;/li>
&lt;/ul>
&lt;p>JPEG压缩：压缩低频信息，让步给高频信息&lt;/p>
&lt;p>Signal Sparsity
图像中不是每一个频率都要进行采样！可以抽出傅里叶变换中影响比较大的信息量。&lt;/p>
&lt;ul>
&lt;li>Compressive sensing
&lt;ul>
&lt;li>通过采样稀疏的键值信号，尽可能好地还原信号&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="211129-law-of-imaging-measurement-and-statistics">21.11.29 Law of Imaging: Measurement and statistics&lt;/h2>
&lt;h3 id="噪声">噪声&lt;/h3>
&lt;h4 id="photon-noise">Photon Noise&lt;/h4>
&lt;p>光子数量越多，相对噪声数量越来越少。&lt;/p>
&lt;p>光子随机到达，符合泊松分布$P(X=k) = \frac{\lambda^k\cdot e^{-\lambda}}{k!}$，误差与光子数量的根号成正比。&lt;/p>
&lt;p>但是，噪声如果与信号产生共振，可以使得信号的阈值降低。&lt;code>Stochastic resonance&lt;/code>&lt;/p>
&lt;p>photons: bunched? antibunched? &amp;ndash;&amp;gt; &lt;strong>bunched!&lt;/strong>. 探测到/不探测到光子的概率符合二项式分布。&lt;/p>
&lt;p>所有基本粒子，按照自旋数区分：&lt;/p>
&lt;ol>
&lt;li>整数自旋：费米子，满足泡利不相容原理，不能同时出现&lt;/li>
&lt;li>$\frac{1}{2}$自旋：玻色子，不满足不相容原理，两离子可以同时出现在同一位置，符合波色-爱因斯坦分布。&lt;/li>
&lt;/ol>
&lt;p>光子，若$hv \leq kT$，则波动性更强，反之粒子性更强。&lt;/p>
&lt;p>&lt;strong>如何使随机光变得更均匀？&lt;/strong>
加一“挡板”，收到光子就短时屏蔽掉后来的光子。&lt;code>Sub-Possion Light&lt;/code>光子噪声更低，测到的相对噪声远低于普通光源。此技术应用于引力波探测，减少激光束的噪声误差。&lt;/p>
&lt;p>&lt;code>DOI: 10.1063/1.881246&lt;/code>&lt;/p>
&lt;h4 id="signal-to-noise-ratio-snr">Signal to Noise Ratio &lt;code>SNR&lt;/code>&lt;/h4>
&lt;p>对于光：$SNR = \frac{N_S}{\sqrt{N_S}}$（不考虑sensor noise）&lt;/p>
&lt;p>光处于粒子态与波动态时的信噪比不同，因此探测量也不同：光：光子个数，波：幅度。&lt;/p>
&lt;h3 id="information-capacity-of-imagers">Information Capacity of Imagers&lt;/h3>
&lt;p>香农定理：$C = \frac{B}{2} \log_2(1+\frac{S}{N})$，对于每个信道。&lt;/p>
&lt;p>空间带宽积：$SBP = \frac{A}{G^2}$&lt;/p>
&lt;p>所以可以推出相机最大成像信息量：$Capacity = \frac{A}{G^2} R \frac{B}{2} \log_2(1+\frac{S}{N})$&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 122;
flex-basis: 294px"
>
&lt;a href="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/1.webp" data-size="941x768">
&lt;img src="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/1.webp"
width="941"
height="768"
srcset="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/1_huff845a9deab670e315861062b94cca69_77664_480x0_resize_q75_h2_box_2.webp 480w, https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/1_huff845a9deab670e315861062b94cca69_77664_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h3 id="information-processing-limit">Information Processing Limit&lt;/h3>
&lt;h4 id="information-and-energy">Information and Energy&lt;/h4>
&lt;p>全互联网数据：175ZB。如此大量信息使得人工智能算法算力需求急速发展，数据分析用电量在急速发展。&lt;/p>
&lt;p>但是，摩尔定律的潜能在耗尽，人类发电量的总量也达到瓶颈。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 119;
flex-basis: 287px"
>
&lt;a href="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/2.webp" data-size="919x768">
&lt;img src="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/2.webp"
width="919"
height="768"
srcset="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/2_hu9dc7bd817cbbd056052bef3db93d718f_66438_480x0_resize_q75_h2_box_2.webp 480w, https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/2_hu9dc7bd817cbbd056052bef3db93d718f_66438_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>&lt;strong>Kardashev Scale&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>文明分级：能量的使用能力。&lt;/li>
&lt;/ul>
&lt;h4 id="information-processing">Information Processing&lt;/h4>
&lt;p>Von-Neumann architecture&lt;/p>
&lt;p>储存墙瓶颈：为了存储数据消耗了大量能量，消耗了大量时间。读、取均是。例如识别Cifar10图像时访问能量是计算能量的10倍以上&lt;/p>
&lt;p>由此可以推算出算力能量效率的极限。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 113;
flex-basis: 271px"
>
&lt;a href="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/3.webp" data-size="870x768">
&lt;img src="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/3.webp"
width="870"
height="768"
srcset="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/3_hu99ed2dcd955eefa5b8b8c3b54d649632_67394_480x0_resize_q75_h2_box_2.webp 480w, https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/3_hu99ed2dcd955eefa5b8b8c3b54d649632_67394_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>512KB 需要 1.8GFLOPS&lt;/p>
&lt;p>Big Data Explosion. 无法应对如此大量的信息。我们必须提升能效。&lt;/p>
&lt;h4 id="ways-to-overcome">Ways to overcome&lt;/h4>
&lt;ol>
&lt;li>器件级存算一体神经网络架构。能量潜力~1000TOPS/W &lt;figure
class="gallery-image"
style="
flex-grow: 121;
flex-basis: 292px"
>
&lt;a href="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/4.webp" data-size="935x768">
&lt;img src="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/4.webp"
width="935"
height="768"
srcset="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/4_hue575c0d42495eb37382aea4c46b6431b_49180_480x0_resize_q75_h2_box_2.webp 480w, https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/4_hue575c0d42495eb37382aea4c46b6431b_49180_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>探索类人眼新形态神经网络结构，充分发挥存算一体器件的优势&lt;/li>
&lt;/ol>
&lt;h3 id="limit-for-computing">Limit for Computing&lt;/h3>
&lt;p>Computing：映射？&lt;/p>
&lt;blockquote>
&lt;p>刘慈欣《三体》：人列计算机？&lt;/p>
&lt;/blockquote>
&lt;p>Turing Computers&lt;/p>
&lt;ul>
&lt;li>input -&amp;gt; compute unit -&amp;gt; output&lt;/li>
&lt;/ul>
&lt;p>Computing unit:&lt;/p>
&lt;ul>
&lt;li>人脑：神经网络：概率&lt;/li>
&lt;li>电脑：冯诺依曼架构：逻辑&lt;/li>
&lt;/ul>
&lt;h4 id="power-consumption">Power Consumption&lt;/h4>
&lt;ul>
&lt;li>input&lt;/li>
&lt;li>output&lt;/li>
&lt;/ul>
&lt;p>Maxwell Demon:信息换能量&lt;/p>
&lt;p>Szilard Engine(1921): Storing or erasing 1 bit of information needs at least $kT \ln 2 $ Joule energy.&lt;/p>
&lt;ul>
&lt;li>Optical Computing
&lt;ul>
&lt;li>Power efficiency could be very low!&lt;/li>
&lt;li>直接操作光子，输入图像输出状态&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Quantum Computing
&lt;ul>
&lt;li>The power efficiency used computing can be negligible.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="noesis">Noesis&lt;/h3>
&lt;p>The chains are made of rubber instead of steel.
Can human beings break the chains and find the way to Noesis?&lt;/p>
&lt;h4 id="question-and-exploration">Question and Exploration&lt;/h4>
&lt;p>Mission of human:&lt;/p>
&lt;ul>
&lt;li>To quest what is known that is unknown.&lt;/li>
&lt;/ul>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 119;
flex-basis: 286px"
>
&lt;a href="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/5.webp" data-size="918x768">
&lt;img src="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/5.webp"
width="918"
height="768"
srcset="https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/5_hu0f8cb17a41cb4513bad2df1adfabea06_54014_480x0_resize_q75_h2_box_2.webp 480w, https://comfluter.life/p/%E9%87%8D%E5%90%AC%E6%88%90%E5%83%8F%E4%B8%96%E7%95%8C%E7%9A%84%E5%A5%87%E5%A2%83/5_hu0f8cb17a41cb4513bad2df1adfabea06_54014_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p></description></item><item><title>Hello, World!</title><link>https://comfluter.life/p/hello-world/</link><pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate><guid>https://comfluter.life/p/hello-world/</guid><description>&lt;img src="https://comfluter.life/p/hello-world/cover.jpg" alt="Featured image of post Hello, World!" />&lt;h2 id="序言">序言&lt;/h2>
&lt;p>在经历许许多多的学习、配置、折腾之后，终于在今天配置好了自己的个人博客。&lt;/p>
&lt;p>在朋友圈、微博盛行的当下，个人博客的风头已过，好像已经是上一个时代的产物了。那么究竟又是什么让我在建站的过程中即使遇到了层层困难，也坚定不移地搭起来这个博客呢？&lt;/p>
&lt;p>第一方面，感觉自己还是需要一个记录与对外表达的窗口。朋友圈等等社交网络固然可以，但是于我来讲似乎显得喧闹了些。我期待的表达，不是浮于表面的事件记录与短暂的情感宣泄。静下心来记录自己成长变化、各阶段真实想法与所思所得才是我我之所需。而这些想法，有时又期待能随时随地回顾，或是与志同道合之人分享。因此介于朋友圈、微博等社交平台与传统纸笔日记之间的个人博客似乎是个不错的选择。从半年前看到王凯师兄的博客便觉心动，到现在终于有了属于自己的一方空间。&lt;/p>
&lt;p>此外，也是最近在学习计算机网络的相关课程。从之前分不清HTTP、URL、TCP等等名词之间的关系的状态一步步地了解了网络的各个方面，而因为课程设计原因深感实践不足。云服务器的配置、连接、博客的搭建与部署、域名的申请与域名解析配置等等正好为动手实践课程内容提供了一个极佳的机会。在搭建服务器、部署博客的过程中也确实不断地将课本中抽象的知识落到实处。&lt;/p>
&lt;p>最后，可能也是最近受龄的影响，觉得自己不能再一天天想着GPA就惶惶不可终日。成天担心对成绩的影响而束手束脚，投入了过多不必要的时间在课业的细枝末节上，生怕漏掉一小点就会有多么大的影响。现在我觉得比较好的态度是：应该投入的时间，我保证投入。除此之外，偶然性是必然有的，考试中等等可能出现的意外情况、偏门的微末之处，实在无必要，也无意义为了它们投入大量的时间。投入了，也不能保证最后的结果。与其如此，正如闫锋老师说的，不如让自己真正做点实在的事出来，在实践中学习，在实践中收获，在主动地做事情的过程当中发挥自己心灵的能动性，让自己过得由己、恣肆、多彩一些。&lt;/p>
&lt;p>因此，也希望这个博客在记录我个人所思所想以外，能够带动我走出一天天为了成绩而焦虑的状态之中，真正地敢于放手去做自己喜欢的事，也才真正能做成自己喜欢的事。&lt;/p>
&lt;h2 id="建站小记">建站小记&lt;/h2>
&lt;ul>
&lt;li>21.11.05 购买腾讯云服务器、购买域名&lt;code>comfluter.life&lt;/code>，熟悉linux服务器操作与hugo工具基本使用&lt;/li>
&lt;li>21.11.13 在询问完王凯师兄hugo博客部署方法以后，学习hugo模板使用与博客搭建、github使用、github actions + 云服务器自动部署。但是卡在了最后一步Nginx服务器配置，使得服务器端页面一直显示404。&lt;/li>
&lt;li>21.11.15 由于Nginx服务器的问题，以及之前摸索阶段各种误操作，决定直接重置腾讯云服务器，将服务器端的功能重新搭建。完成服务器基本设置后激活root账户并配置ssh登录信息，重写了github pages，安装Nginx，以root账户运行，配置Nginx。&lt;/li>
&lt;li>21.11.19 由于使用主题时采用了&lt;code>git submodule&lt;/code>的方式，而github同步时不同步submodule导致各种错误，重新使用&lt;code>git clone&lt;/code>方式引入了主题，重新搭建了博客与github repo，并配置github actions。&lt;/li>
&lt;li>21.11.19 解决github actions css无法加载问题，使用&lt;code>git submodule&lt;/code>直接推送到github pages，但发现问题仍然存在。最终确定问题在baseURL上，改好后部署。&lt;/li>
&lt;li>21.11.19 写下这篇hello world文档。&lt;/li>
&lt;/ul>
&lt;p>动手去做一个项目确实是学习的高效方法。通过搭建博客，至少熟悉了以下内容：&lt;/p>
&lt;ol>
&lt;li>云服务器&lt;/li>
&lt;li>Linux命令行&lt;/li>
&lt;li>git命令行操作&lt;/li>
&lt;li>git submodule&lt;/li>
&lt;li>github全流程&lt;/li>
&lt;li>github pages&lt;/li>
&lt;li>github actions&lt;/li>
&lt;li>hugo使用&lt;/li>
&lt;li>域名配置与域名解析&lt;/li>
&lt;li>防火墙配置&lt;/li>
&lt;li>Nginx服务器搭建&lt;/li>
&lt;/ol>
&lt;p>其中许多是以前多次觉得应该去做，而没多久又半途而废的。放弃的理由大概是陷入极多的知识内容而毫无方向，也就失去了学习的意义，但为了一个目标去做，许多事情就顺理成章了。&lt;/p>
&lt;p>希望以后能以更多项目为依托，让自己不断学习、进步。&lt;/p></description></item></channel></rss>